import{_ as s,c as a,o as n,a as l}from"./app.1650bd79.js";const C=JSON.parse('{"title":"アセットハンドリング","description":"","frontmatter":{},"headers":[{"level":2,"title":"公開ファイル","slug":"公開ファイル","link":"#公開ファイル","children":[]},{"level":2,"title":"ベースURL","slug":"ベースurl","link":"#ベースurl","children":[]}],"relativePath":"translation/vitepress/asset-handling.md","lastUpdated":1676126774000}'),p={name:"translation/vitepress/asset-handling.md"},e=l(`<h1 id="アセットハンドリング" tabindex="-1">アセットハンドリング <a class="header-anchor" href="#アセットハンドリング" aria-hidden="true">#</a></h1><p>すべてのMarkdownファイルは、Vueコンポーネントにコンパイルされ、Viteで処理されます。相対URLでアセットを参照することができますし、そうすべきです。</p><div class="language-md"><button title="Copy Code" class="copy"></button><span class="lang">md</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">![</span><span style="color:#C3E88D;">An image</span><span style="color:#89DDFF;">](</span><span style="color:#A6ACCD;text-decoration:underline;">./image.png</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span></code></pre></div><p>マークダウンファイルの静的アセット、テーマの*.vueコンポーネント、スタイルやプレーンな.cssファイルは、絶対パス（プロジェクトルートを基準とする）または相対パス（ファイルシステムを基準とする）を使用して参照できます。後者は、vue-cliやwebpackのfile-loaderを使用したことがある場合に慣れている動作と似ています。</p><p>一般的な画像、メディア、フォントのファイルタイプは、自動的に検出され、アセットとして含まれます。</p><p>参照されるすべてのアセット（絶対パスを使用するものを含む）は、本番ビルドでハッシュ化されたファイル名を持つdistフォルダにコピーされます。参照されないアセットは、コピーされません。vue-cliと同様に、4kb未満の画像アセットがbase64インライン化されます。</p><p>絶対パスを含むすべての静的なパス参照は、作業ディレクトリ構造に基づいている必要があります。</p><h2 id="公開ファイル" tabindex="-1">公開ファイル <a class="header-anchor" href="#公開ファイル" aria-hidden="true">#</a></h2><p>Markdownやテーマコンポーネントのいずれでも直接参照されない静的資産を提供する必要がある場合があります（例えば、ファビコンやPWAアイコンなど）。プロジェクトルート下のpublicディレクトリ（vitepress build docsを実行している場合はdocsフォルダ）は、ソースコードで参照されない（例：robots.txt）、または全く同じファイル名（ハッシュなし）を保持しなければならない静的資産を提供するための脱出口として使用することができます。</p><p>publicに置かれたアセットは、そのままdistディレクトリのルートにコピーされます。</p><p>publicに配置されたファイルは、ルートの絶対パスで参照することに注意してください。たとえば、public/icon.pngは、ソースコードでは常に/icon.pngとして参照されるべきです。</p><h2 id="ベースurl" tabindex="-1">ベースURL <a class="header-anchor" href="#ベースurl" aria-hidden="true">#</a></h2><p>あなたのサイトを非ルートURLにデプロイする場合、.vitepress/config.js で base オプションを設定する必要があります。たとえば、あなたのサイトを <a href="https://foo.github.io/bar/" target="_blank" rel="noreferrer">https://foo.github.io/bar/</a> にデプロイする予定であれば、base は &#39;/bar/&#39; に設定する必要があります（常にスラッシュで始まり、スラッシュで終わります）。</p><p>すべての静的アセットのパスは、異なるベース設定値に対応するように自動的に処理されます。例えば、マークダウンでpublicの下にあるアセットへの絶対的な参照がある場合、そのアセットへのパスが自動的に処理されます。</p><div class="language-md"><button title="Copy Code" class="copy"></button><span class="lang">md</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">![</span><span style="color:#C3E88D;">An image</span><span style="color:#89DDFF;">](</span><span style="color:#A6ACCD;text-decoration:underline;">/image-inside-public.png</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span></code></pre></div><p>この場合、ベースコンフィグ値を変更した際に更新する必要はありません。</p><p>しかし、アセットに動的にリンクするテーマコンポーネントをオーサリングする場合、例えば src がテーマ設定値に基づいている画像などでは、そのアセットを更新する必要があります。</p><div class="language-vue"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">img</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">:</span><span style="color:#C792EA;">src</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">theme</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">logoPath</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">/&gt;</span></span>
<span class="line"></span></code></pre></div><p>この場合、VitePressが提供するwithBaseヘルパーでパスをラップすることが推奨されます。</p><div class="language-vue"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">script</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">setup</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">withBase</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">useData</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">vitepress</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> theme </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">useData</span><span style="color:#A6ACCD;">()</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">img</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">:src</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">withBase(theme.logoPath)</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> /&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div>`,20),o=[e];function t(c,r,i,D,F,y){return n(),a("div",null,o)}const h=s(p,[["render",t]]);export{C as __pageData,h as default};
