import{_ as e,c as a,o as t,a as s}from"./app.e18c80f2.js";const k=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[{"level":2,"title":"duk_push_current_thread()","slug":"duk-push-current-thread","link":"#duk-push-current-thread","children":[{"level":3,"title":"プロトタイプ","slug":"プロトタイプ","link":"#プロトタイプ","children":[]},{"level":3,"title":"スタック","slug":"スタック","link":"#スタック","children":[]},{"level":3,"title":"要約","slug":"要約","link":"#要約","children":[]},{"level":3,"title":"例","slug":"例","link":"#例","children":[]}]}],"relativePath":"translation/duktape/api/duk_push_current_thread.md","lastUpdated":1676126774000}'),n={name:"translation/duktape/api/duk_push_current_thread.md"},r=s(`<h2 id="duk-push-current-thread" tabindex="-1">duk_push_current_thread() <a class="header-anchor" href="#duk-push-current-thread" aria-hidden="true">#</a></h2><p>1.0.0 thread stack function borrowed</p><h3 id="プロトタイプ" tabindex="-1">プロトタイプ <a class="header-anchor" href="#プロトタイプ" aria-hidden="true">#</a></h3><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">duk_push_current_thread</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">duk_context </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">ctx</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span></code></pre></div><h3 id="スタック" tabindex="-1">スタック <a class="header-anchor" href="#スタック" aria-hidden="true">#</a></h3><p>| ... | -&gt; | ... | thread | (if current thread exists) | ... | -&gt; | ... | undefined | (if no current thread)</p><h3 id="要約" tabindex="-1">要約 <a class="header-anchor" href="#要約" aria-hidden="true">#</a></h3><p>現在実行中の Duktape スレッドをスタックにプッシュします。プッシュされる値はスレッドオブジェクトであり、ECMAScript オブジェクトでもあります。現在のスレッドがない場合、代わりに undefined がプッシュされます。</p><p>現在のスレッドは (ほとんど常に) ctx ポインタによって表されるスレッドです。</p><p>スレッドに関連付けられた duk_context * を取得するには、 duk_get_context() を使用します。</p><h3 id="例" tabindex="-1">例 <a class="header-anchor" href="#例" aria-hidden="true">#</a></h3><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#82AAFF;">duk_push_thread</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">ctx</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span></code></pre></div>`,12),l=[r];function d(c,p,i,o,h,u){return t(),a("div",null,l)}const f=e(n,[["render",d]]);export{k as __pageData,f as default};
