import{_ as s,o as n,c as a,R as l}from"./chunks/framework.320df067.js";const A=JSON.parse('{"title":"Sokol","description":"","frontmatter":{},"headers":[],"relativePath":"translation/sokol/index.md","filePath":"translation/sokol/index.md","lastUpdated":1676126774000}'),o={name:"translation/sokol/index.md"},p=l(`<h1 id="sokol" tabindex="-1">Sokol <a class="header-anchor" href="#sokol" aria-label="Permalink to &quot;Sokol&quot;">​</a></h1><p>C で書かれたシンプルな <a href="https://github.com/nothings/stb/blob/master/docs/stb_howto.txt" target="_blank" rel="noreferrer">STB スタイル</a> の C および C++ 用のクロスプラットフォームライブラリです。</p><h2 id="事例と関連プロジェクト" tabindex="-1">事例と関連プロジェクト <a class="header-anchor" href="#事例と関連プロジェクト" aria-label="Permalink to &quot;事例と関連プロジェクト&quot;">​</a></h2><ul><li><p><a href="https://floooh.github.io/sokol-html5/index.html" target="_blank" rel="noreferrer">ライブサンプル</a> WASM経由 (<a href="https://github.com/floooh/sokol-samples" target="_blank" rel="noreferrer">source</a>)</p></li><li><p><a href="https://floooh.github.io/doom-sokol/" target="_blank" rel="noreferrer">Doom Shareware</a> sokolのヘッダーに移植された (<a href="https://github.com/floooh/doom-sokol" target="_blank" rel="noreferrer">source</a>)</p></li><li><p><a href="https://github.com/edubart/sokol_gp" target="_blank" rel="noreferrer">sokol_gp.h</a> sokol_gfx.h の上にある 2 次元図形描画ライブラリ。</p></li><li><p><a href="https://www.geertarien.com/learnopengl-examples-html5/" target="_blank" rel="noreferrer">LearnOpenGLのサンプルはsokol-gfxに移植されました</a> by @geertarien (cool stuff!)</p></li><li><p><a href="https://github.com/floooh/cimgui-sokol-starterkit" target="_blank" rel="noreferrer">Dear ImGui starterkit</a> Dear ImGuiのアプリケーションをCで書くための自己完結型のスターターキットです。</p></li><li><p><a href="https://github.com/floooh/qoiview" target="_blank" rel="noreferrer">qoiview</a> 新しい画像ファイルフォーマットQOIの基本ビューア</p></li><li><p><a href="https://floooh.github.io/tiny8bit/" target="_blank" rel="noreferrer">Tiny 8-bit emulators</a></p></li><li><p>A &#39;single-file&#39; <a href="https://github.com/floooh/pacman.c/" target="_blank" rel="noreferrer">Pacman clone in C99</a>, <a href="https://github.com/floooh/pacman.zig/" target="_blank" rel="noreferrer">ジーグ</a>もあります。</p></li><li><p>A <a href="https://mgerdes.github.io/minigolf.html" target="_blank" rel="noreferrer">Minigolf game</a> (<a href="https://github.com/mgerdes/minigolf" target="_blank" rel="noreferrer">source</a>).</p></li><li><p><a href="https://dealers-dungeon.com/demo/" target="_blank" rel="noreferrer">&#39;Dealer&#39;s Dungeon&#39;</a> (<a href="https://dealers-dungeon.com/demo/?q=3" target="_blank" rel="noreferrer">lower graphics quality</a>, <a href="https://github.com/bqqbarbhg/spear" target="_blank" rel="noreferrer">source</a>)</p></li><li><p><a href="https://github.com/floooh/sokol-tools" target="_blank" rel="noreferrer">コマンドラインツール</a> (シェーダコンパイラ)</p></li><li><p><a href="https://github.com/floooh/sokol-samples#how-to-build-without-a-build-system" target="_blank" rel="noreferrer">ビルドシステムを使わずにビルドする方法</a>: Sokolヘッダをあなたのプロジェクトに統合し、お気に入りのC/C++ビルドシステムを使用するための有用な詳細情報を提供します。</p></li></ul><h2 id="コアライブラリー" tabindex="-1">コアライブラリー <a class="header-anchor" href="#コアライブラリー" aria-label="Permalink to &quot;コアライブラリー&quot;">​</a></h2><ul><li><a href="https://github.com/floooh/sokol/blob/master/sokol_gfx.h" target="_blank" rel="noreferrer"><strong>sokol_gfx.h</strong></a>: 3D-API wrapper (GL + Metal + D3D11)</li><li><a href="https://github.com/floooh/sokol/blob/master/sokol_app.h" target="_blank" rel="noreferrer"><strong>sokol_app.h</strong></a>: app framework wrapper (エントリー＋ウィンドウ＋3Dコンテキスト＋入力)</li><li><a href="https://github.com/floooh/sokol/blob/master/sokol_time.h" target="_blank" rel="noreferrer"><strong>sokol_time.h</strong></a>: 時間計測</li><li><a href="https://github.com/floooh/sokol/blob/master/sokol_audio.h" target="_blank" rel="noreferrer"><strong>sokol_audio.h</strong></a>: minimal buffer-streaming audio playback</li><li><a href="https://github.com/floooh/sokol/blob/master/sokol_fetch.h" target="_blank" rel="noreferrer"><strong>sokol_fetch.h</strong></a>: HTTPとローカルファイルシステムからの非同期データストリーミング</li><li><a href="https://github.com/floooh/sokol/blob/master/sokol_args.h" target="_blank" rel="noreferrer"><strong>sokol_args.h</strong></a>: ウェブとネイティブアプリのための統一されたcmdline/URL argパーサー</li></ul><h2 id="utility-libraries" tabindex="-1">Utility libraries <a class="header-anchor" href="#utility-libraries" aria-label="Permalink to &quot;Utility libraries&quot;">​</a></h2><ul><li><a href="https://github.com/floooh/sokol/blob/master/util/sokol_imgui.h" target="_blank" rel="noreferrer"><strong>sokol_imgui.h</strong></a>: sokol_gfx.h <a href="https://github.com/ocornut/imgui" target="_blank" rel="noreferrer">Dear ImGui</a> 用レンダリングバックエンド</li><li><a href="https://github.com/floooh/sokol/blob/master/util/sokol_nuklear.h" target="_blank" rel="noreferrer"><strong>sokol_nuklear.h</strong></a>: sokol_gfx.h <a href="https://github.com/Immediate-Mode-UI/Nuklear" target="_blank" rel="noreferrer">Nuklear</a>用レンダリングバックエンド。</li><li><a href="https://github.com/floooh/sokol/blob/master/util/sokol_gl.h" target="_blank" rel="noreferrer"><strong>sokol_gl.h</strong></a>: OpenGL 1.x style immediate-mode rendering API on top of sokol_gfx.h</li><li><a href="https://github.com/floooh/sokol/blob/master/util/sokol_fontstash.h" target="_blank" rel="noreferrer"><strong>sokol_fontstash.h</strong></a>: sokol_gl.h <a href="https://github.com/memononen/fontstash" target="_blank" rel="noreferrer">fontstash</a> 用レンダリングバックエンド</li><li><a href="https://github.com/floooh/sokol/blob/master/util/sokol_gfx_imgui.h" target="_blank" rel="noreferrer"><strong>sokol_gfx_imgui.h</strong></a>: debug-inspection UI for sokol_gfx.h (implemented with Dear ImGui)</li><li><a href="https://github.com/floooh/sokol/blob/master/util/sokol_debugtext.h" target="_blank" rel="noreferrer"><strong>sokol_debugtext.h</strong></a>: a simple text renderer using vintage home computer fonts</li><li><a href="https://github.com/floooh/sokol/blob/master/util/sokol_memtrack.h" target="_blank" rel="noreferrer"><strong>sokol_memtrack.h</strong></a>: sokolヘッダでのメモリ割り当てを簡単に追跡することができます。</li><li><a href="https://github.com/floooh/sokol/blob/master/util/sokol_shape.h" target="_blank" rel="noreferrer"><strong>sokol_shape.h</strong></a>: 簡単な図形を生成し、sokol-gfx のリソース作成用構造体にプラグインする。</li><li><a href="https://github.com/floooh/sokol/blob/master/util/sokol_color.h" target="_blank" rel="noreferrer"><strong>sokol_color.h</strong></a>: X11 スタイルの色定数および sg_color オブジェクトの作成用関数</li></ul><h2 id="「公式」言語バインディング" tabindex="-1">「公式」言語バインディング <a class="header-anchor" href="#「公式」言語バインディング" aria-label="Permalink to &quot;「公式」言語バインディング&quot;">​</a></h2><p>これらは、Cヘッダーの変更に伴い自動的に更新される:</p><ul><li><a href="https://github.com/floooh/sokol-zig" target="_blank" rel="noreferrer">sokol-zig</a></li><li><a href="https://github.com/floooh/sokol-odin" target="_blank" rel="noreferrer">sokol-odin</a></li><li><a href="https://github.com/floooh/sokol-nim" target="_blank" rel="noreferrer">sokol-nim</a></li></ul><h2 id="notes" tabindex="-1">Notes <a class="header-anchor" href="#notes" aria-label="Permalink to &quot;Notes&quot;">​</a></h2><p>WebAssemblyは「一級市民」です。Sokolヘッダーの重要な動機の一つは、ウェブプラットフォームに最小限のフットプリントで、なおかつ有用なクロスプラットフォームAPIのコレクションを提供することです。</p><p>コアヘッダはスタンドアロンで、互いに独立して使用することができます。</p><h3 id="なぜcなのか" tabindex="-1">なぜCなのか: <a class="header-anchor" href="#なぜcなのか" aria-label="Permalink to &quot;なぜCなのか:&quot;">​</a></h3><ul><li>他の言語との統合を容易にする</li><li>他のプロジェクトとの統合が容易</li><li>実行ファイルに最小限のサイズのオーバーヘッドを加えるだけ</li></ul><p>より詳しい背景を説明したブログ記事<a href="http://floooh.github.io/2017/07/29/sokol-gfx-tour.html" target="_blank" rel="noreferrer">sokol_gfx.hのツアー</a></p><h1 id="sokol-gfx-h" tabindex="-1">sokol_gfx.h: <a class="header-anchor" href="#sokol-gfx-h" aria-label="Permalink to &quot;sokol_gfx.h:&quot;">​</a></h1><ul><li>GLES2/WebGL、GLES3/WebGL2、GL3.3、D3D11、Metalのシンプルでモダンなラッパーです。</li><li>バッファ、イメージ、シェーダー、パイプラインステートオブジェクト、レンダーパス</li><li>ウィンドウの作成や3D APIコンテキストの初期化は行わない。</li><li>シェーダーダイアレクトの相互変換を提供しない (<strong>BUT</strong> 現在、公式のシェーダー相互変換ソリューションがあります) sokol_gfx.hとIDEをシームレスに統合する公式のシェーダクロスコンパイラソリューションがあります。<a href="https://github.com/floooh/sokol-tools/blob/master/docs/sokol-shdc.md" target="_blank" rel="noreferrer">詳しくはこちらをご覧ください</a></li></ul><p>C99でGLFWを使った三角形。</p><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">#define</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">SOKOL_IMPL</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#define</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">SOKOL_GLCORE33</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#include</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">sokol_gfx.h</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#define</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">GLFW_INCLUDE_NONE</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#include</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">GLFW/glfw3.h</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">main</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    /* GLFWによるウィンドウとGLコンテキストの作成 */</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">glfwInit</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">glfwWindowHint</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">GLFW_CONTEXT_VERSION_MAJOR</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">glfwWindowHint</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">GLFW_CONTEXT_VERSION_MINOR</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">glfwWindowHint</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">GLFW_OPENGL_FORWARD_COMPAT</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> GLFW_TRUE</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">glfwWindowHint</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">GLFW_OPENGL_PROFILE</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> GLFW_OPENGL_CORE_PROFILE</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">    GLFWwindow</span><span style="color:#89DDFF;">*</span><span style="color:#F07178;"> w </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">glfwCreateWindow</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">640</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">480</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Sokol Triangle GLFW</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">glfwMakeContextCurrent</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">w</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">glfwSwapInterval</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    /* セットアップ sokol_gfx */</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">sg_setup</span><span style="color:#89DDFF;">(&amp;(</span><span style="color:#F07178;">sg_desc</span><span style="color:#89DDFF;">){</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    /* 頂点バッファ */</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">float</span><span style="color:#F07178;"> vertices</span><span style="color:#C792EA;">[]</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// positions            // colors</span></span>
<span class="line"><span style="color:#F07178;">         </span><span style="color:#F78C6C;">0.0f</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;">  </span><span style="color:#F78C6C;">0.5f</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0.5f</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;">     </span><span style="color:#F78C6C;">1.0f</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0.0f</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0.0f</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1.0f</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">         </span><span style="color:#F78C6C;">0.5f</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">0.5f</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0.5f</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;">     </span><span style="color:#F78C6C;">0.0f</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1.0f</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0.0f</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1.0f</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">0.5f</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">0.5f</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0.5f</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;">     </span><span style="color:#F78C6C;">0.0f</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0.0f</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1.0f</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1.0f</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#F07178;">    sg_buffer vbuf </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">sg_make_buffer</span><span style="color:#89DDFF;">(&amp;(</span><span style="color:#F07178;">sg_buffer_desc</span><span style="color:#89DDFF;">){</span></span>
<span class="line"><span style="color:#F07178;">        .data </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">SG_RANGE</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">vertices</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    /* シェーダ */</span></span>
<span class="line"><span style="color:#F07178;">    sg_shader shd </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">sg_make_shader</span><span style="color:#89DDFF;">(&amp;(</span><span style="color:#F07178;">sg_shader_desc</span><span style="color:#89DDFF;">){</span></span>
<span class="line"><span style="color:#F07178;">        .</span><span style="color:#A6ACCD;">vs</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">source</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">#version 330</span><span style="color:#A6ACCD;">\\n</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">layout(location=0) in vec4 position;</span><span style="color:#A6ACCD;">\\n</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">layout(location=1) in vec4 color0;</span><span style="color:#A6ACCD;">\\n</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">out vec4 color;</span><span style="color:#A6ACCD;">\\n</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">void main() {</span><span style="color:#A6ACCD;">\\n</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">  gl_Position = position;</span><span style="color:#A6ACCD;">\\n</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">  color = color0;</span><span style="color:#A6ACCD;">\\n</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">}</span><span style="color:#A6ACCD;">\\n</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">        .</span><span style="color:#A6ACCD;">fs</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">source</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">#version 330</span><span style="color:#A6ACCD;">\\n</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">in vec4 color;</span><span style="color:#A6ACCD;">\\n</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">out vec4 frag_color;</span><span style="color:#A6ACCD;">\\n</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">void main() {</span><span style="color:#A6ACCD;">\\n</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">  frag_color = color;</span><span style="color:#A6ACCD;">\\n</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">}</span><span style="color:#A6ACCD;">\\n</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    /* パイプライン状態オブジェクト（三角形の場合はデフォルトのレンダリング状態でよい）。 */</span></span>
<span class="line"><span style="color:#F07178;">    sg_pipeline pip </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">sg_make_pipeline</span><span style="color:#89DDFF;">(&amp;(</span><span style="color:#F07178;">sg_pipeline_desc</span><span style="color:#89DDFF;">){</span></span>
<span class="line"><span style="color:#F07178;">        .shader </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> shd</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">        .layout </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">            .attrs </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">                </span><span style="color:#89DDFF;">[</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">].</span><span style="color:#A6ACCD;">format</span><span style="color:#89DDFF;">=</span><span style="color:#F07178;">SG_VERTEXFORMAT_FLOAT3</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">                </span><span style="color:#89DDFF;">[</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">].</span><span style="color:#A6ACCD;">format</span><span style="color:#89DDFF;">=</span><span style="color:#F07178;">SG_VERTEXFORMAT_FLOAT4</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    /* リソースバインディング */</span></span>
<span class="line"><span style="color:#F07178;">    sg_bindings bind </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        .</span><span style="color:#A6ACCD;">vertex_buffers</span><span style="color:#89DDFF;">[</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">]</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> vbuf</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    /* デフォルトパスアクション (clear to grey) */</span></span>
<span class="line"><span style="color:#F07178;">    sg_pass_action pass_action </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    /* 描画ループ */</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">while</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(!</span><span style="color:#82AAFF;">glfwWindowShouldClose</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">w</span><span style="color:#89DDFF;">))</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#C792EA;">int</span><span style="color:#F07178;"> cur_width</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> cur_height</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#82AAFF;">glfwGetFramebufferSize</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">w</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&amp;</span><span style="color:#F07178;">cur_width</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&amp;</span><span style="color:#F07178;">cur_height</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#82AAFF;">sg_begin_default_pass</span><span style="color:#89DDFF;">(&amp;</span><span style="color:#F07178;">pass_action</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> cur_width</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> cur_height</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#82AAFF;">sg_apply_pipeline</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">pip</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#82AAFF;">sg_apply_bindings</span><span style="color:#89DDFF;">(&amp;</span><span style="color:#F07178;">bind</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#82AAFF;">sg_draw</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#82AAFF;">sg_end_pass</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#82AAFF;">sg_commit</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#82AAFF;">glfwSwapBuffers</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">w</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#82AAFF;">glfwPollEvents</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    /* 後片付け */</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">sg_shutdown</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">glfwTerminate</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h1 id="sokol-app-h" tabindex="-1">sokol_app.h <a class="header-anchor" href="#sokol-app-h" aria-label="Permalink to &quot;sokol_app.h&quot;">​</a></h1><p>クロスプラットフォーム対応の最小限のアプリケーション・ラッパー・ライブラリです。</p><ul><li>統一されたアプリケーションエントリ</li><li>3Dレンダリング用のシングルウィンドウまたはキャンバス</li><li>3Dコンテキストの初期化</li><li>イベントベースのキーボード、マウス、タッチ入力</li><li>対応プラットフォームWin32、MacOS、Linux (X11)、iOS、WASM、Android、UWP</li><li>対応する3D-APIGL3.3 (GLX/WGL)、Metal、D3D11、GLES2/WebGL、GLES3/WebGL2</li></ul><p>sokol_app.hとsokol_gfx.hを用いたシンプルなクリアループのサンプルです（サンプルのCコードからObjective-Cコードを分離するために必要なsokol.c/.m実装ファイルは含まれません）。</p><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">#include</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">sokol_gfx.h</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#include</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">sokol_app.h</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#include</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">sokol_glue.h</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">sg_pass_action pass_action</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">init</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">void</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">sg_setup</span><span style="color:#89DDFF;">(&amp;(</span><span style="color:#F07178;">sg_desc</span><span style="color:#89DDFF;">){</span></span>
<span class="line"><span style="color:#F07178;">        .context </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">sapp_sgcontext</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">});</span></span>
<span class="line"><span style="color:#F07178;">    pass_action </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">sg_pass_action</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        .</span><span style="color:#A6ACCD;">colors</span><span style="color:#89DDFF;">[</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">]</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> .action</span><span style="color:#89DDFF;">=</span><span style="color:#F07178;">SG_ACTION_CLEAR</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> .value</span><span style="color:#89DDFF;">={</span><span style="color:#F78C6C;">1.0f</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0.0f</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0.0f</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1.0f</span><span style="color:#89DDFF;">}</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">frame</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">void</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">float</span><span style="color:#F07178;"> g </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">pass_action</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">colors</span><span style="color:#89DDFF;">[</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">].</span><span style="color:#A6ACCD;">value</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">g</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">+</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0.01f</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">pass_action</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">colors</span><span style="color:#89DDFF;">[</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">].</span><span style="color:#A6ACCD;">value</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">g</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">g </span><span style="color:#89DDFF;">&gt;</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1.0f</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">?</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0.0f</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> g</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">sg_begin_default_pass</span><span style="color:#89DDFF;">(&amp;</span><span style="color:#F07178;">pass_action</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">sapp_width</span><span style="color:#89DDFF;">(),</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">sapp_height</span><span style="color:#89DDFF;">());</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">sg_end_pass</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">sg_commit</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">cleanup</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">void</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">sg_shutdown</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">sapp_desc </span><span style="color:#82AAFF;">sokol_main</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">argc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">char</span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">argv</span><span style="color:#C792EA;">[]</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">sapp_desc</span><span style="color:#89DDFF;">){</span></span>
<span class="line"><span style="color:#F07178;">        .init_cb </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> init</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">        .frame_cb </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> frame</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">        .cleanup_cb </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> cleanup</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">        .width </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">400</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">        .height </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">300</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">        .window_title </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Clear Sample</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h1 id="sokol-audio-h" tabindex="-1">sokol_audio.h <a class="header-anchor" href="#sokol-audio-h" aria-label="Permalink to &quot;sokol_audio.h&quot;">​</a></h1><p>最小限のオーディオストリーミングAPIです。</p><ul><li>32-bit float サンプルのモノラルまたはステレオストリームを提供し、 sokol_audio.h がプラットフォーム固有のバックエンドに転送する。</li><li>データを提供する2つの方法。 <ol><li>オーディオスレッドで実行されているコールバック関数から、バックエンドのオーディオバッファに直接入力する。</li><li>代わりに、メインループからオーディオデータの小さなパケットをプッシュする。 または、自分で作成した別のスレッドから、小さなオーディオデータのパケットをプッシュする</li></ol></li><li>プラットフォームのバックエンド <ul><li>Windows。WASAPI</li><li>macOS/iOS:CoreAudio</li><li>LinuxALSA</li><li>emscriptenWebAudio + ScriptProcessorNode (emscriptenが提供するOpenALやSDLのオーディオラッパーは使用しません)</li></ul></li></ul><p>コールバックモデルを使ったシンプルなモノラル方形波ジェネレータです。</p><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// オーディオスレッドで実行されるサンプルコールバック</span></span>
<span class="line"><span style="color:#C792EA;">static</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">stream_cb</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">float</span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">buffer</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">num_frames</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">num_channels</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">assert</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">1</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">==</span><span style="color:#F07178;"> num_channels</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">static</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">uint32_t</span><span style="color:#F07178;"> count </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">int</span><span style="color:#F07178;"> i </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> i </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;"> num_frames</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> i</span><span style="color:#89DDFF;">++)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">buffer</span><span style="color:#89DDFF;">[</span><span style="color:#F07178;">i</span><span style="color:#89DDFF;">]</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">count</span><span style="color:#89DDFF;">++</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&amp;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">&lt;&lt;</span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">))</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">?</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0.5f</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">0.5f</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">main</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// sokol-audioをデフォルトのパラメータで起動する。</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">saudio_setup</span><span style="color:#89DDFF;">(&amp;(</span><span style="color:#F07178;">saudio_desc</span><span style="color:#89DDFF;">){</span></span>
<span class="line"><span style="color:#F07178;">        .stream_cb </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> stream_cb</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 実行メインループ</span></span>
<span class="line"><span style="color:#F07178;">    ...</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// sokol-audioを終了する</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">saudio_shutdown</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span></code></pre></div><p>同じコードでpush-modelを使用した場合</p><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">#define</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">BUF_SIZE</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">32</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">main</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// sokol-audioをデフォルトのパラメータ、コールバック無しで起動する。</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">saudio_setup</span><span style="color:#89DDFF;">(&amp;(</span><span style="color:#F07178;">saudio_desc</span><span style="color:#89DDFF;">){</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">});</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">assert</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">saudio_channels</span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">==</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 小さな中間バッファを使用することで、個々のサンプルをプッシュする必要がないため、非常に非効率的である。</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">float</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">buf</span><span style="color:#89DDFF;">[</span><span style="color:#F07178;">BUF_SIZE</span><span style="color:#89DDFF;">];</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">int</span><span style="color:#F07178;"> buf_pos </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">uint32_t</span><span style="color:#F07178;"> count </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// メインループからサンプルをプッシュ</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">bool</span><span style="color:#F07178;"> done </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">false;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">while</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(!</span><span style="color:#F07178;">done</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// オーディオサンプルを生成し、プッシュする...</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#C792EA;">int</span><span style="color:#F07178;"> num_frames </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">saudio_expect</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">int</span><span style="color:#F07178;"> i </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> i </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;"> num_frames</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> i</span><span style="color:#89DDFF;">++)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">            </span><span style="color:#676E95;font-style:italic;">// 簡易矩形波ジェネレータ</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#A6ACCD;">buf</span><span style="color:#89DDFF;">[</span><span style="color:#F07178;">buf_pos</span><span style="color:#89DDFF;">++]</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">count</span><span style="color:#89DDFF;">++</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&amp;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">&lt;&lt;</span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">))</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">?</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0.5f</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">0.5f</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">buf_pos </span><span style="color:#89DDFF;">==</span><span style="color:#F07178;"> BUF_SIZE</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">                buf_pos </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">                </span><span style="color:#82AAFF;">saudio_push</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">buf</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> BUF_SIZE</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// その他のフレーム単位での処理...</span></span>
<span class="line"><span style="color:#F07178;">        ...</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// sokol-audioを終了する</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">saudio_shutdown</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h1 id="sokol-fetch-h" tabindex="-1">sokol_fetch.h <a class="header-anchor" href="#sokol-fetch-h" aria-label="Permalink to &quot;sokol_fetch.h&quot;">​</a></h1><p>ファイル全体の読み込み、または HTTP (emscripten/wasm) を介した非同期データストリーム (すべてのネイティブプラットフォーム) またはローカルファイルシステム (すべてのネイティブプラットフォーム) を介した非同期データストリーム。</p><p>単純な C99 の例では、ファイルをスタティック バッファにロードします。</p><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">#include</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">sokol_fetch.h</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">static</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">response_callback</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> sfetch_response</span><span style="color:#89DDFF;">*);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#define</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">MAX_FILE_SIZE</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">1024</span><span style="color:#89DDFF;">*</span><span style="color:#F78C6C;">1024</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#C792EA;">static</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">uint8_t</span><span style="color:#A6ACCD;"> buffer</span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">MAX_FILE_SIZE</span><span style="color:#89DDFF;">];</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// アプリケーションの開始</span></span>
<span class="line"><span style="color:#C792EA;">static</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">init</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">void</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    ...</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// sokol-fetchをデフォルトで設定する:</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">sfetch_setup</span><span style="color:#89DDFF;">(&amp;(</span><span style="color:#FFCB6B;">sfetch_desc_t</span><span style="color:#89DDFF;">){</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 静的に確保されたバッファへのファイルの読み込みを開始します。:</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">sfetch_send</span><span style="color:#89DDFF;">(&amp;(</span><span style="color:#FFCB6B;">sfetch_request_t</span><span style="color:#89DDFF;">){</span></span>
<span class="line"><span style="color:#F07178;">        .path </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">hello_world.txt</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">        .callback </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> response_callback</span></span>
<span class="line"><span style="color:#F07178;">        .buffer_ptr </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> buffer</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">        .buffer_size </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">sizeof(</span><span style="color:#F07178;">buffer</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">});</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 1フレームあたり...</span></span>
<span class="line"><span style="color:#C792EA;">static</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">frame</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">void</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    ...</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// フレームごとに sfetch_dowork() を呼び出して、「歯車を回す」必要があります。:</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">sfetch_dowork</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#F07178;">    ...</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// レスポンスコールバックは、興味深いことが起こる場所です。:</span></span>
<span class="line"><span style="color:#C792EA;">static</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">response_callback</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">sfetch_response_t</span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">response</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">response</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">fetched</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// データがバッファに読み込まれたら、そのデータに対して何かをする...</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">void</span><span style="color:#89DDFF;">*</span><span style="color:#F07178;"> data </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">response</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">buffer_ptr</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#C792EA;">uint64_t</span><span style="color:#F07178;"> data_size </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">response</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">fetched_size</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 成功時、失敗時ともにfinishedフラグが設定されます。</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">response</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">failed</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// 仕損なった</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;font-style:italic;">switch</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">response</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">error_code</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">            SFETCH_ERROR_FILE_NOT_FOUND: ...</span></span>
<span class="line"><span style="color:#F07178;">            SFETCH_ERROR_BUFFER_TOO_SMALL: ...</span></span>
<span class="line"><span style="color:#F07178;">            ...</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// アプリケーションを終了する</span></span>
<span class="line"><span style="color:#C792EA;">static</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">shutdown</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">void</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    ...</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">sfetch_shutdown</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#F07178;">    ...</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h1 id="sokol-time-h" tabindex="-1">sokol_time.h: <a class="header-anchor" href="#sokol-time-h" aria-label="Permalink to &quot;sokol_time.h:&quot;">​</a></h1><p>クロスプラットフォームでシンプルに時間測定。</p><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki material-theme-palenight has-diff"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">#include</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">sokol_time.h</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">...</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">/* sokol_time を初期化する */</span></span>
<span class="line"><span style="color:#82AAFF;">stm_setup</span><span style="color:#89DDFF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">/* 開始時刻を取る */</span></span>
<span class="line"><span style="color:#C792EA;">uint64_t</span><span style="color:#A6ACCD;"> start </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">stm_now</span><span style="color:#89DDFF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">...測定用コード...</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">/* 経過時間 */</span></span>
<span class="line"><span style="color:#C792EA;">uint64_t</span><span style="color:#A6ACCD;"> elapsed </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">stm_since</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">start</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">/* 時間単位に変換する */</span></span>
<span class="line"><span style="color:#C792EA;">double</span><span style="color:#A6ACCD;"> seconds </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">stm_sec</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">elapsed</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#C792EA;">double</span><span style="color:#A6ACCD;"> milliseconds </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">stm_ms</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">elapsed</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#C792EA;">double</span><span style="color:#A6ACCD;"> microseconds </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">stm_us</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">elapsed</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#C792EA;">double</span><span style="color:#A6ACCD;"> nanoseconds </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">stm_ns</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">elapsed</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">/* 2つのタイムスタンプの差 */</span></span>
<span class="line"><span style="color:#C792EA;">uint64_t</span><span style="color:#A6ACCD;"> start </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">stm_now</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">...</span></span>
<span class="line"><span style="color:#C792EA;">uint64_t</span><span style="color:#A6ACCD;"> end </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">stm_now</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#C792EA;">uint64_t</span><span style="color:#A6ACCD;"> elapsed </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">stm_diff</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">end</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> start</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">/* ラップタイムを計る (例：fpsの場合) */</span></span>
<span class="line"><span style="color:#C792EA;">uint64_t</span><span style="color:#A6ACCD;"> last_time </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">while</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(!</span><span style="color:#A6ACCD;">done</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    ...render something...</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">double</span><span style="color:#F07178;"> frame_time_ms </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">stm_ms</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">stm_laptime</span><span style="color:#89DDFF;">(&amp;</span><span style="color:#F07178;">last_time</span><span style="color:#89DDFF;">));</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h1 id="sokol-args-h" tabindex="-1">sokol_args.h <a class="header-anchor" href="#sokol-args-h" aria-label="Permalink to &quot;sokol_args.h&quot;">​</a></h1><p>ウェブとネイティブアプリのための統一された引数パージング。ネイティブ環境では argc/argv を、ウェブ環境では URL クエリ文字列を使用します。</p><p>1つの引数を持つURLの例:</p><p><a href="https://floooh.github.io/tiny8bit/kc85.html?type=kc85_4" target="_blank" rel="noreferrer">https://floooh.github.io/tiny8bit/kc85.html?type=kc85_4</a></p><p>コマンドラインアプリと同じ:</p><blockquote><p>kc85 type=kc85_4</p></blockquote><p>このように解析されます:</p><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">#include</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">sokol_args.h</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">main</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">argc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">char</span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">argv</span><span style="color:#C792EA;">[]</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">sargs_setup</span><span style="color:#89DDFF;">(&amp;(</span><span style="color:#F07178;">sargs_desc</span><span style="color:#89DDFF;">){</span><span style="color:#F07178;"> .argc</span><span style="color:#89DDFF;">=</span><span style="color:#F07178;">argc</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> .argv</span><span style="color:#89DDFF;">=</span><span style="color:#F07178;">argv </span><span style="color:#89DDFF;">});</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">sargs_exists</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">type</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">))</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">sargs_equals</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">type</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">kc85_4</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">))</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">            </span><span style="color:#676E95;font-style:italic;">// start as KC85/4</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;font-style:italic;">else</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">sargs_equals</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">type</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">kc85_3</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">))</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">            </span><span style="color:#676E95;font-style:italic;">// start as KC85/3</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;font-style:italic;">else</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">            </span><span style="color:#676E95;font-style:italic;">// start as KC85/2</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">sargs_shutdown</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>より完全なドキュメントは sokol_args.h ヘッダを、より興味深い使用例は <a href="https://floooh.github.io/tiny8bit/" target="_blank" rel="noreferrer">Tiny Emulators</a> を参照してください。</p>`,49),e=[p];function t(c,r,F,y,D,i){return n(),a("div",null,e)}const h=s(o,[["render",t]]);export{A as __pageData,h as default};
