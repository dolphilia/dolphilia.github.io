import{_ as a,o,c as e,R as s}from"./chunks/framework.320df067.js";const m=JSON.parse('{"title":"複雑なToDoを最適化させる方法","description":"","frontmatter":{},"headers":[],"relativePath":"essay/fukuzatsu-na-todo-wo.md","filePath":"essay/fukuzatsu-na-todo-wo.md","lastUpdated":1676126774000}'),l={name:"essay/fukuzatsu-na-todo-wo.md"},t=s('<h1 id="複雑なtodoを最適化させる方法" tabindex="-1">複雑なToDoを最適化させる方法 <a class="header-anchor" href="#複雑なtodoを最適化させる方法" aria-label="Permalink to &quot;複雑なToDoを最適化させる方法&quot;">​</a></h1><p>大きなプロジェクトを成功させるにはToDoリストを最適化させることが大切です。この記事では大規模なToDoリストを上手に整頓する方法を書きます。</p><h2 id="todoリストとは" tabindex="-1">ToDoリストとは <a class="header-anchor" href="#todoリストとは" aria-label="Permalink to &quot;ToDoリストとは&quot;">​</a></h2><p>ToDoリストは言い換えると『やることリスト』です。これをするというのをリストアップしておき、実行したものをチェックして次々と行動していく。そのためのリストがTodoリストです。 具体的な例を挙げると次のようなものです。</p><ul><li>ゲームをする</li><li>宿題をする</li><li>買い物をする</li></ul><h2 id="なぜtodoリストが必要なのか" tabindex="-1">なぜToDoリストが必要なのか <a class="header-anchor" href="#なぜtodoリストが必要なのか" aria-label="Permalink to &quot;なぜToDoリストが必要なのか&quot;">​</a></h2><p>行き当たりばったりで行動していてはとても成功し得ません。そこでToDoリストの出番です。ToDoリストの利点はするべきことを目に見えるようにしてくれること、忘れないように助けてくれることです。しかし、大きなタスクがあればあるほど、ToDoリストも複雑になります。</p><h2 id="行動の優先度は緊急か重要かで決まる" tabindex="-1">行動の優先度は緊急か重要かで決まる <a class="header-anchor" href="#行動の優先度は緊急か重要かで決まる" aria-label="Permalink to &quot;行動の優先度は緊急か重要かで決まる&quot;">​</a></h2><p>なにをするべきかの優先度を決めるのは、それが緊急かどうか、そして重要かどうかで決まります。例えば先ほどリストに書き出したものを例に考えましょう。</p><ul><li>ゲームをする</li></ul><p>今日中にゲーム内で大型イベントがあるならばそれは緊急に行わなければならないタスクです。ですが、重要かどうかで考えると、ゲームをすること自体は長い目で見るとそれほど重要ではありません。</p><ul><li>買い物をする</li></ul><p>冷蔵庫に食べ物が溢れているなら買い物は緊急ではありません。でも、もし冷蔵庫に食べ物がないなら緊急です。すぐに行動しなければなりません。そして食べ物を買うをすることは生きていくうえでとても重要です。</p><p>このようにリストアップした項目は緊急でかつ重要であるものが、最優先されるべきです。そしてそれを賢く判断して決定していかなければなりません。これはとても大変なことです。</p><h2 id="選択肢が多すぎると混乱する" tabindex="-1">選択肢が多すぎると混乱する <a class="header-anchor" href="#選択肢が多すぎると混乱する" aria-label="Permalink to &quot;選択肢が多すぎると混乱する&quot;">​</a></h2><p>コロンビア大学経営大学院のシーナ・アイエンガー教授は著書『選択の科学』で、スーパーマーケットで行われた興味深い実験について述べています。それはジャムの試食コーナーで行われたものであり、たくさんのジャムを用意した場合と、少ないジャムを用意した場合、どちらが多く売れるのかという実験です。</p><p>具体的には多い方は24種類のジャム、少ない方には6種類のジャムが用意されました。売り上げが多かったのはどちらでしょうか。少なく用意した場合です。この実験結果をすべてのマーケティングに適用できるわけではありませんが、次のことははっきりわかります。</p><p>人間は選択肢の数が多すぎると混乱して選べなくなる、もしくは選びにくくなるということです。 これは大量のToDoリストにも適用できます。あまりに多いタスクは私たちを混乱させ、やる気を失せさせてしまいます。これでは本末転倒です。</p><h2 id="日本人は選択することを好まない" tabindex="-1">日本人は選択することを好まない？ <a class="header-anchor" href="#日本人は選択することを好まない" aria-label="Permalink to &quot;日本人は選択することを好まない？&quot;">​</a></h2><p>同じ著書のなかで、アメリカ系の子供たちと日本人系の子供たちの選択の傾向についての調査を述べています。これはあくまで一つの実験であり、人種がみなそうだと言っているわけではないので注意しましょう。</p><p>全体的に、アメリカ系の子供たちは、物事を自分で選択することを好みました。逆に日本人系の子供たちは、物事を自分で決定することを好みませんでした。</p><p>これには覚えがあるのではないでしょうか。夕飯のメニューを決めるのが面倒。毎日着ていく服を考えるのが億劫。話す話題を決めるのが疲れる。できれば他人に任せたい。このように考えるのは日本ではそれほど珍しいことではありません。そして周りもそうなので、みんなそうだと思ってしまうかもしれません。でも世界中の人が皆そうだとは限らないのです。</p><p>個人の差はありますが、全体的に見て日本人は自分で選択することを好まない傾向があるようです。それで、先ほどの大量の選択肢による混乱に重ねて、行動を選択するのを難しくしています。</p><h2 id="選択を少なくして簡単にする方法" tabindex="-1">選択を少なくして簡単にする方法 <a class="header-anchor" href="#選択を少なくして簡単にする方法" aria-label="Permalink to &quot;選択を少なくして簡単にする方法&quot;">​</a></h2><p>誰かに質問される場面を想像してください。学校のテストでも構いません。「何々についてどう思いますか」と質問されるのと「AとBどちらが好きですか」と聞かれるのではどちらが答えやすいでしょうか。自由回答の問題と、選択式のマークシート、どちらが回答しやすいでしょうか。</p><p>個人差がありますが、選択式の方が答えやすいと思います。そしてそれは「チョコケーキとショートケーキ、どっちが好き？」という風に２択にしてもらえるとさらに答えやすいです。答えやすくなる理由は簡単です。単純に双方を比較すればいいからです。考えることの負担が少ないですし、オリジナリティあふれる答えを用意する手間も必要ありません。</p><p>これをToDoリストに応用してみましょう。リスト内の全部を考えるのではなく２つだけ考えてみるのです。例えば「ゲームと買い物、どっちを優先したい？」と考えます。答えはすぐに出ることでしょう。</p><h3 id="_2つの比較を続けて並び替える" tabindex="-1">２つの比較を続けて並び替える <a class="header-anchor" href="#_2つの比較を続けて並び替える" aria-label="Permalink to &quot;２つの比較を続けて並び替える&quot;">​</a></h3><p>２つを比較するだけでは、全体の優先度がわかりません。しかし、２つの比較を続けることで、優先順を並び替えることができます。色々な方法がありますが、一番簡単と思われるバブルソートという方法を紹介します。数字が出てくるので苦手な方は読み飛ばしても構いません。</p><p>バブルソートはプログラミングの分野で使用される並び替えの方法の１つです。単純な方法なので、身構えなくても大丈夫です。次のような数字の羅列があるとしましょう。</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">6 7 3 1</span></span></code></pre></div><p>ここで重要なのは２つの数字を比較して並び替える、それを繰り返すということです。まず、右の２つを比較します。</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">6 7 (3 1)</span></span></code></pre></div><p>3と1を比較します。小さい方を左側に交換します。最初から左側が小さければそのままです。3と1では1の方が小さいので、(1 3)という風に交換します。</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">6 (7 1) 3</span></span></code></pre></div><p>続いて、１つ左にずらして、２つの値を比較します。先ほどと同じように比較して交換しましょう。やはり1の方が小さいので(1 7)となります。</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">(6 1) 7 3</span></span></code></pre></div><p>左端まで同様に繰り返します。すると左端の値が最小の数字ということになります。その数字を固定してしまいましょう。</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">1 6 7 3</span></span></code></pre></div><p>最小の数字がわかったので、1以外を数字を同じ手順で最初から比較して、並び替えていきます。</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">1 3 6 7</span></span></code></pre></div><p>二番目に小さい数字が3であることがわかったので、3を固定して同じように比較します。</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">1 3 6 7</span></span></code></pre></div><p>すると、数字は小さい数字から大きい数字に向かってきちんと並び替えられています。これがバブルソートと呼ばれる並び替えの方法です。</p><h2 id="バブルソートをtodoリストに応用する" tabindex="-1">バブルソートをToDoリストに応用する <a class="header-anchor" href="#バブルソートをtodoリストに応用する" aria-label="Permalink to &quot;バブルソートをToDoリストに応用する&quot;">​</a></h2><p>最初にToDoリストの例として出した３つの項目を思い出しましょう。</p><ul><li>ゲームをする</li><li>宿題をする</li><li>買い物をする</li></ul><p>これを２つずつ比較して、最優先項目を見つけてみましょう。まずゲームと宿題を比較してみます。例えばですが、今やっているゲームはセーブできるRPGでいつでも進められるとします。宿題は明日提出しなければならないとします。どちらが優先されるでしょうか。宿題ですね。</p><p>では次に宿題と買い物を比較してみましょう。宿題は今日中に終わらせばいいのに対して、買い物をしたいスーパーは６時に閉店するとしましょう。どちらが優先されるでしょうか。買い物ですね。</p><p>これで最優先項目が明らかになりました。それは買い物です。二番目に優先する項目を知りたいなら、買い物を除外して、同じ手順を繰り返します。この方法なら、多少の時間がかかりますが、優先事項を簡単に割り出すことができます。実際に並び替える時はカードに書き出したり、ノートなどを使うと良いでしょう。</p><h2 id="それでも『やること』に縛られないようにしよう" tabindex="-1">それでも『やること』に縛られないようにしよう <a class="header-anchor" href="#それでも『やること』に縛られないようにしよう" aria-label="Permalink to &quot;それでも『やること』に縛られないようにしよう&quot;">​</a></h2><p>ここで作成したToDoリストはあくまで理想です。実際には宿題なんて絶対にやりたくないという日もありますし、とにかくゲームがやりたくて仕方がない日もあるでしょう。リストに縛られないようにしましょう。その通りに行動しなければならないとは思わないようにしましょう。あまりに自分を束縛してしまうと、かえってやる気が失われてしまいます。それでは本末転倒です。</p><p>理性と感情の折り合いをつけて、ほどよくサボりつつ、だだこねつつ、バランスよく行動しましょう。ずっと楽しい状態で創作を続けることはできないかもしれませんが、少しでも楽しいに越したことはありませんから。</p>',53),p=[t];function n(i,c,r,d,h,u){return o(),e("div",null,p)}const C=a(l,[["render",n]]);export{m as __pageData,C as default};
