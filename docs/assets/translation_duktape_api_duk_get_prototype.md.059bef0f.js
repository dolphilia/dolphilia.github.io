import{_ as e,c as a,o as t,a as s}from"./app.75bfde98.js";const u=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[{"level":2,"title":"duk_get_prototype()","slug":"duk-get-prototype","link":"#duk-get-prototype","children":[{"level":3,"title":"プロトタイプ","slug":"プロトタイプ","link":"#プロトタイプ","children":[]},{"level":3,"title":"スタック","slug":"スタック","link":"#スタック","children":[]},{"level":3,"title":"要約","slug":"要約","link":"#要約","children":[]},{"level":3,"title":"例","slug":"例","link":"#例","children":[]},{"level":3,"title":"参照","slug":"参照","link":"#参照","children":[]}]}],"relativePath":"translation/duktape/api/duk_get_prototype.md","lastUpdated":1676126774000}'),n={name:"translation/duktape/api/duk_get_prototype.md"},l=s(`<h2 id="duk-get-prototype" tabindex="-1">duk_get_prototype() <a class="header-anchor" href="#duk-get-prototype" aria-hidden="true">#</a></h2><p>1.0.0 prototy pe object</p><h3 id="プロトタイプ" tabindex="-1">プロトタイプ <a class="header-anchor" href="#プロトタイプ" aria-hidden="true">#</a></h3><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">duk_get_prototype</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">duk_context </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">ctx</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">duk_idx_t</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">idx</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span></code></pre></div><h3 id="スタック" tabindex="-1">スタック <a class="header-anchor" href="#スタック" aria-hidden="true">#</a></h3><p>| ... | val | ... | -&gt; | ... | val | ... | proto |</p><h3 id="要約" tabindex="-1">要約 <a class="header-anchor" href="#要約" aria-hidden="true">#</a></h3><p>idx にある値の内部プロトタイプを取得します。値がオブジェクトでない場合、エラーがスローされます。オブジェクトがプロトタイプを持たない場合（これは「裸のオブジェクト」に対して可能である）、代わりにundefinedがスタックにプッシュされます。</p><h3 id="例" tabindex="-1">例 <a class="header-anchor" href="#例" aria-hidden="true">#</a></h3><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">/* Get the internal prototype of an object at index -3. */</span></span>
<span class="line"><span style="color:#82AAFF;">duk_get_prototype</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">ctx</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span></code></pre></div><h3 id="参照" tabindex="-1">参照 <a class="header-anchor" href="#参照" aria-hidden="true">#</a></h3><p>duk_set_prototype</p>`,12),o=[l];function p(r,c,i,d,h,_){return t(),a("div",null,o)}const g=e(n,[["render",p]]);export{u as __pageData,g as default};
