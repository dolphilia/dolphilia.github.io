import{_ as e,c as l,o as s,a as i}from"./app.75bfde98.js";const u=JSON.parse('{"title":"Vivliostyle.js コントリビューションガイド","description":"","frontmatter":{},"headers":[{"level":2,"title":"モジュール構成","slug":"モジュール構成","link":"#モジュール構成","children":[]},{"level":2,"title":"開発環境のセットアップ","slug":"開発環境のセットアップ","link":"#開発環境のセットアップ","children":[]},{"level":2,"title":"ビルド・開発サーバーの立ち上げ","slug":"ビルド・開発サーバーの立ち上げ","link":"#ビルド・開発サーバーの立ち上げ","children":[{"level":3,"title":"ビューワーとテストファイル","slug":"ビューワーとテストファイル","link":"#ビューワーとテストファイル","children":[]},{"level":3,"title":"テスト","slug":"テスト","link":"#テスト","children":[]},{"level":3,"title":"開発モード","slug":"開発モード","link":"#開発モード","children":[]},{"level":3,"title":"Lint とコードのフォーマット","slug":"lint-とコードのフォーマット","link":"#lint-とコードのフォーマット","children":[]},{"level":3,"title":"Lint / code formatting","slug":"lint-code-formatting","link":"#lint-code-formatting","children":[]},{"level":3,"title":"リリースのフロー","slug":"リリースのフロー","link":"#リリースのフロー","children":[]}]},{"level":2,"title":"一貫した命名ガイドライン","slug":"一貫した命名ガイドライン","link":"#一貫した命名ガイドライン","children":[]},{"level":2,"title":"コミットメッセージのガイドライン","slug":"コミットメッセージのガイドライン","link":"#コミットメッセージのガイドライン","children":[]},{"level":2,"title":"トラブルシューティング","slug":"トラブルシューティング","link":"#トラブルシューティング","children":[{"level":3,"title":"Cannot find node_modules/@vivliostyle/core","slug":"cannot-find-node-modules-vivliostyle-core","link":"#cannot-find-node-modules-vivliostyle-core","children":[]}]},{"level":2,"title":"ドキュメントのメンテナンス","slug":"ドキュメントのメンテナンス","link":"#ドキュメントのメンテナンス","children":[]},{"level":2,"title":"ソースファイル","slug":"ソースファイル","link":"#ソースファイル","children":[{"level":3,"title":"vivliostyle/core-viewer.ts","slug":"vivliostyle-core-viewer-ts","link":"#vivliostyle-core-viewer-ts","children":[]},{"level":3,"title":"vivliostyle/constants.ts","slug":"vivliostyle-constants-ts","link":"#vivliostyle-constants-ts","children":[]},{"level":3,"title":"vivliostyle/task.ts","slug":"vivliostyle-task-ts","link":"#vivliostyle-task-ts","children":[]},{"level":3,"title":"vivliostyle/exprs.ts","slug":"vivliostyle-exprs-ts","link":"#vivliostyle-exprs-ts","children":[]},{"level":3,"title":"vivliostyle/css.ts","slug":"vivliostyle-css-ts","link":"#vivliostyle-css-ts","children":[]},{"level":3,"title":"vivliostyle/css-parser.ts","slug":"vivliostyle-css-parser-ts","link":"#vivliostyle-css-parser-ts","children":[]},{"level":3,"title":"vivliostyle/css-cascade.ts","slug":"vivliostyle-css-cascade-ts","link":"#vivliostyle-css-cascade-ts","children":[]},{"level":3,"title":"vivliostyle/vtree.ts","slug":"vivliostyle-vtree-ts","link":"#vivliostyle-vtree-ts","children":[]},{"level":3,"title":"vivliostyle/css-styler.ts","slug":"vivliostyle-css-styler-ts","link":"#vivliostyle-css-styler-ts","children":[]},{"level":3,"title":"vivliostyle/font.ts","slug":"vivliostyle-font-ts","link":"#vivliostyle-font-ts","children":[]},{"level":3,"title":"vivliostyle/page-masters.ts","slug":"vivliostyle-page-masters-ts","link":"#vivliostyle-page-masters-ts","children":[]},{"level":3,"title":"vivliostyle/page-floats.ts","slug":"vivliostyle-page-floats-ts","link":"#vivliostyle-page-floats-ts","children":[]},{"level":3,"title":"vivliostyle/vgen.ts","slug":"vivliostyle-vgen-ts","link":"#vivliostyle-vgen-ts","children":[]},{"level":3,"title":"vivliostyle/layout.ts","slug":"vivliostyle-layout-ts","link":"#vivliostyle-layout-ts","children":[]},{"level":3,"title":"vivliostyle/css-page.ts","slug":"vivliostyle-css-page-ts","link":"#vivliostyle-css-page-ts","children":[]},{"level":3,"title":"vivliostyle/ops.ts","slug":"vivliostyle-ops-ts","link":"#vivliostyle-ops-ts","children":[]},{"level":3,"title":"vivliostyle/epub.ts","slug":"vivliostyle-epub-ts","link":"#vivliostyle-epub-ts","children":[]}]},{"level":2,"title":"その他の開発ドキュメント","slug":"その他の開発ドキュメント","link":"#その他の開発ドキュメント","children":[]}],"relativePath":"translation/vivliostyle/contribution-guide.md","lastUpdated":null}'),t={name:"translation/vivliostyle/contribution-guide.md"},a=i(`<h1 id="vivliostyle-js-コントリビューションガイド" tabindex="-1">Vivliostyle.js コントリビューションガイド <a class="header-anchor" href="#vivliostyle-js-コントリビューションガイド" aria-hidden="true">#</a></h1><nav class="table-of-contents"><ul><li><a href="#モジュール構成">モジュール構成</a></li><li><a href="#開発環境のセットアップ">開発環境のセットアップ</a></li><li><a href="#ビルド・開発サーバーの立ち上げ">ビルド・開発サーバーの立ち上げ</a><ul><li><a href="#ビューワーとテストファイル">ビューワーとテストファイル</a></li><li><a href="#テスト">テスト</a></li><li><a href="#開発モード">開発モード</a></li><li><a href="#lint-とコードのフォーマット">Lint とコードのフォーマット</a></li><li><a href="#lint-code-formatting">Lint / code formatting</a></li><li><a href="#リリースのフロー">リリースのフロー</a></li></ul></li><li><a href="#一貫した命名ガイドライン">一貫した命名ガイドライン</a></li><li><a href="#コミットメッセージのガイドライン">コミットメッセージのガイドライン</a></li><li><a href="#トラブルシューティング">トラブルシューティング</a><ul><li><a href="#cannot-find-node-modules-vivliostyle-core">Cannot find node_modules/@vivliostyle/core</a></li></ul></li><li><a href="#ドキュメントのメンテナンス">ドキュメントのメンテナンス</a></li><li><a href="#ソースファイル">ソースファイル</a><ul><li><a href="#vivliostyle-core-viewer-ts">vivliostyle/core-viewer.ts</a></li><li><a href="#vivliostyle-constants-ts">vivliostyle/constants.ts</a></li><li><a href="#vivliostyle-task-ts">vivliostyle/task.ts</a></li><li><a href="#vivliostyle-exprs-ts">vivliostyle/exprs.ts</a></li><li><a href="#vivliostyle-css-ts">vivliostyle/css.ts</a></li><li><a href="#vivliostyle-css-parser-ts">vivliostyle/css-parser.ts</a></li><li><a href="#vivliostyle-css-cascade-ts">vivliostyle/css-cascade.ts</a></li><li><a href="#vivliostyle-vtree-ts">vivliostyle/vtree.ts</a></li><li><a href="#vivliostyle-css-styler-ts">vivliostyle/css-styler.ts</a></li><li><a href="#vivliostyle-font-ts">vivliostyle/font.ts</a></li><li><a href="#vivliostyle-page-masters-ts">vivliostyle/page-masters.ts</a></li><li><a href="#vivliostyle-page-floats-ts">vivliostyle/page-floats.ts</a></li><li><a href="#vivliostyle-vgen-ts">vivliostyle/vgen.ts</a></li><li><a href="#vivliostyle-layout-ts">vivliostyle/layout.ts</a></li><li><a href="#vivliostyle-css-page-ts">vivliostyle/css-page.ts</a></li><li><a href="#vivliostyle-ops-ts">vivliostyle/ops.ts</a></li><li><a href="#vivliostyle-epub-ts">vivliostyle/epub.ts</a></li></ul></li><li><a href="#その他の開発ドキュメント">その他の開発ドキュメント</a></li></ul></nav><h2 id="モジュール構成" tabindex="-1">モジュール構成 <a class="header-anchor" href="#モジュール構成" aria-hidden="true">#</a></h2><p>Vivliostyle.js は2つのコンポーネントで構成されています:</p><table><thead><tr><th><a href="https://github.com/vivliostyle/vivliostyle.js/tree/master/packages/core" target="_blank" rel="noreferrer">Core</a></th><th><a href="https://github.com/vivliostyle/vivliostyle.js/tree/master/packages/viewer" target="_blank" rel="noreferrer">Viewer</a></th></tr></thead><tbody><tr><td>Vivliostyle.js Core layout engine</td><td>Vivliostyle.js Viewer UI</td></tr></tbody></table><h2 id="開発環境のセットアップ" tabindex="-1">開発環境のセットアップ <a class="header-anchor" href="#開発環境のセットアップ" aria-hidden="true">#</a></h2><p>以下のものがインストールされていることを確認してください:</p><ul><li><a href="https://nodejs.org" target="_blank" rel="noreferrer">Node.js</a></li><li><a href="https://classic.yarnpkg.com" target="_blank" rel="noreferrer">Yarn</a></li><li><a href="https://git-scm.com" target="_blank" rel="noreferrer">Git</a></li></ul><p><a href="https://github.com/vivliostyle/vivliostyle.js" target="_blank" rel="noreferrer">vivliostyle.js</a>をクローンします。</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">clone</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">https://github.com/vivliostyle/vivliostyle.js.git</span></span>
<span class="line"><span style="color:#82AAFF;">cd</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">vivliostyle.js</span></span>
<span class="line"></span></code></pre></div><p><code>@vivliostyle/core</code> は <code>@vivliostyle/viewer</code> 内の <code>package.json</code> でdependencyに含まれています。開発時には、<code>@vivliostyle/core</code> はnpmからインストールされたパッケージではなくローカルのコピーを用います。このため、<code>yarn bootstrap</code> を使ってシンボリックリンクを作成します。</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">yarn</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">install</span><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;"># 依存関係をインストールする</span></span>
<span class="line"><span style="color:#FFCB6B;">yarn</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">bootstrap</span><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;"># セットアップ開発環境</span></span>
<span class="line"></span></code></pre></div><h2 id="ビルド・開発サーバーの立ち上げ" tabindex="-1">ビルド・開発サーバーの立ち上げ <a class="header-anchor" href="#ビルド・開発サーバーの立ち上げ" aria-hidden="true">#</a></h2><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">yarn</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">build-dev</span><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;"># CoreとViewerの両方を開発版としてビルドします。</span></span>
<span class="line"><span style="color:#FFCB6B;">yarn</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">dev</span><span style="color:#A6ACCD;">        </span><span style="color:#676E95;font-style:italic;"># start watching source files and open browser.</span></span>
<span class="line"></span></code></pre></div><p><code>yarn dev</code> を使用すると、（<a href="https://browsersync.io/" target="_blank" rel="noreferrer">Browsersync</a> によりライブリロードが有効な）Webサーバーが起動し、Google Chromeが自動的に開きます。 ブラウザーが開かない場合は、<code>http://localhost:3000/core/test/files/</code>&gt;\`を開きます。 ソースファイルを保存すると、ブラウザは自動的にリロードされます。</p><h3 id="ビューワーとテストファイル" tabindex="-1">ビューワーとテストファイル <a class="header-anchor" href="#ビューワーとテストファイル" aria-hidden="true">#</a></h3><p>開発モード中のビューワーHTMLファイルは <code>packages/viewer/lib/vivliostyle-viewer-dev.html</code> にあります。<code>#src=</code> ハッシュパラメータを指定して、ビューワーHTMLファイルから相対の(X)HTMLファイルをURLで指定できます。例えば、<code>http://localhost:3000/viewer/lib/vivliostyle-viewer-dev.html#src=../../core/test/files/print_media/index.html</code> は <code>packages/core/test/files/print_media/index.html</code> にあるprint mediaのテストファイルを開きます。</p><p>開発中に使用することを目的としたテストHTMLファイルは、 <code>packages/core/test/files/</code> にあります。 機能の実装と検証に役立つテストファイルを追加することをお勧めします。</p><p><code>packages/core/scripts/package-artifacts/samples/</code> ディレクトリにテスト用のサンプルファイルがあります。より多くのサンプルが <a href="https://vivliostyle.org/samples" target="_blank" rel="noreferrer">vivliostyle.orgのサンプルページ</a> にあります。</p><h3 id="テスト" tabindex="-1">テスト <a class="header-anchor" href="#テスト" aria-hidden="true">#</a></h3><p>TypeScriptで書かれたソースファイルは、Rollupによってコンパイル・minifyされます。 JavaScriptファイルのminifiedバージョンをビルドするには、（リポジトリのルートディレクトリで）<code>yarn build</code> を実行します。 ソースは型チェックされ、minifyされたファイルは <code>packages/core/lib/</code> と <code>packages/viewer/lib</code> ディレクトリの下に生成されます。</p><p><a href="http://jasmine.github.io/" target="_blank" rel="noreferrer">Jasmine</a> はユニットテストに使用されます。 スペックファイルは <code>packages/core/test/spec/</code> の下にあります。 ローカルマシンでテストを実行するには、<code>yarn test</code> を実行します。</p><p>ユニットテストはGitHubにプッシュした際に <a href="https://travis-ci.org/vivliostyle/vivliostyle.js" target="_blank" rel="noreferrer">Travis CI</a> が自動的に実行されます。masterにプッシュされると、すべてのテストに合格した後、コードは自動的に<a href="https://vivliostyle.github.io/#canary-release-equivalent-to-master" target="_blank" rel="noreferrer">Canary release</a>にデプロイされます。masterへのプッシュ（PRのマージ）には注意してくだい。</p><h3 id="開発モード" tabindex="-1">開発モード <a class="header-anchor" href="#開発モード" aria-hidden="true">#</a></h3><p>開発モード (<code>yarn dev</code>) では、ブラウザの開発者ツールでVivliostyle.jsのTypeScriptソースコードをデバッグできます。</p><h3 id="lint-とコードのフォーマット" tabindex="-1">Lint とコードのフォーマット <a class="header-anchor" href="#lint-とコードのフォーマット" aria-hidden="true">#</a></h3><h3 id="lint-code-formatting" tabindex="-1">Lint / code formatting <a class="header-anchor" href="#lint-code-formatting" aria-hidden="true">#</a></h3><p>vivliostyleのソースコードは、<code>yarn lint</code> を実行（<a href="https://github.com/prettier/eslint-plugin-prettier" target="_blank" rel="noreferrer">eslint-plugin-prettier</a> を用いた <a href="https://eslint.org/" target="_blank" rel="noreferrer">ESLint</a>）して、コード整形してください。</p><p><code>yarn format</code> で <a href="https://prettier.io/" target="_blank" rel="noreferrer">prettier</a> によるコードのフォーマットを行います。</p><h3 id="リリースのフロー" tabindex="-1">リリースのフロー <a class="header-anchor" href="#リリースのフロー" aria-hidden="true">#</a></h3><p>リリース処理の前に、次のコードを実行して、リリースビルドが作成されることを確認します。</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">yarn</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">lint</span></span>
<span class="line"><span style="color:#FFCB6B;">yarn</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">test</span></span>
<span class="line"><span style="color:#FFCB6B;">yarn</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">clean</span></span>
<span class="line"><span style="color:#FFCB6B;">yarn</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">build</span></span>
<span class="line"></span></code></pre></div><h4 id="_1-プレリリース" tabindex="-1">1. プレリリース <a class="header-anchor" href="#_1-プレリリース" aria-hidden="true">#</a></h4><p><code>yarn version:prerelease</code> を実行してプレリリース版を作成します。そして、 <code>yarn version:bump</code> でプレリリース番号を上げます。</p><h4 id="_2-安定版-stable-リリース" tabindex="-1">2. 安定版(Stable)リリース <a class="header-anchor" href="#_2-安定版-stable-リリース" aria-hidden="true">#</a></h4><p>現在のバージョンがプレリリース（例 v2.0.0-pre.4）なら、次を実行します:</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">yarn</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">version:graduate</span></span>
<span class="line"></span></code></pre></div><p>安定版から次の安定版（例 v2.0.0 -&gt; v2.0.1）にバージョンアップする場合:</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">yarn</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">version:bump</span></span>
<span class="line"></span></code></pre></div><h2 id="一貫した命名ガイドライン" tabindex="-1">一貫した命名ガイドライン <a class="header-anchor" href="#一貫した命名ガイドライン" aria-hidden="true">#</a></h2><ol><li>一貫性を保つために、クラス名とそのファイル名を一致させます。</li><li>モジュールのインポート名にはPascalCaseを、ファイル名にはkebab-caseを使用して、違いを視覚的に区別しやすくします。</li><li>分かりやすさのために、ファイル名とクラス名に省略語を使わないようにします。ただし以下を除きます: <ol><li>イニシャリズム（EPUB、PDFなど）。</li><li>長い名前（conditional-properties よりも conditional-props が好ましい）。</li></ol></li></ol><h2 id="コミットメッセージのガイドライン" tabindex="-1">コミットメッセージのガイドライン <a class="header-anchor" href="#コミットメッセージのガイドライン" aria-hidden="true">#</a></h2><p>このプロジェクトへの重要な変更は <code>CHANGELOG.md</code> に記録されます。 そのためのコミットメッセージのガイドラインは <a href="https://conventionalcommits.org" target="_blank" rel="noreferrer">Conventional Commits</a> を参照。</p><h2 id="トラブルシューティング" tabindex="-1">トラブルシューティング <a class="header-anchor" href="#トラブルシューティング" aria-hidden="true">#</a></h2><h3 id="cannot-find-node-modules-vivliostyle-core" tabindex="-1">Cannot find <code>node_modules/@vivliostyle/core</code> <a class="header-anchor" href="#cannot-find-node-modules-vivliostyle-core" aria-hidden="true">#</a></h3><p>これは <code>yarn add</code> の後に発生します。 インストール後にシンボリックリンクを再作成するには、 <code>lerna link</code> を実行します。それ以外の場合は、<code>yarn add</code> の代わりに <code>lerna add</code> を使用します。</p><h2 id="ドキュメントのメンテナンス" tabindex="-1">ドキュメントのメンテナンス <a class="header-anchor" href="#ドキュメントのメンテナンス" aria-hidden="true">#</a></h2><p>以下のドキュメントを開発中に更新してください。</p><ul><li><a href="https://github.com/vivliostyle/vivliostyle.js/blob/master/CHANGELOG.md" target="_blank" rel="noreferrer"><code>CHANGELOG.md</code></a><ul><li><a href="https://conventionalcommits.org" target="_blank" rel="noreferrer">Conventional Commits</a> により自動で生成されます.</li></ul></li><li><a href="./supported-css-features">Supported CSS Features</a><ul><li>VivliostyleでサポートされるCSS機能(values, selectors, at-rules, media queries and properties)</li></ul></li></ul><h2 id="ソースファイル" tabindex="-1">ソースファイル <a class="header-anchor" href="#ソースファイル" aria-hidden="true">#</a></h2><p><code>packages/core/src/</code> 以下のソースファイルについて簡単に説明します。</p><h3 id="vivliostyle-core-viewer-ts" tabindex="-1"><code>vivliostyle/core-viewer.ts</code> <a class="header-anchor" href="#vivliostyle-core-viewer-ts" aria-hidden="true">#</a></h3><ul><li>vivliostyle-coreの公開インターフェースです。Vivliostyle-coreを使用するには、Vivliostyle.CoreViewerをインスタンス化し、オプションを設定し、addListenerメソッドでイベントリスナーを登録し、loadDocumentまたはloadPublicationメソッドを呼び出す必要があります。</li></ul><h3 id="vivliostyle-constants-ts" tabindex="-1"><code>vivliostyle/constants.ts</code> <a class="header-anchor" href="#vivliostyle-constants-ts" aria-hidden="true">#</a></h3><ul><li>ライブラリ全体で使用される定数を定義しています。</li></ul><h3 id="vivliostyle-task-ts" tabindex="-1"><code>vivliostyle/task.ts</code> <a class="header-anchor" href="#vivliostyle-task-ts" aria-hidden="true">#</a></h3><ul><li>タスクのスケジューリング。</li></ul><h3 id="vivliostyle-exprs-ts" tabindex="-1"><code>vivliostyle/exprs.ts</code> <a class="header-anchor" href="#vivliostyle-exprs-ts" aria-hidden="true">#</a></h3><ul><li>Adaptive Layoutの<a href="http://www.idpf.org/epub/pgt/#s2" target="_blank" rel="noreferrer">expressions</a>の定義です。</li></ul><h3 id="vivliostyle-css-ts" tabindex="-1"><code>vivliostyle/css.ts</code> <a class="header-anchor" href="#vivliostyle-css-ts" aria-hidden="true">#</a></h3><ul><li>各種 CSS 値の定義。</li></ul><h3 id="vivliostyle-css-parser-ts" tabindex="-1"><code>vivliostyle/css-parser.ts</code> <a class="header-anchor" href="#vivliostyle-css-parser-ts" aria-hidden="true">#</a></h3><ul><li>CSSパーサー.</li></ul><h3 id="vivliostyle-css-cascade-ts" tabindex="-1"><code>vivliostyle/css-cascade.ts</code> <a class="header-anchor" href="#vivliostyle-css-cascade-ts" aria-hidden="true">#</a></h3><ul><li>セレクタのマッチングとカスケード計算を行うクラスです。</li></ul><h3 id="vivliostyle-vtree-ts" tabindex="-1"><code>vivliostyle/vtree.ts</code> <a class="header-anchor" href="#vivliostyle-vtree-ts" aria-hidden="true">#</a></h3><ul><li>ツリーデータ構造を表示します。</li></ul><h3 id="vivliostyle-css-styler-ts" tabindex="-1"><code>vivliostyle/css-styler.ts</code> <a class="header-anchor" href="#vivliostyle-css-styler-ts" aria-hidden="true">#</a></h3><ul><li>CSSカスケードを文書に段階的に適用する。</li></ul><h3 id="vivliostyle-font-ts" tabindex="-1"><code>vivliostyle/font.ts</code> <a class="header-anchor" href="#vivliostyle-font-ts" aria-hidden="true">#</a></h3><ul><li>Webフォントの取り扱い。</li></ul><h3 id="vivliostyle-page-masters-ts" tabindex="-1"><code>vivliostyle/page-masters.ts</code> <a class="header-anchor" href="#vivliostyle-page-masters-ts" aria-hidden="true">#</a></h3><ul><li><a href="http://www.idpf.org/epub/pgt/#s3.4" target="_blank" rel="noreferrer">Adaptive Layoutのページマスター</a>のクラスです。</li></ul><h3 id="vivliostyle-page-floats-ts" tabindex="-1"><code>vivliostyle/page-floats.ts</code> <a class="header-anchor" href="#vivliostyle-page-floats-ts" aria-hidden="true">#</a></h3><ul><li>ページのフロート.</li></ul><h3 id="vivliostyle-vgen-ts" tabindex="-1"><code>vivliostyle/vgen.ts</code> <a class="header-anchor" href="#vivliostyle-vgen-ts" aria-hidden="true">#</a></h3><ul><li>ビューツリーの生成。</li></ul><h3 id="vivliostyle-layout-ts" tabindex="-1"><code>vivliostyle/layout.ts</code> <a class="header-anchor" href="#vivliostyle-layout-ts" aria-hidden="true">#</a></h3><ul><li>リージョン内のコンテンツレイアウト（カラムブレイクなど）。</li></ul><h3 id="vivliostyle-css-page-ts" tabindex="-1"><code>vivliostyle/css-page.ts</code> <a class="header-anchor" href="#vivliostyle-css-page-ts" aria-hidden="true">#</a></h3><ul><li><a href="https://drafts.csswg.org/css-page/" target="_blank" rel="noreferrer">CSS Paged Media</a>に対応。</li></ul><h3 id="vivliostyle-ops-ts" tabindex="-1"><code>vivliostyle/ops.ts</code> <a class="header-anchor" href="#vivliostyle-ops-ts" aria-hidden="true">#</a></h3><ul><li>ページマスタ、レイアウト領域（列）を1つずつ選択する等。</li></ul><h3 id="vivliostyle-epub-ts" tabindex="-1"><code>vivliostyle/epub.ts</code> <a class="header-anchor" href="#vivliostyle-epub-ts" aria-hidden="true">#</a></h3><ul><li>EPUBメタデータの処理、ページのレンダリングなど。</li></ul><blockquote><p>(もっと多くのファイルがあります... <code>pakcages/core/src</code> ディレクトリを参照してください。)</p></blockquote><h2 id="その他の開発ドキュメント" tabindex="-1">その他の開発ドキュメント <a class="header-anchor" href="#その他の開発ドキュメント" aria-hidden="true">#</a></h2><ul><li>Vivliostyle API Reference</li><li>Migration to TypeScript</li></ul>`,88),o=[a];function r(n,c,v,d,h,p){return s(),l("div",null,o)}const f=e(t,[["render",r]]);export{u as __pageData,f as default};
