import{_ as s,o as a,c as n,Q as e}from"./chunks/framework.92ce8a2a.js";const m=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"translation/duktape/api/duk_get_memory_functions.md","filePath":"translation/duktape/api/duk_get_memory_functions.md","lastUpdated":1676126774000}'),o={name:"translation/duktape/api/duk_get_memory_functions.md"},t=e(`<h2 id="duk-get-memory-functions" tabindex="-1">duk_get_memory_functions() <a class="header-anchor" href="#duk-get-memory-functions" aria-label="Permalink to &quot;duk_get_memory_functions()&quot;">​</a></h2><p>1.0.0 memory heap</p><h3 id="プロトタイプ" tabindex="-1">プロトタイプ <a class="header-anchor" href="#プロトタイプ" aria-label="Permalink to &quot;プロトタイプ&quot;">​</a></h3><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">duk_get_memory_functions</span><span style="color:#E1E4E8;">(duk_context </span><span style="color:#F97583;">*</span><span style="color:#FFAB70;">ctx</span><span style="color:#E1E4E8;">, duk_memory_functions </span><span style="color:#F97583;">*</span><span style="color:#FFAB70;">out_funcs</span><span style="color:#E1E4E8;">);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">duk_get_memory_functions</span><span style="color:#24292E;">(duk_context </span><span style="color:#D73A49;">*</span><span style="color:#E36209;">ctx</span><span style="color:#24292E;">, duk_memory_functions </span><span style="color:#D73A49;">*</span><span style="color:#E36209;">out_funcs</span><span style="color:#24292E;">);</span></span></code></pre></div><h3 id="スタック" tabindex="-1">スタック <a class="header-anchor" href="#スタック" aria-label="Permalink to &quot;スタック&quot;">​</a></h3><p>(バリュースタックに影響なし)</p><h3 id="要約" tabindex="-1">要約 <a class="header-anchor" href="#要約" aria-label="Permalink to &quot;要約&quot;">​</a></h3><p>コンテキストが使用するメモリ管理関数を取得します。</p><p>通常、この関数を呼び出す理由はない。 duk_alloc(), duk_realloc(), duk_free() のようなラップされたメモリ管理関数を通して、メモリ管理プリミティブを使用することができるからです。</p><h3 id="例" tabindex="-1">例 <a class="header-anchor" href="#例" aria-label="Permalink to &quot;例&quot;">​</a></h3><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">duk_memory_functions funcs;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">duk_get_memory_functions</span><span style="color:#E1E4E8;">(ctx, </span><span style="color:#F97583;">&amp;</span><span style="color:#FFAB70;">funcs</span><span style="color:#E1E4E8;">);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">duk_memory_functions funcs;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">duk_get_memory_functions</span><span style="color:#24292E;">(ctx, </span><span style="color:#D73A49;">&amp;</span><span style="color:#E36209;">funcs</span><span style="color:#24292E;">);</span></span></code></pre></div>`,11),l=[t];function p(c,r,i,d,u,_){return a(),n("div",null,l)}const h=s(o,[["render",p]]);export{m as __pageData,h as default};
