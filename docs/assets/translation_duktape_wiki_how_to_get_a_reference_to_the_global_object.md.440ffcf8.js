import{_ as s,c as a,o as n,a as l}from"./app.e18c80f2.js";const C=JSON.parse('{"title":"グローバルオブジェクトへの参照を取得する方法","description":"","frontmatter":{},"headers":[],"relativePath":"translation/duktape/wiki/how_to_get_a_reference_to_the_global_object.md","lastUpdated":1676126774000}'),o={name:"translation/duktape/wiki/how_to_get_a_reference_to_the_global_object.md"},p=l(`<h1 id="グローバルオブジェクトへの参照を取得する方法" tabindex="-1">グローバルオブジェクトへの参照を取得する方法 <a class="header-anchor" href="#グローバルオブジェクトへの参照を取得する方法" aria-hidden="true">#</a></h1><p>ECMAScript にはグローバル・オブジェクトのための標準的な名前付きバインディングがないので、スクリプトは様々なイディオムを使ってグローバル・オブジェクトにアクセスします。Duktape 2.1以降では、<a href="https://github.com/tc39/proposal-global" target="_blank" rel="noreferrer">https://github.com/tc39/proposal-global</a> に基づいて、明示的なグローバル・バインディングが利用できます。</p><p>次のスニペットは、グローバル（プログラム）コード、evalコード、関数コードなど、どのコンテキストからでもグローバルオブジェクトに簡単にアクセスできます（暗号化されているとしても）。</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> globalObject </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Function</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">return this;</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><p>globalは標準化される可能性が高いので、以下のようなpolyfillが望ましいかもしれません（<a href="https://github.com/svaarala/duktape/blob/master/polyfills/global.js%EF%BC%89%E3%80%82" target="_blank" rel="noreferrer">https://github.com/svaarala/duktape/blob/master/polyfills/global.js）。</a></p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> (</span><span style="color:#89DDFF;">typeof</span><span style="color:#A6ACCD;"> global </span><span style="color:#89DDFF;">===</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">undefined</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    (</span><span style="color:#C792EA;">function</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#C792EA;">var</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">global</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">new</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">Function</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">return this;</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">Object</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">defineProperty</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">global</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">global</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">            value</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">global</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">            writable</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">            enumerable</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FF9CAC;">false</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">            configurable</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FF9CAC;">true</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>new Function(...) は、引数として与えられたボディを持つ新しい関数を作成します。他の多くのコンテキストとは異なり、周囲のコードの厳密性は継承されないので、作成された関数は厳密ではないので、これは一貫してグローバルオブジェクトにバインドされます。</p>`,7),e=[p];function t(r,c,F,y,D,i){return n(),a("div",null,e)}const A=s(o,[["render",t]]);export{C as __pageData,A as default};
