import{_ as a,c as s,o,Q as t}from"./chunks/framework.44f152d8.js";const h=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"translation/duktape/api/duk_xcopy_top.md","lastUpdated":1676126774000}'),e={name:"translation/duktape/api/duk_xcopy_top.md"},n=t(`<h2 id="duk-xcopy-top" tabindex="-1">duk_xcopy_top() <a class="header-anchor" href="#duk-xcopy-top" aria-label="Permalink to &quot;duk_xcopy_top()&quot;">​</a></h2><p>1.0.0 stack slice</p><h3 id="プロトタイプ" tabindex="-1">プロトタイプ <a class="header-anchor" href="#プロトタイプ" aria-label="Permalink to &quot;プロトタイプ&quot;">​</a></h3><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">duk_xcopy_top</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">duk_context </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">to_ctx</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> duk_context </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">from_ctx</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">duk_idx_t</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">count</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span></code></pre></div><h3 id="スタック" tabindex="-1">スタック <a class="header-anchor" href="#スタック" aria-label="Permalink to &quot;スタック&quot;">​</a></h3><p>| ... | val1 | ... | valN | -&gt; | ... | val1 | ... | valN | (on source stack, from_ctx) | ... | -&gt; | ... | val1 | ... | valN | (on target stack, to_ctx)</p><h3 id="要約" tabindex="-1">要約 <a class="header-anchor" href="#要約" aria-label="Permalink to &quot;要約&quot;">​</a></h3><p>duk_xmove_top() と同様ですが、コピーされる要素はコピー元スタックからポップアップされません。コピー元とコピー先の両方のスタックは、同じ Duktape ヒープに存在しなければなりません。</p><p>Lua の lua_xmove() と比較して、スタックからの順序とスタックへの順序が逆になっています。</p><h3 id="例" tabindex="-1">例 <a class="header-anchor" href="#例" aria-label="Permalink to &quot;例&quot;">​</a></h3><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#82AAFF;">duk_xcopy_top</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">new_ctx</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> ctx</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">7</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span></code></pre></div><h3 id="参照" tabindex="-1">参照 <a class="header-anchor" href="#参照" aria-label="Permalink to &quot;参照&quot;">​</a></h3><p>duk_xmove_top</p>`,13),l=[n];function p(c,r,i,d,_,u){return o(),s("div",null,l)}const D=a(e,[["render",p]]);export{h as __pageData,D as default};
