import{_ as t,c as a,o as r,b as e,d as n}from"./app.b419af8d.js";const k=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[{"level":2,"title":"乱数について","slug":"random_numbers","link":"#random_numbers","children":[]}],"relativePath":"translation/duktape/guide/random_numbers.md","lastUpdated":1676126774000}'),o={name:"translation/duktape/guide/random_numbers.md"},s=e("h2",{id:"random_numbers",tabindex:"-1"},[n("乱数について "),e("a",{class:"header-anchor",href:"#random_numbers","aria-hidden":"true"},"#")],-1),d=e("p",null,"乱数は、内部的に Math.random() で使用されています。また、現在は Array.prototype.sort() の実装でランダムピボット選択のために使用されています。",-1),_=e("p",null,"デフォルトの内部乱数生成器は xoroshiro128+ で、SplitMix64 シードミキシングを使用します。Shamirの3-op PRNGは低メモリターゲットやコンパイラが64ビット型を持っていない場合に使用されます。このジェネレータは、例えばシード材料の品質が限られているため、本格的な統計アルゴリズムには適しておらず、暗号には全く適していません。",-1),i=e("p",null,"DUK_USE_GET_RANDOM_DOUBLE 設定オプションを使って、内部の乱数生成器を置き換えることができます。",-1),c=[s,d,_,i];function l(m,p,u,h,b,f){return r(),a("div",null,c)}const N=t(o,[["render",l]]);export{k as __pageData,N as default};
