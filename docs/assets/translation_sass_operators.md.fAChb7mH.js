import{_ as E,D as l,o as c,c as o,k as p,a,I as s,w as i,R as t}from"./chunks/framework.c2IVng1e.js";const T=JSON.parse('{"title":"演算子","description":"","frontmatter":{},"headers":[],"relativePath":"translation/sass/operators.md","filePath":"translation/sass/operators.md","lastUpdated":1676974355000}'),u={name:"translation/sass/operators.md"},y=t(`<h1 id="演算子" tabindex="-1">演算子 <a class="header-anchor" href="#演算子" aria-label="Permalink to &quot;演算子&quot;">​</a></h1><nav class="table-of-contents"><ul><li><a href="#概要">概要</a><ul><li><a href="#操作順序">操作順序</a></li><li><a href="#シングルイコールズ">シングルイコールズ</a></li></ul></li><li><a href="#等価性">等価性</a></li><li><a href="#リレーショナル">リレーショナル</a></li><li><a href="#数値">数値</a><ul><li><a href="#単項演算子">単項演算子</a></li><li><a href="#除算">除算</a></li><li><a href="#ユニット">ユニット</a></li></ul></li><li><a href="#文字列">文字列</a><ul><li><a href="#単項演算子-1">単項演算子</a></li></ul></li><li><a href="#ブーリアン">ブーリアン</a><ul><li><a href="#真実性と虚偽性">真実性と虚偽性</a></li></ul></li></ul></nav><h2 id="概要" tabindex="-1">概要 <a class="header-anchor" href="#概要" aria-label="Permalink to &quot;概要&quot;">​</a></h2><p>Sass は、さまざまな値を扱うための便利な演算子をサポートしています。これらの演算子には、<code>+</code> や <code>*</code> といった標準的な数学演算子や、その他の様々な型の演算子が含まれます。</p><ul><li><code>==</code> と <code>!=</code> は、2つの値が同じかどうかを確認するために使用されます。</li><li><code>+, -, *, /, %</code> は、数値に対する通常の数学的意味を持ち、科学的数学における単位の使用と一致するような単位に対する特別な動作があります。</li><li><code>&lt;, &lt;=, &gt;, &gt;=</code> は、2つの数値が互いに大きいか小さいかをチェックする。</li><li><code>and, or, and not</code> は通常のブーリアン演算を行います。Sassはfalseとnullを除くすべての値を &quot;true &quot;と見なします。</li><li><code>+, -, /</code> は文字列の連結に使用されます。</li></ul><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>⚠️ Heads up!</p><p>Sassの歴史の初期には、色に対する数学的な操作のサポートが追加されました。この演算は色の RGB チャンネルを個別に操作するため、2 色を足すとその赤チャンネルの合計を赤チャンネルとした色が生成され、以下同様となります。</p><p>このようなチャンネルごとのRGB演算は、人間の色の感じ方とうまく対応していないため、あまり便利な動作ではありませんでした。より便利な色関数が追加され、色演算は非推奨とされました。LibSassとRuby Sassではまだサポートされていますが、警告が出るので避けることが強く推奨されます。</p></div><h3 id="操作順序" tabindex="-1">操作順序 <a class="header-anchor" href="#操作順序" aria-label="Permalink to &quot;操作順序&quot;">​</a></h3><p>Sassは、最も緊密なものから最も緩やかなものまで、かなり標準的な操作順序を持ちます。</p><ul><li>単項演算子 not, +, -, および /。</li><li>演算子 *、/、および %。</li><li><code>+</code> および <code>-</code> 演算子。</li><li>The &gt;, &gt;=, &lt;, &lt;= 演算子。</li><li>演算子 == および !=</li><li>and 演算子</li><li>or 演算子</li><li>利用可能な場合は、=演算子。</li></ul><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 1 + 2 * 3 == 1 + (2 * 3); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// true</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> true or false and false == true or (false and false); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// true</span></span></code></pre></div><h4 id="括弧内" tabindex="-1">括弧内 <a class="header-anchor" href="#括弧内" aria-label="Permalink to &quot;括弧内&quot;">​</a></h4><p>括弧を使用すると、操作の順序を明示的に制御することができます。括弧の中にある演算は、常に括弧の外にある演算よりも先に評価されます。括弧は入れ子にすることもでき、その場合は最も内側の括弧が最初に評価されます。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (1 + 2) * 3; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 9</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ((1 + 2) * 3 + 4) * 5; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 65</span></span></code></pre></div><h3 id="シングルイコールズ" tabindex="-1">シングルイコールズ <a class="header-anchor" href="#シングルイコールズ" aria-label="Permalink to &quot;シングルイコールズ&quot;">​</a></h3><p>Sassは、関数の引数でのみ使用できる特別な=演算子をサポートしており、2つのオペランドを=で区切って引用符なしの文字列を作成するだけです。これは、非常に古いIE専用の構文との後方互換性のために存在します。</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-wEjjb" id="tab-1nvH5d3" checked="checked"><label for="tab-1nvH5d3">SCSS</label><input type="radio" name="group-wEjjb" id="tab-w6gOf7e"><label for="tab-w6gOf7e">CSS</label></div><div class="blocks"><div class="language-scss vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.transparent-blue</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  filter</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">chroma</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">color</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">=#0000ff</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.transparent-blue</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  filter</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: chroma(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">#0000ff</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></div></div><h2 id="等価性" tabindex="-1">等価性 <a class="header-anchor" href="#等価性" aria-label="Permalink to &quot;等価性&quot;">​</a></h2><p>互換性 (単位なしイコール):</p><ul><li>Dart Sass: ✓</li><li>LibSass: ✗</li><li>Ruby Sass: since 4.0.0 (unreleased)</li><li>▶</li></ul><p>等式演算子は、2つの値が同じかどうかを返します。これらは <code>&lt;expression&gt; == &lt;expression&gt;</code> と書き、2つの式が等しいかどうかを返し、 <code>&lt;expression&gt; != &lt;expression&gt;</code> と書くと、2つの式が等しくないかどうかを返します。2つの値は同じ型、同じ値であれば等しいとみなされますが、型によって意味が異なります。</p><ul><li>数値は、同じ値で同じ単位の場合、または単位を相互に変換したときに値が等しい場合に等しいとされます。</li><li>文字列は、引用されていない文字列と引用された文字列が同じ内容であれば等しいとみなされるという点で特殊である。</li><li>色は、赤、緑、青、アルファ値が同じであれば等しい。</li><li>リストは、その内容が同じであれば等しい。カンマ区切りのリストとスペース区切りのリストは等しくありませんし、括弧付きのリストと括弧なしのリストは等しくありません。</li><li>マップは、キーと値が等しい場合に等しくなります。</li><li>計算は、その名前と引数がすべて等しい場合に等しくなります。演算の引数はテキストで比較されます。</li><li>true、false、nullはそれ自身としか等しくありません。</li><li>関数は、同じ関数と等しい。関数は参照で比較されるので、2つの関数が同じ名前と定義を持っていても、同じ場所で定義されていなければ、異なるものとみなされます。</li></ul><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 1px == 1px; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// true</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 1px != 1em; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// true</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 1 != 1px; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// true</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 96px == 1in; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// true</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Helvetica&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> == Helvetica; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// true</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Helvetica&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> != </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Arial&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// true</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> hsl(34, 35%, 92.1%) == #f2ece4; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// true</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> rgba(179, 115, 153, 0.5) != rgba(179, 115, 153, 0.8); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// true</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (5px 7px 10px) == (5px 7px 10px); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// true</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (5px 7px 10px) != (10px 14px 20px); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// true</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (5px 7px 10px) != (5px, 7px, 10px); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// true</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (5px 7px 10px) != [5px 7px 10px]; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// true</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$theme</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: (</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;venus&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">#998099</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;nebula&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">#d2e1dd</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> $theme</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> == (</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;venus&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: #998099, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;nebula&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: #d2e1dd); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// true</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> $theme</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> != (</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;venus&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: #998099, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;iron&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: #dadbdf); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// true</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> true == true; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// true</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> true != false; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// true</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> null != false; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// true</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> get-function(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;rgba&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) == get-function(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;rgba&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// true</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> get-function(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;rgba&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) != get-function(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;hsla&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// true</span></span></code></pre></div><h2 id="リレーショナル" tabindex="-1">リレーショナル <a class="header-anchor" href="#リレーショナル" aria-label="Permalink to &quot;リレーショナル&quot;">​</a></h2><p>関係演算子は、数値が互いに大きいか小さいかを判断します。また、互換性のある単位間の変換も自動的に行います。</p><ul><li><code>&lt;expression&gt; &lt; &lt;expression&gt;</code> は、最初の式の値が2番目の式の値より小さいかどうかを返します。</li><li><code>&lt;expression&gt; &lt;= &lt;expression&gt;</code> は最初の式の値が2番目の式の値より小さいかどうかを返します。</li><li><code>&lt;expression&gt; &gt; &lt;expression&gt;</code> は最初の式の値が2番目の式の値より大きいかどうかを返します。</li><li><code>&lt;expression&gt; &gt;= &lt;expression&gt;</code> は、最初の式の値が2番目の式の値より大きいかどうかを返します。second’s.</li></ul><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 100 &gt; 50; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// true</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 10px &lt; 17px; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// true</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 96px &gt;= 1in; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// true</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 1000ms &lt;= 1s; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// true</span></span></code></pre></div><p>単位のない数値は、どんな数値とも比較することができます。自動的にその数値の単位に変換されます。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 100 &gt; 50px; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// true</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 10px &lt; 17; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// true</span></span></code></pre></div><p>互換性のないユニットとの数値は比較できない。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 100px &gt; 10s;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//     ^^^^^^^^^^^</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Error: Incompatible units px and s.</span></span></code></pre></div><h2 id="数値" tabindex="-1">数値 <a class="header-anchor" href="#数値" aria-label="Permalink to &quot;数値&quot;">​</a></h2><p>Sass は、数値のための数学演算子の標準セットをサポートしています。これらは互換性のある単位間で自動的に変換されます。</p><ul><li><code>&lt;expression&gt; + &lt;expression&gt;</code> は最初の式の値を2番目の式に加えます。</li><li><code>&lt;expression&gt; - &lt;expression&gt;</code> は2番目の式の値から1番目の式の値を引きます。</li><li><code>&lt;expression&gt; * &lt;expression&gt;</code> は最初の式の値と2番目の式の値を掛け合わせます。</li><li><code>&lt;expression&gt; % &lt;expression&gt;</code> は最初の式の値を2番目の式の値で割った余りを返します。これはモジュロ演算子として知られています。</li></ul><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 10s + 15s; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 25s</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 1in - 10px; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 0.8958333333in</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 5px * 3px; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 15px*px</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 1in % 9px; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 0.0625in</span></span></code></pre></div><p>単位なしの数値は、どのような単位の数値でも使用できます。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 100px + 50; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 150px</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 4s * 10; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 40s</span></span></code></pre></div><p>単位に互換性のない数値は、加算、減算、モジュロで使用することはできません。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 100px + 10s;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//     ^^^^^^^^^^^</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Error: Incompatible units px and s.</span></span></code></pre></div><h3 id="単項演算子" tabindex="-1">単項演算子 <a class="header-anchor" href="#単項演算子" aria-label="Permalink to &quot;単項演算子&quot;">​</a></h3><p>単項演算子として、<code>+</code> と <code>-</code> を書くこともできます。</p><ul><li><code>+&lt;expression&gt;</code> は式の値をそのまま返す。</li><li><code>-&lt;expression&gt;</code> は式の値のマイナス版を返す。</li></ul><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> +(5s + 7s); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 12s</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> -(50px + 30px); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// -80px</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> -(10px - 15px); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 5px</span></span></code></pre></div><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>⚠️ Heads up!</p><p>は引き算と単項の否定の両方を意味するため、スペースで区切られたリストではどちらがどちらかわからなくなることがあります。念のため。</p><ul><li>引き算をするときは、常に <code>-</code> の両側にスペースを入れる。</li><li>負の数、単項の否定は <code>-</code> の前にスペースを書き、後には書かない。</li><li>単項の否定がスペースで区切られたリストの中にある場合は、括弧でくくる。</li></ul><p>Sass における <code>-</code> の異なる意味は、以下の順序で優先される。</p><ol><li>識別子の一部として <code>-</code> を使用することができます。Sass では通常、有効な識別子であれば何でも使用できますが、ユニットにはハイフンの後に数字を含めることはできません。</li><li>式とリテラル数値の間の <code>-</code> は、空白を含まず、減算としてパースされます。</li><li>リテラル数値の先頭にある <code>-</code> は負数としてパースされます。</li><li>空白に関係なく、2つの数値の間にある <code>-</code> は、引き算として解析されます。</li><li>数値以外の値の前に<code>-</code>がある場合、単項の否定として処理されます。</li></ol><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> a-1; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// a-1</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 5px-3px; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 2px</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 5-3; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 2</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 1 -2 3; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 1 -2 3</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 1 -</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 3; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// -1 3</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 1 (-</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) 3; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 1 -2 3</span></span></code></pre></div></div><h3 id="除算" tabindex="-1">除算 <a class="header-anchor" href="#除算" aria-label="Permalink to &quot;除算&quot;">​</a></h3><p>互換性 (math.div()):</p><ul><li>Dart Sass: since 1.33.0</li><li>LibSass: ✗</li><li>Ruby Sass: ✗</li></ul><p>他の数学的操作とは異なり、Sassにおける除算は math.div() 関数で行われます。多くのプログラミング言語では / を除算演算子として使用しますが、CSS では / は区切り文字として使用します (font.Px/32px や hsl(120 100% 50% / 0.8) のように)。15px/32px や hsl(120 100% 50% / 0.8) のように）。Sassは/を除算演算子として使用することをサポートしていますが、これは非推奨であり、将来のバージョンで削除される予定です。</p><h4 id="スラッシュで区切られた値" tabindex="-1">スラッシュで区切られた値 <a class="header-anchor" href="#スラッシュで区切られた値" aria-label="Permalink to &quot;スラッシュで区切られた値&quot;">​</a></h4><p>Sassがまだ/を除算演算子としてサポートしている間は、/をセパレータとして、/を除算として曖昧さをなくす方法を持たなければなりません。これを実現するために、2つの数値が/で区切られている場合、以下の条件のいずれかが満たされない限り、Sassは結果を分割ではなくスラッシュで区切ったものとして表示するようにします。</p><ul><li>どちらかの式がリテラルな数値以外であること。</li><li>結果は変数に格納されるか、関数によって返されます。</li><li>演算は括弧で囲まれます。ただし、括弧が演算を含むリストの外側にある場合は除きます。</li><li>結果が他の操作の一部として使用される（/以外）。</li></ul><p>[list.slash()]を使用すると、強制的に/をセパレータとして使用することができます。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@use</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;sass:list&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 15px / 30px; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 15px/30px</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (10px + 5px) / 30px; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 0.5</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> list.slash(10px + 5px, 30px); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 15px/30px</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$result</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">15</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> /</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 30</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> $result</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 0.5</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@function</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> fifteen-divided-by-thirty</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  @return</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 15</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> /</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 30</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> fifteen-divided-by-thirty(); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 0.5</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (15px/30px); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 0.5</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (bold 15px/30px sans-serif); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// bold 15px/30px sans-serif</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 15px/30px + 1; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 1.5</span></span></code></pre></div><h3 id="ユニット" tabindex="-1">ユニット <a class="header-anchor" href="#ユニット" aria-label="Permalink to &quot;ユニット&quot;">​</a></h3><p>Sassは、実際の単位計算の仕組みに基づき、単位を操作するための強力なサポートを持っています。2つの数値が掛け合わされるとき、その単位も掛け合わされます。ある数を別の数で割る場合、その結果は最初の数から分子の単位を、2番目の数から分母の単位を取得します。数字は、分子と分母の両方またはどちらか一方に、任意の数の単位を持つことができます。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 4px * 6px; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 24px*px (read &quot;square pixels&quot;)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> math.div(5px, 2s); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 2.5px/s (read &quot;pixels per second&quot;)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 3.125px*deg/s*em (read &quot;pixel-degrees per second-em&quot;)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 5px * math.div(math.div(30deg, 2s), 24em); </span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$degrees-per-second</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">math</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">20</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">deg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">s</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> $degrees-per-second</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 20deg/s</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> math.div(1, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$degrees-per-second</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 0.05s/deg</span></span></code></pre></div><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>⚠️ Heads up!</p><p>CSSは平方ピクセルのような複雑な単位をサポートしていないため、プロパティ値として複雑な単位を持つ数値を使用するとエラーが発生します。しかし、これは偽装された機能です。正しい単位で終わらない場合は、通常、計算に何か問題があることを意味します。また、@debugルールを使えば、いつでも変数や式の単位をチェックすることができます。</p></div><p>Sassは互換性のある単位を自動的に変換しますが、どの単位を選択するかは使用しているSassの実装に依存します。1in + 1emのように互換性のない単位を組み合わせようとすると、Sassはエラーを投げます。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// CSS defines one inch as 96 pixels.</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 1in + 6px; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 102px or 1.0625in</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 1in + 1s;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//     ^^^^^^^^</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Error: Incompatible units s and in.</span></span></code></pre></div><p>実際の単位計算と同様に、分子に分母の単位と互換性のある単位が含まれていれば（math.div(96px, 1in)など）、それらは相殺されるのです。このため、単位間の変換に使用する比率を簡単に定義することができます。この例では、50ピクセルあたり1秒という速度を設定し、それにトランジションがカバーするピクセル数をかけて、トランジションにかかる時間を算出しています。</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-3eBj7" id="tab-QP5coqe" checked="checked"><label for="tab-QP5coqe">scss</label><input type="radio" name="group-3eBj7" id="tab-5tFdlQx"><label for="tab-5tFdlQx">css</label></div><div class="blocks"><div class="language-scss vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$transition-speed</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">math</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">s</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">50</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@mixin</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> move</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$left-start</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$left-stop</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  position</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">absolute</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  left</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$left-start</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  transition</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">left</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$left-stop</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> $left-start</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> $transition-speed</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  &amp;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">:hover</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    left</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$left-stop</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.slider</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  @include</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> move</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">120</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.slider</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  position</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">absolute</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  left</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  transition</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">left</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2.2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">s</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.slider:hover</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  left</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">120</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></div></div><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>⚠️ Heads up!</p><p>もし、計算で間違った単位が出た場合は、おそらく計算を確認する必要があります。単位があるはずの量から、単位が抜けている可能性があります。単位を明確にすることで、Sassは何かが正しくないときに役立つエラーを出してくれます。</p><p>特に、#{<span class="katex-error" title="ParseError: KaTeX parse error: Expected &#39;EOF&#39;, got &#39;}&#39; at position 7: number}̲pxのような補間の使用は避ける…">number}pxのような補間の使用は避けるべきです。これは実際には数字を作成しません!これは数値のように見える引用符で囲まれていない文字列を作成しますが、数値演算や関数では動作しません。数学の単位をきれいにし、</span>numberがすでにpxという単位を持つようにするか、$number * 1pxと書くようにしましょう。</p></div>`,61),A={class:"warning custom-block"},F=p("p",{class:"custom-block-title"},"WARNING",-1),b=p("p",null,"⚠️ Heads up!",-1),D=p("p",null,"Sassのパーセンテージは他の単位と同じように機能します。CSS では小数とパーセントは異なることを意味するため、小数と互換性がありません。例えば、50% は単位が % の数値であり、Sass では 0.5 と異なるものとして扱われます。",-1),m={class:"katex"},v={class:"katex-mathml"},x=t('<span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8389em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">p</span><span class="mord mathnormal">erce</span><span class="mord mathnormal">n</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">e</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">100</span></span></span>',1),C=t(`<h2 id="文字列" tabindex="-1">文字列 <a class="header-anchor" href="#文字列" aria-label="Permalink to &quot;文字列&quot;">​</a></h2><p>Sass は、文字列を生成するいくつかの演算子をサポートしています。</p><ul><li><code>&lt;expression&gt; + &lt;expression&gt;</code> は、両方の式の値を含む文字列を返します。どちらかの値が引用符で囲まれた文字列である場合、結果は引用符で囲まれた文字列となります。</li><li><code>&lt;expression&gt; - &lt;expression&gt;</code> は、-で区切られた両方の式の値を含む、引用符で囲まれていない文字列を返します。これはレガシーな演算子であり、一般的には補間を行う必要があります。</li></ul><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Helvetica&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> + </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot; Neue&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// &quot;Helvetica Neue&quot;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> sans- + serif; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// sans-serif</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> sans - serif; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// sans-serif</span></span></code></pre></div><p>これらの演算子は、文字列に対してのみ有効なわけではありません。CSS に書き込むことができるすべての値に対して使用することができます。</p><ul><li>数値は独自の演算子を持っているので、左辺の値として使用することはできません。</li><li>色は左辺の値として使用できません。なぜなら、以前は独自の演算子を持っていたからです。</li></ul><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Elapsed time: &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> + 10s; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// &quot;Elapsed time: 10s&quot;;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> true + </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot; is a boolean value&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// &quot;true is a boolean value&quot;;</span></span></code></pre></div><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>⚠️ Heads up!</p><p>この演算子に頼るよりも、補間を用いて文字列を作成した方が、すっきりして分かりやすいことが多い。</p></div><h3 id="単項演算子-1" tabindex="-1">単項演算子 <a class="header-anchor" href="#単項演算子-1" aria-label="Permalink to &quot;単項演算子&quot;">​</a></h3><p>歴史的な理由により、Sassは1つの値のみを取る単項演算子として、/と-もサポートしています。</p><ul><li><code>/&lt;expression&gt;</code> は / で始まる引用符で囲まれていない文字列と、その後に続く式の値を返す。</li><li><code>-&lt;expression&gt;</code> は - で始まり、その後に式の値が続く引用符で囲まれていない文字列を返す。</li></ul><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> / 15px; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// /15px</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> - moz; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// -moz</span></span></code></pre></div><h2 id="ブーリアン" tabindex="-1">ブーリアン <a class="header-anchor" href="#ブーリアン" aria-label="Permalink to &quot;ブーリアン&quot;">​</a></h2><p>JavaScriptなどの言語とは異なり、Sassはブーリアン演算子に記号ではなく単語を使用します。</p><ul><li><code>not &lt;expression&gt;</code> は式の値の反対を返します。つまり、true を false に、false を true に変えます。</li><li><code>&lt;expression&gt; and &lt;expression&gt;</code> は、両方の式の値が true であれば true を、どちらかが false であれば false を返します。</li><li><code>&lt;expression&gt; or &lt;expression&gt;</code> はどちらかの式の値がtrueであればtrueを、両方がfalseであればfalseを返します。</li></ul><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> not true; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// false</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> not false; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// true</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> true and true; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// true</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> true and false; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// false</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> true or false; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// true</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> false or false; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// false</span></span></code></pre></div><h3 id="真実性と虚偽性" tabindex="-1">真実性と虚偽性 <a class="header-anchor" href="#真実性と虚偽性" aria-label="Permalink to &quot;真実性と虚偽性&quot;">​</a></h3><p>true または false が許される場所では、他の値も使用することができます。false と null は虚偽であり、Sass はそれらが虚偽であることを示し、条件を失敗させると考えることを意味します。他のすべての値は真偽があるとみなされ、Sassはそれらをtrueのように動作し、条件を成功させる原因と見なします。</p><p>例えば、文字列にスペースが含まれているかどうかをチェックしたい場合は、string.index($string, &quot; &quot;)と書けばよいのです。string.index() 関数は、文字列が見つからなければ null を返し、そうでなければ数値を返します。</p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>⚠️ Heads up!</p><p>言語によっては、false や null よりも多くの値を falsey と見なすものもあります。Sass はそれらの言語の一つではありません。空の文字列、空のリスト、そして数字の0はすべてSassではtruthyです。</p></div>`,20);function f(_,B,q,S,P,$){const n=l("mi"),e=l("mo"),h=l("mn"),k=l("mrow"),d=l("annotation"),r=l("semantics"),g=l("math");return c(),o("div",null,[y,p("div",A,[F,b,D,p("p",null,[a("math.div("),p("span",m,[p("span",v,[s(g,{xmlns:"http://www.w3.org/1998/Math/MathML"},{default:i(()=>[s(r,null,{default:i(()=>[s(k,null,{default:i(()=>[s(n,null,{default:i(()=>[a("p")]),_:1}),s(n,null,{default:i(()=>[a("e")]),_:1}),s(n,null,{default:i(()=>[a("r")]),_:1}),s(n,null,{default:i(()=>[a("c")]),_:1}),s(n,null,{default:i(()=>[a("e")]),_:1}),s(n,null,{default:i(()=>[a("n")]),_:1}),s(n,null,{default:i(()=>[a("t")]),_:1}),s(n,null,{default:i(()=>[a("a")]),_:1}),s(n,null,{default:i(()=>[a("g")]),_:1}),s(n,null,{default:i(()=>[a("e")]),_:1}),s(e,{separator:"true"},{default:i(()=>[a(",")]),_:1}),s(h,null,{default:i(()=>[a("100")]),_:1})]),_:1}),s(d,{encoding:"application/x-tex"},{default:i(()=>[a("percentage, 100%) は対応する小数を返し、")]),_:1})]),_:1})]),_:1})]),x]),a("decimal * 100% は対応するパーセンテージを返します。また、$decimal * 100% をより明示的に記述する方法として math.percentage() 関数を使用することもできます。")])]),C])}const w=E(u,[["render",f]]);export{T as __pageData,w as default};
