import{_ as e,c as s,o as a,a as n}from"./app.e18c80f2.js";const C=JSON.parse('{"title":"全くの初心者のためのMesonのインストールと使用に関するガイド","description":"","frontmatter":{},"headers":[{"level":2,"title":"コンパイラツールチェーンのインストール","slug":"コンパイラツールチェーンのインストール","link":"#コンパイラツールチェーンのインストール","children":[{"level":3,"title":"Linux","slug":"linux","link":"#linux","children":[]},{"level":3,"title":"Windows","slug":"windows","link":"#windows","children":[]},{"level":3,"title":"macOS","slug":"macos","link":"#macos","children":[]}]},{"level":2,"title":"Mesonのインストール","slug":"mesonのインストール","link":"#mesonのインストール","children":[{"level":3,"title":"Linux","slug":"linux-1","link":"#linux-1","children":[]},{"level":3,"title":"Windows","slug":"windows-1","link":"#windows-1","children":[]},{"level":3,"title":"macOS","slug":"macos-1","link":"#macos-1","children":[]}]},{"level":2,"title":"Mesonを実行する","slug":"mesonを実行する","link":"#mesonを実行する","children":[]}],"relativePath":"translation/meson/simplestart.md","lastUpdated":1676126774000}'),l={name:"translation/meson/simplestart.md"},i=n(`<h1 id="全くの初心者のためのmesonのインストールと使用に関するガイド" tabindex="-1">全くの初心者のためのMesonのインストールと使用に関するガイド <a class="header-anchor" href="#全くの初心者のためのmesonのインストールと使用に関するガイド" aria-hidden="true">#</a></h1><p>このページは、Meson を使うのが初めての人、あるいは C や C++ のコードを一般にコンパイルするのが初めての人のために用意されています。このページには、ビルド環境を立ち上げて実行するための簡単な方法の1つが含まれていることを意図しています。もしあなたが経験豊富で、開発ソフトウェアをインストールし使用するための独自の方法をお持ちでしたら、ご自由にそれを代わりに使用してください。このガイドでは、Linux、Windows、macOSのプラットフォームのみを扱います。もしあなたがBSDのような他のプラットフォームを使っているなら、あなたはすでにそのプラットフォームへの開発ツールのインストール方法を知っているでしょう(おそらく、私たちよりも上手に)。</p><p>開発環境を稼働させるには、3つのフェーズがあります。</p><ol><li>コンパイラツールチェーンのインストール</li><li>Mesonのインストール</li><li>プロジェクトの作成とビルド</li></ol><h2 id="コンパイラツールチェーンのインストール" tabindex="-1">コンパイラツールチェーンのインストール <a class="header-anchor" href="#コンパイラツールチェーンのインストール" aria-hidden="true">#</a></h2><h3 id="linux" tabindex="-1">Linux <a class="header-anchor" href="#linux" aria-hidden="true">#</a></h3><p>すべてのLinuxディストリビューションは、開発ツールに簡単にアクセスできるようになっています。通常、ターミナルを開いて1つのコマンドを実行する必要がありますが、これはお使いのディストリビューションに依存します。</p><ul><li>Debian、Ubuntu、およびその派生版：<code>sudo apt install build-essential</code></li><li>Fedora, Centos, RHEL およびその派生版: <code>sudo dnf install gcc-c++</code></li><li>Arch: <code>sudo pacman -S gcc</code></li></ul><h3 id="windows" tabindex="-1">Windows <a class="header-anchor" href="#windows" aria-hidden="true">#</a></h3><p>Windowsで最も一般的な開発ツールチェーンはVisual Studioで、Visual Studioのウェブサイトからダウンロードすることができます。ライセンスを購入されていない場合は、Community版を選択してください。</p><p>Visual Studioのダウンロードページ</p><p>インストーラーをダウンロードし、実行します。インストールするもののリストが表示されるので、「Desktop development with C++」を選択します。これで、CコンパイラとC++コンパイラの両方がインストールされます。</p><p>Visual Studioのコンパイラをインストールする</p><p>インストーラーが終了すると、コンパイラツールチェーンが使用できるようになります。</p><h3 id="macos" tabindex="-1">macOS <a class="header-anchor" href="#macos" aria-hidden="true">#</a></h3><p>macOSの場合、開発ツールチェーンはMac app store経由でインストールする必要があります。XCodeというアプリを検索してインストールしてください。</p><p>XCodeのApp Storeページ</p><p>注意：XCodeをインストールしただけでは十分ではありません。また、XCodeのGUIアプリケーションを一度起動する必要があります。これにより、XCodeはコンパイルに必要な多くのファイルをダウンロードし、インストールします。</p><h2 id="mesonのインストール" tabindex="-1">Mesonのインストール <a class="header-anchor" href="#mesonのインストール" aria-hidden="true">#</a></h2><h3 id="linux-1" tabindex="-1">Linux <a class="header-anchor" href="#linux-1" aria-hidden="true">#</a></h3><p>Mesonのインストールは、コンパイラツールチェーンのインストールと同じように簡単です。</p><ul><li>Debian、Ubuntu およびその派生版：<code>sudo apt install meson ninja-build</code></li><li>Fedora, Centos, RHEL およびその派生版: <code>sudo dnf install meson ninja-build</code></li><li>Arch: <code>sudo pacman -S meson</code></li></ul><h3 id="windows-1" tabindex="-1">Windows <a class="header-anchor" href="#windows-1" aria-hidden="true">#</a></h3><p>Meson は Windows 標準の <code>.msi</code> インストーラを提供しており、<a href="https://github.com/mesonbuild/meson/releases" target="_blank" rel="noreferrer">リリースページ</a> からダウンロードすることができます。</p><p>Meson インストール済みダウンロード</p><p>ダウンロードして実行すると、必要なビットがすべてインストールされます。スタートメニューにある Visual Studio developer tools のコマンドプロンプトを実行することで、インストールがうまくいっていることを確認することができます。</p><p>デブツールプロンプト</p><p>mesonとninjaの両方を実行し、それらのバージョンを問い合わせることができるはずです。</p><p>動作するWindowsのインストール</p><h3 id="macos-1" tabindex="-1">macOS <a class="header-anchor" href="#macos-1" aria-hidden="true">#</a></h3><p>Homebrewで：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">brew install meson ninja</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>Homebrewを使わない：</p><p>まずは、<a href="https://github.com/mesonbuild/meson/releases" target="_blank" rel="noreferrer">リリースページ</a>からインストールパッケージをダウンロードすることから始めてください。</p><p>macOSインストーラーのダウンロード</p><p>ダウンロードしたインストーラーをダブルクリックすると起動します。新しいバージョンのmacOSをお使いの場合、以下のようなエラーメッセージが出て、アプリケーションの実行を拒否することがあります。</p><p>macOS 署名の警告</p><p>これは、システム環境設定を起動し、「セキュリティとプライバシー」の項目を選択することで修正できます。一番下にブロックされているアプリが表示されますので、「とにかく開く」ボタンをクリックすることで有効にすることができます。</p><p>セキュリティ設定</p><p>これでインストーラが起動するはずです。起動しない場合は、ダウンロードしたインストーラーファイルを再度ダブルクリックしてください。</p><p>インストーラーの実行</p><p>インストールが終了したら、ターミナルアプリで動作確認ができます。</p><p>インストールが成功した場合</p><h2 id="mesonを実行する" tabindex="-1">Mesonを実行する <a class="header-anchor" href="#mesonを実行する" aria-hidden="true">#</a></h2><p>ターミナルアプリケーションを起動します。Windowsの場合、コンパイラはそのターミナルでしか利用できないため、前述のVisual Studio Developer Toolsのコマンドプロンプトを使用する必要があります。また、ホームディレクトリに変更する必要があります（LinuxとmacOSのターミナルは、デフォルトでホームディレクトリで起動します）。</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">cd \\users\\username</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>プロジェクトを格納するための新しいディレクトリを作成します。</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">mkdir testproject</span></span>
<span class="line"><span style="color:#A6ACCD;">cd testproject</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>Mesonを使用して、新しいサンプルプロジェクトを作成し、ビルドします。</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">meson init --name testproject --build</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>これはあなたのためにプロジェクトのスケルトンを作成し、それをコンパイルします。結果はbuildサブディレクトリに置かれ、そこから直接実行することができます。</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">build/testproject</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>すべて完成し、準備完了</p><p>これでプロジェクトは開発準備完了です。コードは任意のエディタで編集でき、ビルドサブディレクトリに移動して meson compile コマンドを実行することで再構築されます。Mesonのバージョンが古すぎる場合は、代わりにninjaコマンドを実行してプロジェクトをコンパイルすることができます。</p>`,54),o=[i];function p(t,d,c,r,h,u){return a(),s("div",null,o)}const b=e(l,[["render",p]]);export{C as __pageData,b as default};
