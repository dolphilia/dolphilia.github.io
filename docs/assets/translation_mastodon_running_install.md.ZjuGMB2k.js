import{_ as s,c as i,o as a,a3 as t}from"./chunks/framework.DflgEAq4.js";const c=JSON.parse('{"title":"ソースからのインストール","description":"","frontmatter":{},"headers":[],"relativePath":"translation/mastodon/running/install.md","filePath":"translation/mastodon/running/install.md","lastUpdated":1676784496000}'),n={name:"translation/mastodon/running/install.md"},e=t(`<h1 id="ソースからのインストール" tabindex="-1">ソースからのインストール <a class="header-anchor" href="#ソースからのインストール" aria-label="Permalink to &quot;ソースからのインストール&quot;">​</a></h1><p>マストドンを利用したウェブサイトを作成するための解説書です。</p><nav class="table-of-contents"><ul><li><a href="#前提条件">前提条件</a><ul><li><a href="#システムレポジトリ">システムレポジトリ</a></li><li><a href="#システムパッケージ">システムパッケージ</a></li><li><a href="#rubyのインストール">Rubyのインストール</a></li></ul></li><li><a href="#セットアップ">セットアップ</a><ul><li><a href="#postgresqlのセットアップ">PostgreSQLのセットアップ</a></li><li><a href="#マストドンのセットアップ">マストドンのセットアップ</a></li><li><a href="#nginxのセットアップ">nginxのセットアップ</a></li><li><a href="#ssl証明書の取得">SSL証明書の取得</a></li><li><a href="#systemd-サービスのセットアップ">systemd サービスのセットアップ</a></li></ul></li></ul></nav><h2 id="前提条件" tabindex="-1">前提条件 <a class="header-anchor" href="#前提条件" aria-label="Permalink to &quot;前提条件&quot;">​</a></h2><ul><li><strong>Ubuntu 20.04</strong>または<strong>Debian 11</strong>が動作しているマシンで、root権限を持っていること。</li><li>Mastodon サーバーの <strong>ドメイン名</strong> (またはサブドメイン) 例: <code>example.com</code>.</li><li>メール配信サービスなどの <strong>SMTP サーバー</strong> が必要です。</li></ul><p>コマンドは root で実行することになります。root でない場合は、root に切り替えてください。<code>sudo su -</code></p><h3 id="システムレポジトリ" tabindex="-1">システムレポジトリ <a class="header-anchor" href="#システムレポジトリ" aria-label="Permalink to &quot;システムレポジトリ&quot;">​</a></h3><p>curl, wget, gnupg, apt-transport-https, lsb-release, ca-certificates が先にインストールされていることを確認してください。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -y</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> curl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> wget</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gnupg</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt-transport-https</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> lsb-release</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ca-certificates</span></span></code></pre></div><h4 id="node-js" tabindex="-1">Node.js <a class="header-anchor" href="#node-js" aria-label="Permalink to &quot;Node.js&quot;">​</a></h4><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -sL</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://deb.nodesource.com/setup_16.x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> bash</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> -</span></span></code></pre></div><h4 id="postgresql" tabindex="-1">PostgreSQL <a class="header-anchor" href="#postgresql" aria-label="Permalink to &quot;PostgreSQL&quot;">​</a></h4><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">wget</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -O</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /usr/share/keyrings/postgresql.asc</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://www.postgresql.org/media/keys/ACCC4CF8.asc</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;deb [signed-by=/usr/share/keyrings/postgresql.asc] http://apt.postgresql.org/pub/repos/apt $(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">lsb_release</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -cs</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">)-pgdg main&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/apt/sources.list.d/postgresql.list</span></span></code></pre></div><h3 id="システムパッケージ" tabindex="-1">システムパッケージ <a class="header-anchor" href="#システムパッケージ" aria-label="Permalink to &quot;システムパッケージ&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> update</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -y</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  imagemagick</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ffmpeg</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> libpq-dev</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> libxml2-dev</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> libxslt1-dev</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> file</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> git-core</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  g++</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> libprotobuf-dev</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> protobuf-compiler</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pkg-config</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nodejs</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gcc</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> autoconf</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  bison</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build-essential</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> libssl-dev</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> libyaml-dev</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> libreadline6-dev</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  zlib1g-dev</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> libncurses5-dev</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> libffi-dev</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> libgdbm-dev</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  nginx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> redis-server</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> redis-tools</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> postgresql</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> postgresql-contrib</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  certbot</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> python3-certbot-nginx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> libidn11-dev</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> libicu-dev</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> libjemalloc-dev</span></span></code></pre></div><h4 id="yarn" tabindex="-1">Yarn <a class="header-anchor" href="#yarn" aria-label="Permalink to &quot;Yarn&quot;">​</a></h4><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">corepack</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> enable</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yarn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> set</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> version</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> classic</span></span></code></pre></div><h3 id="rubyのインストール" tabindex="-1">Rubyのインストール <a class="header-anchor" href="#rubyのインストール" aria-label="Permalink to &quot;Rubyのインストール&quot;">​</a></h3><p>Rubyのバージョン管理にはrbenvを使います。正しいバージョンを取得し、新しいリリースが出たらアップデートするのが簡単だからです。rbenvは単一のLinuxユーザに対してインストールする必要があるので、まずMastodonが動作するユーザを作成します。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">adduser</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --disabled-login</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mastodon</span></span></code></pre></div><p>その後、ユーザーに切り替わります。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">su</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> -</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mastodon</span></span></code></pre></div><p>そして、rbenvとrbenv-buildのインストールに進みます。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/rbenv/rbenv.git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/.rbenv</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/.rbenv</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;&amp; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">src/configure</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;&amp; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -C</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> src</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;export PATH=&quot;$HOME/.rbenv/bin:$PATH&quot;&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/.bashrc</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;eval &quot;$(rbenv init -)&quot;&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/.bashrc</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">exec</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> bash</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/rbenv/ruby-build.git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/.rbenv/plugins/ruby-build</span></span></code></pre></div><p>これが終われば、正しいRubyのバージョンをインストールすることができます。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">RUBY_CONFIGURE_OPTS</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">--with-jemalloc</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> rbenv</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 3.0.4</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rbenv</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> global</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 3.0.4</span></span></code></pre></div><p>また、bundlerのインストールも必要です。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">gem</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> bundler</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --no-document</span></span></code></pre></div><p>ルートユーザーに戻る。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">exit</span></span></code></pre></div><h2 id="セットアップ" tabindex="-1">セットアップ <a class="header-anchor" href="#セットアップ" aria-label="Permalink to &quot;セットアップ&quot;">​</a></h2><h3 id="postgresqlのセットアップ" tabindex="-1">PostgreSQLのセットアップ <a class="header-anchor" href="#postgresqlのセットアップ" aria-label="Permalink to &quot;PostgreSQLのセットアップ&quot;">​</a></h3><h4 id="パフォーマンス・コンフィギュレーション-オプション" tabindex="-1">パフォーマンス・コンフィギュレーション（オプション） <a class="header-anchor" href="#パフォーマンス・コンフィギュレーション-オプション" aria-label="Permalink to &quot;パフォーマンス・コンフィギュレーション（オプション）&quot;">​</a></h4><p>最適なパフォーマンスを得るためには、<code>systemctl restart postgresql</code>でPostgreSQLを再起動する前に、<a href="https://pgtune.leopard.in.ua/#/" target="_blank" rel="noreferrer">pgTune</a> で適切な設定を生成して <code>/etc/postgresql/15/main/postgresql.conf</code> に値を入れておくとよいでしょう。</p><h4 id="ユーザーの作成" tabindex="-1">ユーザーの作成 <a class="header-anchor" href="#ユーザーの作成" aria-label="Permalink to &quot;ユーザーの作成&quot;">​</a></h4><p>Mastodonが使用できるPostgreSQLユーザを作成する必要があります。つまり、PostgreSQLユーザは個別のパスワードを持たず、Linuxユーザが同じユーザ名で使用できるようにすることです。</p><p>プロンプトを開きます。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -u</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> postgres</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> psql</span></span></code></pre></div><p>プロンプトで、実行します。</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">CREATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> USER</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mastodon</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> CREATEDB;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">\\q</span></span></code></pre></div><p>完了！</p><h3 id="マストドンのセットアップ" tabindex="-1">マストドンのセットアップ <a class="header-anchor" href="#マストドンのセットアップ" aria-label="Permalink to &quot;マストドンのセットアップ&quot;">​</a></h3><p>マストドンのコードをダウンロードする時が来ました。マストドン・ユーザーに切り替えてください。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">su</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> -</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mastodon</span></span></code></pre></div><h4 id="コードのチェックアウト" tabindex="-1">コードのチェックアウト <a class="header-anchor" href="#コードのチェックアウト" aria-label="Permalink to &quot;コードのチェックアウト&quot;">​</a></h4><p>git を使って Mastodon の最新の安定版リリースをダウンロードしてください。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/mastodon/mastodon.git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> live</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;&amp; </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> live</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> checkout</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tag</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -l</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> grep</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -v</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;rc[0-9]*$&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> sort</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -V</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> tail</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -n</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h4 id="最後の依存関係のインストール" tabindex="-1">最後の依存関係のインストール <a class="header-anchor" href="#最後の依存関係のインストール" aria-label="Permalink to &quot;最後の依存関係のインストール&quot;">​</a></h4><p>次に、RubyとJavaScriptの依存関係をインストールします。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bundle</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> deployment</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;true&#39;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bundle</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> without</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;development test&#39;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bundle</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -j$(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getconf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> _NPROCESSORS_ONLN</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yarn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --pure-lockfile</span></span></code></pre></div><div class="info custom-block"><p class="custom-block-title">INFO</p><p>2つの <code>bundle config</code> コマンドが必要なのは、依存関係をインストールする最初のときだけです。もし、後で依存関係を更新したり、再インストールしたりするのであれば、 <code>bundle install</code> だけで十分でしょう。</p></div><h4 id="コンフィギュレーションを生成する" tabindex="-1">コンフィギュレーションを生成する <a class="header-anchor" href="#コンフィギュレーションを生成する" aria-label="Permalink to &quot;コンフィギュレーションを生成する&quot;">​</a></h4><p>対話型セットアップウィザードを実行します。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">RAILS_ENV</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">production</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> bundle</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> exec</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rake</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mastodon:setup</span></span></code></pre></div><p>これなら</p><ul><li>設定ファイルの作成</li><li>アセット・プリコンパイルの実行</li><li>データベーススキーマの作成</li></ul><p>設定ファイルは <code>.env.production</code> という名前で保存されます。それを見て、お好みで編集することができます。設定に関するドキュメントを参照してください。</p><p>mastodonユーザは一旦終了し、rootに戻ります。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">exit</span></span></code></pre></div><h3 id="nginxのセットアップ" tabindex="-1">nginxのセットアップ <a class="header-anchor" href="#nginxのセットアップ" aria-label="Permalink to &quot;nginxのセットアップ&quot;">​</a></h3><p>Mastodon ディレクトリから nginx 用の設定テンプレートをコピーします。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cp</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /home/mastodon/live/dist/nginx.conf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/nginx/sites-available/mastodon</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ln</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/nginx/sites-available/mastodon</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/nginx/sites-enabled/mastodon</span></span></code></pre></div><p>次に、<code>/etc/nginx/sites-available/mastodon</code> を編集して <code>example.com</code> を自分のドメイン名に置き換え、その他必要な調整をします。</p><p>変更を有効にするために、nginx をリロードします。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> reload</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nginx</span></span></code></pre></div><h3 id="ssl証明書の取得" tabindex="-1">SSL証明書の取得 <a class="header-anchor" href="#ssl証明書の取得" aria-label="Permalink to &quot;SSL証明書の取得&quot;">​</a></h3><p>Let&#39;s Encryptを使って、無料のSSL証明書を取得することにします。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">certbot</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --nginx</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> example.com</span></span></code></pre></div><p>これは証明書を取得し、新しい証明書を使用するために <code>/etc/nginx/sites-available/mastodon</code> を自動的に更新し、変更を有効にするために nginx を再読み込みします。</p><p>この時点で、ブラウザで自分のドメインにアクセスして、elephant hitting the computer screenのエラーページを見ることができるはずです。これは、まだ Mastodon プロセスを開始していないためです。</p><h3 id="systemd-サービスのセットアップ" tabindex="-1">systemd サービスのセットアップ <a class="header-anchor" href="#systemd-サービスのセットアップ" aria-label="Permalink to &quot;systemd サービスのセットアップ&quot;">​</a></h3><p>Mastodon ディレクトリから systemd サービス・テンプレートをコピーします。</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cp</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /home/mastodon/live/dist/mastodon-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.service</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/systemd/system/</span></span></code></pre></div><p>デフォルトから外れた箇所があれば、ユーザー名とパスが正しいかどうか確認してください。</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$EDITOR /etc/systemd/system/mastodon-</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.service</span></span></code></pre></div><p>最後に、新しい systemd サービスを起動し、有効化します。</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> daemon-reload</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> enable</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --now</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mastodon-web</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mastodon-sidekiq</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mastodon-streaming</span></span></code></pre></div><p>これで、起動時に自動的に起動するようになります。</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p><strong>ばんざーい! これだよこれ。これで、ブラウザで自分のドメインにアクセスできるようになりました</strong></p></div>`,79),h=[e];function l(p,k,d,r,o,F){return a(),i("div",null,h)}const y=s(n,[["render",l]]);export{c as __pageData,y as default};
