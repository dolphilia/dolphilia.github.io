import{_ as a,c as n,o as e,a as s}from"./app.b419af8d.js";const f=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[{"level":2,"title":"duk_dump_function()","slug":"duk-dump-function","link":"#duk-dump-function","children":[{"level":3,"title":"プロトタイプ","slug":"プロトタイプ","link":"#プロトタイプ","children":[]},{"level":3,"title":"スタック","slug":"スタック","link":"#スタック","children":[]},{"level":3,"title":"要約","slug":"要約","link":"#要約","children":[]},{"level":3,"title":"例","slug":"例","link":"#例","children":[]},{"level":3,"title":"参照","slug":"参照","link":"#参照","children":[]}]}],"relativePath":"translation/duktape/api/duk_dump_function.md","lastUpdated":1676126774000}'),t={name:"translation/duktape/api/duk_dump_function.md"},l=s(`<h2 id="duk-dump-function" tabindex="-1">duk_dump_function() <a class="header-anchor" href="#duk-dump-function" aria-hidden="true">#</a></h2><p>1.3.0 stack bytecode</p><h3 id="プロトタイプ" tabindex="-1">プロトタイプ <a class="header-anchor" href="#プロトタイプ" aria-hidden="true">#</a></h3><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">duk_dump_function</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">duk_context </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">ctx</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span></code></pre></div><h3 id="スタック" tabindex="-1">スタック <a class="header-anchor" href="#スタック" aria-hidden="true">#</a></h3><p>| ... | function | -&gt; | ... | bytecode |</p><h3 id="要約" tabindex="-1">要約 <a class="header-anchor" href="#要約" aria-hidden="true">#</a></h3><p>スタックトップにある ECMAScript 関数をバイトコードにダンプし、関数をバイトコードデータを含むバッファに置き換えます。バイトコードは duk_load_function() を使ってロードバックすることができます。</p><p>Duktapeバイトコードダンプ/ロード、サポートされる機能、および既知の制限に関するより多くの情報については、bytecode.rstを参照してください。Duktapeバイトコード・フォーマットは難読化を意図したものではありませんので、難読化に関する注記を参照してください。</p><h3 id="例" tabindex="-1">例 <a class="header-anchor" href="#例" aria-hidden="true">#</a></h3><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#82AAFF;">duk_eval_string</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">ctx</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">(function helloWorld() { print(&#39;hello world&#39;); })</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#82AAFF;">duk_dump_function</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">ctx</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">/* stack top now contains a buffer containing helloWorld bytecode */</span></span>
<span class="line"></span></code></pre></div><h3 id="参照" tabindex="-1">参照 <a class="header-anchor" href="#参照" aria-hidden="true">#</a></h3><p>duk_load_function</p>`,13),o=[l];function c(p,i,d,r,u,h){return e(),n("div",null,o)}const y=a(t,[["render",c]]);export{f as __pageData,y as default};
