import{_ as a,o as s,c as p,Q as n}from"./chunks/framework.92ce8a2a.js";const y=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"translation/duktape/api/duk_dup_top.md","filePath":"translation/duktape/api/duk_dup_top.md","lastUpdated":1676126774000}'),t={name:"translation/duktape/api/duk_dup_top.md"},o=n(`<h2 id="duk-dup-top" tabindex="-1">duk_dup_top() <a class="header-anchor" href="#duk-dup-top" aria-label="Permalink to &quot;duk_dup_top()&quot;">​</a></h2><p>1.0.0 stack</p><h3 id="プロトタイプ" tabindex="-1">プロトタイプ <a class="header-anchor" href="#プロトタイプ" aria-label="Permalink to &quot;プロトタイプ&quot;">​</a></h3><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">duk_dup_top</span><span style="color:#E1E4E8;">(duk_context </span><span style="color:#F97583;">*</span><span style="color:#FFAB70;">ctx</span><span style="color:#E1E4E8;">);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">duk_dup_top</span><span style="color:#24292E;">(duk_context </span><span style="color:#D73A49;">*</span><span style="color:#E36209;">ctx</span><span style="color:#24292E;">);</span></span></code></pre></div><h3 id="スタック" tabindex="-1">スタック <a class="header-anchor" href="#スタック" aria-label="Permalink to &quot;スタック&quot;">​</a></h3><p>| ... | val | -&gt; | ... | val | val |</p><h3 id="要約" tabindex="-1">要約 <a class="header-anchor" href="#要約" aria-label="Permalink to &quot;要約&quot;">​</a></h3><p>スタックトップにある値の複製をスタックにプッシュします。バリュースタックが空の場合、エラーを投げます。。</p><p>duk_dup(ctx, -1) を呼び出すのと同等です。</p><h3 id="例" tabindex="-1">例 <a class="header-anchor" href="#例" aria-label="Permalink to &quot;例&quot;">​</a></h3><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">duk_push_int</span><span style="color:#E1E4E8;">(ctx, </span><span style="color:#79B8FF;">123</span><span style="color:#E1E4E8;">);</span><span style="color:#6A737D;">  /* -&gt; [ ... 123 ] */</span></span>
<span class="line"><span style="color:#B392F0;">duk_push_int</span><span style="color:#E1E4E8;">(ctx, </span><span style="color:#79B8FF;">234</span><span style="color:#E1E4E8;">);</span><span style="color:#6A737D;">  /* -&gt; [ ... 123 234 ] */</span></span>
<span class="line"><span style="color:#B392F0;">duk_dup_top</span><span style="color:#E1E4E8;">(ctx);</span><span style="color:#6A737D;">        /* -&gt; [ ... 123 234 234 ] */</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">duk_push_int</span><span style="color:#24292E;">(ctx, </span><span style="color:#005CC5;">123</span><span style="color:#24292E;">);</span><span style="color:#6A737D;">  /* -&gt; [ ... 123 ] */</span></span>
<span class="line"><span style="color:#6F42C1;">duk_push_int</span><span style="color:#24292E;">(ctx, </span><span style="color:#005CC5;">234</span><span style="color:#24292E;">);</span><span style="color:#6A737D;">  /* -&gt; [ ... 123 234 ] */</span></span>
<span class="line"><span style="color:#6F42C1;">duk_dup_top</span><span style="color:#24292E;">(ctx);</span><span style="color:#6A737D;">        /* -&gt; [ ... 123 234 234 ] */</span></span></code></pre></div>`,11),l=[o];function e(c,r,d,i,u,_){return s(),p("div",null,l)}const k=a(t,[["render",e]]);export{y as __pageData,k as default};
