import{_ as s,o as n,c as a,Q as l}from"./chunks/framework.43c433ff.js";const C=JSON.parse('{"title":"コルーチンの使い方","description":"","frontmatter":{},"headers":[],"relativePath":"translation/duktape/wiki/how_to_coroutines.md","filePath":"translation/duktape/wiki/how_to_coroutines.md","lastUpdated":1676126774000}'),p={name:"translation/duktape/wiki/how_to_coroutines.md"},o=l(`<h1 id="コルーチンの使い方" tabindex="-1">コルーチンの使い方 <a class="header-anchor" href="#コルーチンの使い方" aria-label="Permalink to &quot;コルーチンの使い方&quot;">​</a></h1><h2 id="基本的な仕組みの簡単な例" tabindex="-1">基本的な仕組みの簡単な例 <a class="header-anchor" href="#基本的な仕組みの簡単な例" aria-label="Permalink to &quot;基本的な仕組みの簡単な例&quot;">​</a></h2><p>スポーン、リジューム、イールドの基本的な仕組みの簡単な例です。</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// coroutine.js</span></span>
<span class="line"><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">yielder</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">x</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> yield </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> Duktape.Thread.yield;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">print</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;yielder starting&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">print</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;yielder arg:&#39;</span><span style="color:#E1E4E8;">, x);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">print</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;resumed with&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">yield</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">));</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">print</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;resumed with&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">yield</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">));</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">print</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;resumed with&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">yield</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">print</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;yielder ending&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">123</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> t </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> Duktape.</span><span style="color:#B392F0;">Thread</span><span style="color:#E1E4E8;">(yielder);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">print</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;resume test&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#B392F0;">print</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;yielded with&#39;</span><span style="color:#E1E4E8;">, Duktape.Thread.</span><span style="color:#B392F0;">resume</span><span style="color:#E1E4E8;">(t, </span><span style="color:#9ECBFF;">&#39;foo&#39;</span><span style="color:#E1E4E8;">));</span></span>
<span class="line"><span style="color:#B392F0;">print</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;yielded with&#39;</span><span style="color:#E1E4E8;">, Duktape.Thread.</span><span style="color:#B392F0;">resume</span><span style="color:#E1E4E8;">(t, </span><span style="color:#9ECBFF;">&#39;bar&#39;</span><span style="color:#E1E4E8;">));</span></span>
<span class="line"><span style="color:#B392F0;">print</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;yielded with&#39;</span><span style="color:#E1E4E8;">, Duktape.Thread.</span><span style="color:#B392F0;">resume</span><span style="color:#E1E4E8;">(t, </span><span style="color:#9ECBFF;">&#39;quux&#39;</span><span style="color:#E1E4E8;">));</span></span>
<span class="line"><span style="color:#B392F0;">print</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;yielded with&#39;</span><span style="color:#E1E4E8;">, Duktape.Thread.</span><span style="color:#B392F0;">resume</span><span style="color:#E1E4E8;">(t, </span><span style="color:#9ECBFF;">&#39;baz&#39;</span><span style="color:#E1E4E8;">));</span></span>
<span class="line"><span style="color:#B392F0;">print</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;finished&#39;</span><span style="color:#E1E4E8;">);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// coroutine.js</span></span>
<span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">yielder</span><span style="color:#24292E;">(</span><span style="color:#E36209;">x</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">var</span><span style="color:#24292E;"> yield </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Duktape.Thread.yield;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">print</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;yielder starting&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">print</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;yielder arg:&#39;</span><span style="color:#24292E;">, x);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">print</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;resumed with&#39;</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">yield</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">));</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">print</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;resumed with&#39;</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">yield</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">));</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">print</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;resumed with&#39;</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">yield</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">print</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;yielder ending&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">123</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> t </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> Duktape.</span><span style="color:#6F42C1;">Thread</span><span style="color:#24292E;">(yielder);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">print</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;resume test&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#6F42C1;">print</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;yielded with&#39;</span><span style="color:#24292E;">, Duktape.Thread.</span><span style="color:#6F42C1;">resume</span><span style="color:#24292E;">(t, </span><span style="color:#032F62;">&#39;foo&#39;</span><span style="color:#24292E;">));</span></span>
<span class="line"><span style="color:#6F42C1;">print</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;yielded with&#39;</span><span style="color:#24292E;">, Duktape.Thread.</span><span style="color:#6F42C1;">resume</span><span style="color:#24292E;">(t, </span><span style="color:#032F62;">&#39;bar&#39;</span><span style="color:#24292E;">));</span></span>
<span class="line"><span style="color:#6F42C1;">print</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;yielded with&#39;</span><span style="color:#24292E;">, Duktape.Thread.</span><span style="color:#6F42C1;">resume</span><span style="color:#24292E;">(t, </span><span style="color:#032F62;">&#39;quux&#39;</span><span style="color:#24292E;">));</span></span>
<span class="line"><span style="color:#6F42C1;">print</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;yielded with&#39;</span><span style="color:#24292E;">, Duktape.Thread.</span><span style="color:#6F42C1;">resume</span><span style="color:#24292E;">(t, </span><span style="color:#032F62;">&#39;baz&#39;</span><span style="color:#24292E;">));</span></span>
<span class="line"><span style="color:#6F42C1;">print</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;finished&#39;</span><span style="color:#24292E;">);</span></span></code></pre></div><p>dukコマンドラインツールで実行すると、次のように表示されます。</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">duk</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">coroutine.js</span></span>
<span class="line"><span style="color:#B392F0;">resume</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">test</span></span>
<span class="line"><span style="color:#B392F0;">yielder</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">starting</span></span>
<span class="line"><span style="color:#B392F0;">yielder</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">arg:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">foo</span></span>
<span class="line"><span style="color:#B392F0;">yielded</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">with</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span></span>
<span class="line"><span style="color:#B392F0;">resumed</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">with</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">bar</span></span>
<span class="line"><span style="color:#B392F0;">yielded</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">with</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2</span></span>
<span class="line"><span style="color:#B392F0;">resumed</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">with</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">quux</span></span>
<span class="line"><span style="color:#B392F0;">yielded</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">with</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">3</span></span>
<span class="line"><span style="color:#B392F0;">resumed</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">with</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">baz</span></span>
<span class="line"><span style="color:#B392F0;">yielder</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">ending</span></span>
<span class="line"><span style="color:#B392F0;">yielded</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">with</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">123</span></span>
<span class="line"><span style="color:#B392F0;">finished</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">duk</span><span style="color:#24292E;"> </span><span style="color:#032F62;">coroutine.js</span></span>
<span class="line"><span style="color:#6F42C1;">resume</span><span style="color:#24292E;"> </span><span style="color:#032F62;">test</span></span>
<span class="line"><span style="color:#6F42C1;">yielder</span><span style="color:#24292E;"> </span><span style="color:#032F62;">starting</span></span>
<span class="line"><span style="color:#6F42C1;">yielder</span><span style="color:#24292E;"> </span><span style="color:#032F62;">arg:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">foo</span></span>
<span class="line"><span style="color:#6F42C1;">yielded</span><span style="color:#24292E;"> </span><span style="color:#032F62;">with</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span></span>
<span class="line"><span style="color:#6F42C1;">resumed</span><span style="color:#24292E;"> </span><span style="color:#032F62;">with</span><span style="color:#24292E;"> </span><span style="color:#032F62;">bar</span></span>
<span class="line"><span style="color:#6F42C1;">yielded</span><span style="color:#24292E;"> </span><span style="color:#032F62;">with</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2</span></span>
<span class="line"><span style="color:#6F42C1;">resumed</span><span style="color:#24292E;"> </span><span style="color:#032F62;">with</span><span style="color:#24292E;"> </span><span style="color:#032F62;">quux</span></span>
<span class="line"><span style="color:#6F42C1;">yielded</span><span style="color:#24292E;"> </span><span style="color:#032F62;">with</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">3</span></span>
<span class="line"><span style="color:#6F42C1;">resumed</span><span style="color:#24292E;"> </span><span style="color:#032F62;">with</span><span style="color:#24292E;"> </span><span style="color:#032F62;">baz</span></span>
<span class="line"><span style="color:#6F42C1;">yielder</span><span style="color:#24292E;"> </span><span style="color:#032F62;">ending</span></span>
<span class="line"><span style="color:#6F42C1;">yielded</span><span style="color:#24292E;"> </span><span style="color:#032F62;">with</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">123</span></span>
<span class="line"><span style="color:#6F42C1;">finished</span></span></code></pre></div>`,6),e=[o];function t(r,c,y,E,i,F){return n(),a("div",null,e)}const u=s(p,[["render",t]]);export{C as __pageData,u as default};
