import{_ as a,o as e,c as s,Q as t}from"./chunks/framework.92ce8a2a.js";const k=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"translation/duktape/api/duk_require_constructor_call.md","filePath":"translation/duktape/api/duk_require_constructor_call.md","lastUpdated":1676126774000}'),o={name:"translation/duktape/api/duk_require_constructor_call.md"},r=t('<h2 id="duk-require-constructor-call" tabindex="-1">duk_require_constructor_call() <a class="header-anchor" href="#duk-require-constructor-call" aria-label="Permalink to &quot;duk_require_constructor_call()&quot;">​</a></h2><p>2.4.0 stack</p><h3 id="プロトタイプ" tabindex="-1">プロトタイプ <a class="header-anchor" href="#プロトタイプ" aria-label="Permalink to &quot;プロトタイプ&quot;">​</a></h3><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">duk_require_constructor_call</span><span style="color:#E1E4E8;">(duk_context </span><span style="color:#F97583;">*</span><span style="color:#FFAB70;">ctx</span><span style="color:#E1E4E8;">);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">duk_require_constructor_call</span><span style="color:#24292E;">(duk_context </span><span style="color:#D73A49;">*</span><span style="color:#E36209;">ctx</span><span style="color:#24292E;">);</span></span></code></pre></div><h3 id="スタック" tabindex="-1">スタック <a class="header-anchor" href="#スタック" aria-label="Permalink to &quot;スタック&quot;">​</a></h3><p>(バリュースタックに影響なし)</p><h3 id="要約" tabindex="-1">要約 <a class="header-anchor" href="#要約" aria-label="Permalink to &quot;要約&quot;">​</a></h3><p>現在の関数がコンストラクタ呼び出し (new Foo()) ではなく、通常の関数呼び出し (Foo()) として呼び出された場合にエラーをスローします。また、現在の呼び出しが進行中でない場合にもスローします。それ以外の場合は、次のようになります。</p><h3 id="例" tabindex="-1">例 <a class="header-anchor" href="#例" aria-label="Permalink to &quot;例&quot;">​</a></h3><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">duk_require_constructor_call</span><span style="color:#E1E4E8;">(ctx);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">duk_require_constructor_call</span><span style="color:#24292E;">(ctx);</span></span></code></pre></div>',10),c=[r];function l(n,p,i,d,u,_){return e(),s("div",null,c)}const q=a(o,[["render",l]]);export{k as __pageData,q as default};
