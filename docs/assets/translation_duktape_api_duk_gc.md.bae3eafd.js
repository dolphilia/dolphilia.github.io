import{_ as a,o as s,c as e,Q as o}from"./chunks/framework.43c433ff.js";const y=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"translation/duktape/api/duk_gc.md","filePath":"translation/duktape/api/duk_gc.md","lastUpdated":1676126774000}'),t={name:"translation/duktape/api/duk_gc.md"},n=o('<h2 id="duk-gc" tabindex="-1">duk_gc() <a class="header-anchor" href="#duk-gc" aria-label="Permalink to &quot;duk_gc()&quot;">​</a></h2><p>1.0.0 memory heap</p><h3 id="プロトタイプ" tabindex="-1">プロトタイプ <a class="header-anchor" href="#プロトタイプ" aria-label="Permalink to &quot;プロトタイプ&quot;">​</a></h3><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">duk_gc</span><span style="color:#E1E4E8;">(duk_context </span><span style="color:#F97583;">*</span><span style="color:#FFAB70;">ctx</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">duk_uint_t</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">flags</span><span style="color:#E1E4E8;">);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">duk_gc</span><span style="color:#24292E;">(duk_context </span><span style="color:#D73A49;">*</span><span style="color:#E36209;">ctx</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">duk_uint_t</span><span style="color:#24292E;"> </span><span style="color:#E36209;">flags</span><span style="color:#24292E;">);</span></span></code></pre></div><h3 id="スタック" tabindex="-1">スタック <a class="header-anchor" href="#スタック" aria-label="Permalink to &quot;スタック&quot;">​</a></h3><p>(バリュースタックに影響なし)</p><h3 id="要約" tabindex="-1">要約 <a class="header-anchor" href="#要約" aria-label="Permalink to &quot;要約&quot;">​</a></h3><p>マークアンドスイープガベージコレクションラウンドを強制的に実行します。</p><p>以下のフラグが定義されています。</p><p>定義 説明 DUK_GC_COMPACT オブジェクトプロパティテーブルの圧縮を強制します。</p><p>ファイナライザーを持つオブジェクトも確実に収集するために、この関数を2回呼び出したい場合があります。現在、そのようなオブジェクトを収集するためには、2回のマーク＆スイープラウンドが必要です。最初のラウンドでは、オブジェクトをファイナライズ可能なものとしてマークし、ファイナライザを実行します。2回目のラウンドでは、ファイナライズの後でもオブジェクトが到達できないことを確認し、オブジェクトを解放します。</p><h3 id="例" tabindex="-1">例 <a class="header-anchor" href="#例" aria-label="Permalink to &quot;例&quot;">​</a></h3><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">duk_gc</span><span style="color:#E1E4E8;">(ctx, </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">duk_gc</span><span style="color:#24292E;">(ctx, </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">);</span></span></code></pre></div>',13),l=[n];function p(c,r,d,i,h,u){return s(),e("div",null,l)}const k=a(t,[["render",p]]);export{y as __pageData,k as default};
