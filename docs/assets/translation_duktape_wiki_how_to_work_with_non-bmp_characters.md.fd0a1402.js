import{_ as s,c as a,o as n,a as l}from"./app.e18c80f2.js";const C=JSON.parse('{"title":"BMP以外の文字を扱う方法","description":"","frontmatter":{},"headers":[{"level":2,"title":"ECMAScript と Duktape による非 BMP のサポート","slug":"ecmascript-と-duktape-による非-bmp-のサポート","link":"#ecmascript-と-duktape-による非-bmp-のサポート","children":[{"level":3,"title":"ECMAScript の標準文字列は 16 ビットのみ","slug":"ecmascript-の標準文字列は-16-ビットのみ","link":"#ecmascript-の標準文字列は-16-ビットのみ","children":[]},{"level":3,"title":"Duktape文字列は最大32ビットのコードポイントをサポート","slug":"duktape文字列は最大32ビットのコードポイントをサポート","link":"#duktape文字列は最大32ビットのコードポイントをサポート","children":[]}]},{"level":2,"title":"BMP非対応文字への主な対応方法","slug":"bmp非対応文字への主な対応方法","link":"#bmp非対応文字への主な対応方法","children":[]},{"level":2,"title":"サロゲートペアの使用","slug":"サロゲートペアの使用","link":"#サロゲートペアの使用","children":[]},{"level":2,"title":"Duktape UTF-8を使用する","slug":"duktape-utf-8を使用する","link":"#duktape-utf-8を使用する","children":[]}],"relativePath":"translation/duktape/wiki/how_to_work_with_non-bmp_characters.md","lastUpdated":1676126774000}'),p={name:"translation/duktape/wiki/how_to_work_with_non-bmp_characters.md"},e=l(`<h1 id="bmp以外の文字を扱う方法" tabindex="-1">BMP以外の文字を扱う方法 <a class="header-anchor" href="#bmp以外の文字を扱う方法" aria-hidden="true">#</a></h1><h2 id="ecmascript-と-duktape-による非-bmp-のサポート" tabindex="-1">ECMAScript と Duktape による非 BMP のサポート <a class="header-anchor" href="#ecmascript-と-duktape-による非-bmp-のサポート" aria-hidden="true">#</a></h2><h3 id="ecmascript-の標準文字列は-16-ビットのみ" tabindex="-1">ECMAScript の標準文字列は 16 ビットのみ <a class="header-anchor" href="#ecmascript-の標準文字列は-16-ビットのみ" aria-hidden="true">#</a></h3><p>ECMAScript 標準自体は非 BMP 文字をサポートしていません: すべてのコードポイントは厳密に 16-bit です。非 BMP 文字はサロゲートペアで表現されることを意図しています。</p><ul><li>E5.1 Section 8.4: <a href="http://www.ecma-international.org/ecma-262/5.1/#sec-8.4" target="_blank" rel="noreferrer">http://www.ecma-international.org/ecma-262/5.1/#sec-8.4</a></li><li>E6 Section 6.1.4: <a href="http://www.ecma-international.org/ecma-262/6.0/#sec-ecmascript-language-types-string-type" target="_blank" rel="noreferrer">http://www.ecma-international.org/ecma-262/6.0/#sec-ecmascript-language-types-string-type</a></li></ul><p>ES2015 RegExp の u フラグを持つパターンは、文字列データを UTF-16 として解釈することで、非 BMP 文字をサポートしています。</p><ul><li><a href="http://www.ecma-international.org/ecma-262/6.0/#sec-pattern-semantics" target="_blank" rel="noreferrer">http://www.ecma-international.org/ecma-262/6.0/#sec-pattern-semantics</a></li></ul><p>ES2015 String.prototype.trim()では、非BMP文字に対する特別な処理も行っています（ここでも文字列はUTF-16として解釈されます）。</p><ul><li><a href="http://www.ecma-international.org/ecma-262/6.0/#sec-string.prototype.trim" target="_blank" rel="noreferrer">http://www.ecma-international.org/ecma-262/6.0/#sec-string.prototype.trim</a></li></ul><h3 id="duktape文字列は最大32ビットのコードポイントをサポート" tabindex="-1">Duktape文字列は最大32ビットのコードポイントをサポート <a class="header-anchor" href="#duktape文字列は最大32ビットのコードポイントをサポート" aria-hidden="true">#</a></h3><p>Duktapeは、拡張UTF-8形式で文字列を表現します。この形式では、任意の16ビット・コードポイント（ECMAScriptが要求するもの）と、完全な32ビット範囲の拡張コードポイントの両方が許容されます。また、（UTF-8では無効な）任意のバイト列も許容されます。</p><ul><li><a href="http://duktape.org/guide.html#type-string" target="_blank" rel="noreferrer">http://duktape.org/guide.html#type-string</a></li></ul><p>その結果、DuktapeはBMP以外の範囲の文字を直接サポートすることになりました。</p><ul><li>Cコードは、例えばduk_push_string()を使って、（拡張）UTF-8として表現された文字列を直接プッシュすることができます。</li><li>非 BMP 文字は、ほとんど ECMAScript コードで期待通りに動作します。標準的なバインディングはコードポイントが最大 16 ビットであることを期待しているので、期待通りに動作しない ECMAScript バインディングがいくつかあります。</li></ul><h2 id="bmp非対応文字への主な対応方法" tabindex="-1">BMP非対応文字への主な対応方法 <a class="header-anchor" href="#bmp非対応文字への主な対応方法" aria-hidden="true">#</a></h2><p>主にどちらかを選択することになります。</p><ul><li>サロゲートペアの使用：標準的な方法で、エンジンに依存しませんが、文字列の長さがサロゲートペアの文字を個別に数えるなど、いくつかの不都合があります。Cコードでは、非BMP文字をまずサロゲートペアにエンコードし、そのペアの各コードポイントをCESU-8でエンコードします。</li><li>Duktape固有の非BMP文字列を使用する：Cコードにとってより自然で、.lengthは正しくなります。Cコードでは、文字列を直接UTF-8でエンコードします。</li></ul><h2 id="サロゲートペアの使用" tabindex="-1">サロゲートペアの使用 <a class="header-anchor" href="#サロゲートペアの使用" aria-hidden="true">#</a></h2><p>例えば、LEFT-POINTING MAGNIFYING GLASS U+1F50Dを表すには、以下のようにします。</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// http://www.russellcottrell.com/greek/utilities/surrogatepaircalculator.htm</span></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> magnifyingGlass </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">\\uD83D\\uDD0D</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">print</span><span style="color:#A6ACCD;">(magnifyingGlass</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">length)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">// prints 2</span></span>
<span class="line"><span style="color:#82AAFF;">print</span><span style="color:#A6ACCD;">(Duktape</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">enc</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">hex</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> magnifyingGlass))</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">// prints eda0bdedb48d, surrogate codepoints eda0bd edb48d</span></span>
<span class="line"><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> eda0bdedb48d</span></span>
<span class="line"></span></code></pre></div><p>特に、&quot;the \\u escape &quot;は4桁までしか受け付けないため、誤解を招く可能性があることに注意してください。</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// U+1F50の後にASCIIの&#39;D&#39;が続くとパースされる。</span></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> magnifyingGlass </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">\\u1F50</span><span style="color:#C3E88D;">D</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><p>もし、あなたのCコードにUTF-8を表示させたいなら、サロゲートペアを適切にエンコード/デコードする必要があります。おそらく、以下のようなヘルパーを書くのがベストでしょう。</p><ul><li>UTF-8文字列を値スタックにプッシュし、非BMP文字をサロゲートペア(CESU-8)に変換する。</li><li>サロゲートペア(CESU-8)をUTF-8に変換して、文字列をスタックに読み込む。</li></ul><h2 id="duktape-utf-8を使用する" tabindex="-1">Duktape UTF-8を使用する <a class="header-anchor" href="#duktape-utf-8を使用する" aria-hidden="true">#</a></h2><p>この方法は、文字列を直接UTF-8で表現できるため、変換やサロゲートペアの扱いが不要であり、Cコードに便利です。</p><p>制限としては、非BMP文字に対するECMAScriptの構文がないため、リテラルで使用できないことが挙げられます。いくつかの回避策があります。</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// UTF-8に対応したDuktape JXフォーマットからデコードします。</span></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> magnifyingGlass </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> Duktape</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">dec</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">jx</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">&quot;</span><span style="color:#A6ACCD;">\\\\</span><span style="color:#C3E88D;">U0001f50d&quot;</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#82AAFF;">print</span><span style="color:#A6ACCD;">(magnifyingGlass</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">length)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">// prints 1</span></span>
<span class="line"><span style="color:#82AAFF;">print</span><span style="color:#A6ACCD;">(Duktape</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">enc</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">hex</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> magnifyingGlass))</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">// prints f09f948d, direct UTF-8  for U+1F50D</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// UTF-8データを16進数で直接入力します。</span></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> magnifyingGlass </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> Duktape</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">dec</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">hex</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">f09f948d</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#82AAFF;">print</span><span style="color:#A6ACCD;">(magnifyingGlass</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">length)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#82AAFF;">print</span><span style="color:#A6ACCD;">(Duktape</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">enc</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">hex</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> magnifyingGlass))</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// UTF-8 データをバッファに入力し、文字列に変換する。</span></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> magnifyingGlass </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">String</span><span style="color:#A6ACCD;">(Duktape</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Buffer</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Uint8Array</span><span style="color:#A6ACCD;">([ </span><span style="color:#F78C6C;">0xf0</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0x9f</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0x94</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0x8d</span><span style="color:#A6ACCD;"> ])))</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#82AAFF;">print</span><span style="color:#A6ACCD;">(magnifyingGlass</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">length)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#82AAFF;">print</span><span style="color:#A6ACCD;">(Duktape</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">enc</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">hex</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> magnifyingGlass))</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// Duktape 1.2.0 以降の fromCharCode() は、非 BMP コードポイントを受け入れるためのデフォルトの非標準動作（無効にすることが可能）になっています。</span></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> magnifyingGlass </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> String</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">fromCharCode</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">0x1f50d</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#82AAFF;">print</span><span style="color:#A6ACCD;">(magnifyingGlass</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">length)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#82AAFF;">print</span><span style="color:#A6ACCD;">(Duktape</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">enc</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">hex</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> magnifyingGlass))</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div>`,28),t=[e];function o(r,c,i,D,y,F){return n(),a("div",null,t)}const d=s(p,[["render",o]]);export{C as __pageData,d as default};
