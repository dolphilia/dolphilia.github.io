import{_ as a,c as s,o as e,a as n}from"./app.75bfde98.js";const u=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[{"level":2,"title":"duk_create_heap_default()","slug":"duk-create-heap-default","link":"#duk-create-heap-default","children":[{"level":3,"title":"プロトタイプ","slug":"プロトタイプ","link":"#プロトタイプ","children":[]},{"level":3,"title":"スタック","slug":"スタック","link":"#スタック","children":[]},{"level":3,"title":"要約","slug":"要約","link":"#要約","children":[]},{"level":3,"title":"例","slug":"例","link":"#例","children":[]}]}],"relativePath":"translation/duktape/api/duk_create_heap_default.md","lastUpdated":1676126774000}'),l={name:"translation/duktape/api/duk_create_heap_default.md"},p=n(`<h2 id="duk-create-heap-default" tabindex="-1">duk_create_heap_default() <a class="header-anchor" href="#duk-create-heap-default" aria-hidden="true">#</a></h2><p>1.0.0 heap</p><h3 id="プロトタイプ" tabindex="-1">プロトタイプ <a class="header-anchor" href="#プロトタイプ" aria-hidden="true">#</a></h3><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">duk_context </span><span style="color:#89DDFF;">*</span><span style="color:#82AAFF;">duk_create_heap_default</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">void</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span></code></pre></div><h3 id="スタック" tabindex="-1">スタック <a class="header-anchor" href="#スタック" aria-hidden="true">#</a></h3><p>(バリュースタックに影響なし。)</p><h3 id="要約" tabindex="-1">要約 <a class="header-anchor" href="#要約" aria-hidden="true">#</a></h3><p>新しいDuktapeヒープを作成し、初期コンテキスト(スレッド)を返す。ヒープの初期化に失敗した場合は、NULLを返します。現在のところ、より詳細なエラー情報を得る方法はない。</p><p>作成されたヒープには、デフォルトのメモリ管理関数と致命的なエラーハンドラ関数が使用されます。このAPIコールは、以下と同等です。</p><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">ctx </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">duk_create_heap</span><span style="color:#89DDFF;">(NULL,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">NULL,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">NULL,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">NULL,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">NULL);</span></span>
<span class="line"></span></code></pre></div><h3 id="例" tabindex="-1">例 <a class="header-anchor" href="#例" aria-hidden="true">#</a></h3><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">duk_context </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">ctx </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">duk_create_heap_default</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">ctx</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    /* success */</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    /* ... after heap is no longer needed: */</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">duk_destroy_heap</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">ctx</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">else</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    /* error */</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div>`,12),t=[p];function o(c,r,i,d,h,D){return e(),s("div",null,t)}const F=a(l,[["render",o]]);export{u as __pageData,F as default};
