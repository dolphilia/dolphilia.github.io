import{_ as s,c as a,o as n,a as e}from"./app.75bfde98.js";const A=JSON.parse('{"title":"コンテンツ参照","description":"","frontmatter":{},"headers":[{"level":3,"title":"ローカルファイルの取り込み","slug":"ローカルファイルの取り込み","link":"#ローカルファイルの取り込み","children":[]},{"level":3,"title":"他の本からファイルを取り込む","slug":"他の本からファイルを取り込む","link":"#他の本からファイルを取り込む","children":[]},{"level":3,"title":"継承","slug":"継承","link":"#継承","children":[]}],"relativePath":"translation/honkit/templating/conrefs.md","lastUpdated":1676126774000}'),l={name:"translation/honkit/templating/conrefs.md"},t=e(`<h1 id="コンテンツ参照" tabindex="-1">コンテンツ参照 <a class="header-anchor" href="#コンテンツ参照" aria-hidden="true">#</a></h1><p>コンテンツ参照（conref）は、他のファイルや書籍からコンテンツを再利用するのに便利な仕組みです。</p><h3 id="ローカルファイルの取り込み" tabindex="-1">ローカルファイルの取り込み <a class="header-anchor" href="#ローカルファイルの取り込み" aria-hidden="true">#</a></h3><p>他のファイルの内容を取り込むには<code>include</code>タグを使うと簡単です。</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">{% include &quot;./test.md&quot; %}</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h3 id="他の本からファイルを取り込む" tabindex="-1">他の本からファイルを取り込む <a class="header-anchor" href="#他の本からファイルを取り込む" aria-hidden="true">#</a></h3><p>HonKitはgitを使用してインクルードパスを解決することもできます。</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">{% include &quot;git+https://github.com/GitbookIO/documentation.git/README.md#0.0.1&quot; %}</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>git urlのフォーマットは以下の通りです。</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">git+https://user@hostname/owner/project.git/file#commit-ish</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>実際のgitのurl部分は <code>.git</code> で終わっている必要があり、インポートするファイル名は <code>.git</code> の後にurlの断片まで抽出されます。</p><p>commit-ish<code>には、</code>git checkout<code>の引数として与えられるタグ、sha、ブランチを指定することができます。デフォルトは</code>master\` です。</p><h3 id="継承" tabindex="-1">継承 <a class="header-anchor" href="#継承" aria-hidden="true">#</a></h3><p>テンプレート継承は、テンプレートの再利用を容易にするための方法です。テンプレートを書くときに、子テンプレートがオーバーライドできる&quot;block&quot;を定義することができます。継承の連鎖は好きなだけ長くすることができます。</p><p><code>block</code>はテンプレートのセクションを定義し、名前を付けて識別します。ベーステンプレートはブロックを指定することができ、子テンプレートは新しいコンテンツでブロックをオーバーライドすることができます。</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">{% extends &quot;./mypage.md&quot; %}</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">{% block pageContent %}</span></span>
<span class="line"><span style="color:#A6ACCD;"># これは私のページのコンテンツです。</span></span>
<span class="line"><span style="color:#A6ACCD;">{% endblock %}</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>ファイル<code>mypage.md</code> では拡張可能なブロックを指定する必要があります。</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">{% block pageContent %}</span></span>
<span class="line"><span style="color:#A6ACCD;">これはデフォルトのコンテンツです</span></span>
<span class="line"><span style="color:#A6ACCD;">{% endblock %}</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;"># ライセンス</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">{% include &quot;./LICENSE&quot; %}</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div>`,18),p=[t];function o(c,i,r,d,h,C){return n(),a("div",null,p)}const g=s(l,[["render",o]]);export{A as __pageData,g as default};
