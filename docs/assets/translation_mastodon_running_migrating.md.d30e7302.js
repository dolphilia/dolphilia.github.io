import{_ as s,o as a,c as o,R as e}from"./chunks/framework.320df067.js";const m=JSON.parse('{"title":"新しいマシンへの移行","description":"","frontmatter":{},"headers":[],"relativePath":"translation/mastodon/running/migrating.md","filePath":"translation/mastodon/running/migrating.md","lastUpdated":1676784496000}'),l={name:"translation/mastodon/running/migrating.md"},n=e(`<h1 id="新しいマシンへの移行" tabindex="-1">新しいマシンへの移行 <a class="header-anchor" href="#新しいマシンへの移行" aria-label="Permalink to &quot;新しいマシンへの移行&quot;">​</a></h1><p>Mastodonのインストールを何も失うことなく新しいサーバーにコピーします。</p><p>様々な理由で、Mastodonインスタンスをあるサーバーから別のサーバーに移行したい場合があります。幸いなことに、これはダウンタイムが発生するものの、それほど難しい作業ではありません。</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>このガイドは、Ubuntu Serverを念頭に置いて書かれています。</p></div><nav class="table-of-contents"><ul><li><a href="#基本ステップ">基本ステップ</a></li><li><a href="#詳細手順">詳細手順</a><ul><li><a href="#どのようなデータを移行する必要があるか">どのようなデータを移行する必要があるか</a></li><li><a href="#postgresのダンプとロード">Postgresのダンプとロード</a></li><li><a href="#ファイルをコピーする">ファイルをコピーする</a></li><li><a href="#移行中">移行中</a></li><li><a href="#マイグレーション後">マイグレーション後</a></li></ul></li></ul></nav><h2 id="基本ステップ" tabindex="-1">基本ステップ <a class="header-anchor" href="#基本ステップ" aria-label="Permalink to &quot;基本ステップ&quot;">​</a></h2><ol><li>プロダクションガイドを参考に、新しいMastodonサーバーをセットアップする（ただし、<code>mastodon:setup</code>は実行しない）。</li><li>古いサーバーの Mastodon を停止する (例: <code>systemctl stop &#39;mastodon-*.service&#39;</code>).</li><li>Postgres データベースのダンプとロードを以下の手順で行います。</li><li>以下の手順で <code>system/</code> ファイルをコピーします。(注意: S3を使用している場合、このステップはスキップできます)。</li><li><code>.env.production</code> ファイルをコピーします。</li><li><code>RAILS_ENV=production bundle exec rails assets:precompile</code> を実行し、Mastodon をコンパイルします。</li><li>各ユーザーのホームタイムラインを再構築するために <code>RAILS_ENV=production ./bin/tootctl feeds build</code> を実行します。</li><li>新しいサーバーでマストドンを起動する。</li><li>DNS 設定を更新し、新しいサーバーを指すようにします。</li><li>Nginxの設定を更新またはコピーし、必要に応じてLetsEncryptを再実行します。</li><li>新しいサーバーをお楽しみください。</li></ol><h2 id="詳細手順" tabindex="-1">詳細手順 <a class="header-anchor" href="#詳細手順" aria-label="Permalink to &quot;詳細手順&quot;">​</a></h2><h3 id="どのようなデータを移行する必要があるか" tabindex="-1">どのようなデータを移行する必要があるか <a class="header-anchor" href="#どのようなデータを移行する必要があるか" aria-label="Permalink to &quot;どのようなデータを移行する必要があるか&quot;">​</a></h3><p>大まかには、以下のものをコピーする必要があります。</p><ul><li><code>~/live/public/system</code> ディレクトリには、ユーザーがアップロードした画像や動画が格納されています (S3 を使用する場合は、これは必要ありません)。</li><li>Postgresデータベース（<a href="https://www.postgresql.org/docs/9.1/static/backup-dump.html" target="_blank" rel="noreferrer">pg_dump</a>を使用します。）</li><li>サーバーの設定とシークレットを含む <code>~/live/.env.production</code> ファイル</li></ul><p>あまり重要ではありませんが、利便性のために以下もコピーしておくとよいでしょう。</p><ul><li>nginx の設定ファイル (<code>/etc/nginx/sites-available/default</code> の下)</li><li>systemd の設定ファイル (<code>/etc/systemd/system/mastodon-*.service</code>): サーバーの調整とカスタマイズが含まれているかもしれません。</li><li>pgbouncer の設定ファイル(<code>/etc/pgbouncer</code>) (使用している場合)</li></ul><h3 id="postgresのダンプとロード" tabindex="-1">Postgresのダンプとロード <a class="header-anchor" href="#postgresのダンプとロード" aria-label="Permalink to &quot;Postgresのダンプとロード&quot;">​</a></h3><p><code>mastodon:setup</code> を実行する代わりに、<code>template0</code> データベースを使用して空の Postgres データベースを作成します (これは Postgres のダンプをリストアするときに便利です。<a href="https://www.postgresql.org/docs/9.1/static/backup-dump.html#BACKUP-DUMP-RESTORE" target="_blank" rel="noreferrer">pg_dump のドキュメントに記載</a>)。</p><p>古いシステムの <code>mastodon</code> ユーザーでこれを実行してください。</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">pg_dump</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-Fc</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">mastodon_production</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-f</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">backup.dump</span></span></code></pre></div><p><code>rsync</code> または <code>scp</code> を使って <code>backup.dump</code> ファイルをコピーしてください。次に、新しいシステムで <code>mastodon</code> ユーザで空のデータベースを作成します。</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">createdb</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-T</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">template0</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">mastodon_production</span></span></code></pre></div><p>そして、それをインポートする。</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">pg_restore</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-Fc</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-U</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">mastodon</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-n</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--no-owner</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--role=mastodon</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C3E88D;">-d</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">mastodon_production</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">backup.dump</span></span></code></pre></div><p>(新しいサーバでユーザ名が <code>mastodon</code> でない場合、上記の <code>-U</code> と <code>--role</code> の値を変更する必要があることに注意してください。2つのサーバ間でユーザ名が異なっていても大丈夫です)。</p><h3 id="ファイルをコピーする" tabindex="-1">ファイルをコピーする <a class="header-anchor" href="#ファイルをコピーする" aria-label="Permalink to &quot;ファイルをコピーする&quot;">​</a></h3><p>不必要な再コピーを避けるため、<code>rsync</code> を使用することをお勧めします。古いマシンで、<code>mastodon</code> ユーザで、実行します。</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">rsync</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-avz</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">~/live/public/system/</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">mastodon@example.com:~/live/public/system/</span></span></code></pre></div><p>旧サーバー上のファイルに変更があった場合は、再実行することをお勧めします。</p><p>また、secretを含む <code>.env.production</code> ファイルもコピーしておくとよいでしょう。</p><p>オプションとして、nginx、systemd、pgbouncerの設定ファイルをコピーしたり、一から書き直したりすることができます。</p><h3 id="移行中" tabindex="-1">移行中 <a class="header-anchor" href="#移行中" aria-label="Permalink to &quot;移行中&quot;">​</a></h3><p>既存のユーザーに移行が進行中であることを知らせるために、素敵なエラーメッセージを表示したい場合は、古いマシンの <code>~/live/public/500.html</code> ページを編集することができます。</p><p>また、DNSのTTLを1日ほど前に小さなもの(30-60分)に設定して、新しいIPアドレスを指定するとDNSが迅速に伝搬するようにしておくとよいでしょう。</p><h3 id="マイグレーション後" tabindex="-1">マイグレーション後 <a class="header-anchor" href="#マイグレーション後" aria-label="Permalink to &quot;マイグレーション後&quot;">​</a></h3><p><a href="https://whatsmydns.net/" target="_blank" rel="noreferrer">Whatsmydns.net</a>をチェックすることで、DNSのプロパゲーションの進捗を確認できます。このプロセスを開始するには、いつでも <code>/etc/hosts</code> ファイルを編集して新しいサーバーを指すようにすれば、早い段階でサーバーをいじり始めることができます。</p>`,33),t=[n];function p(c,r,i,d,h,u){return a(),o("div",null,t)}const y=s(l,[["render",p]]);export{m as __pageData,y as default};
