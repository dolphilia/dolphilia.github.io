import{_ as s,o as a,c as n,Q as o}from"./chunks/framework.92ce8a2a.js";const E=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"translation/duktape/api/duk_copy.md","filePath":"translation/duktape/api/duk_copy.md","lastUpdated":1676126774000}'),p={name:"translation/duktape/api/duk_copy.md"},l=o(`<h2 id="duk-copy" tabindex="-1">duk_copy() <a class="header-anchor" href="#duk-copy" aria-label="Permalink to &quot;duk_copy()&quot;">​</a></h2><p>1.0.0 stack</p><h3 id="プロトタイプ" tabindex="-1">プロトタイプ <a class="header-anchor" href="#プロトタイプ" aria-label="Permalink to &quot;プロトタイプ&quot;">​</a></h3><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">duk_copy</span><span style="color:#E1E4E8;">(duk_context </span><span style="color:#F97583;">*</span><span style="color:#FFAB70;">ctx</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">duk_idx_t</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">from_idx</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">duk_idx_t</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">to_idx</span><span style="color:#E1E4E8;">);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">duk_copy</span><span style="color:#24292E;">(duk_context </span><span style="color:#D73A49;">*</span><span style="color:#E36209;">ctx</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">duk_idx_t</span><span style="color:#24292E;"> </span><span style="color:#E36209;">from_idx</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">duk_idx_t</span><span style="color:#24292E;"> </span><span style="color:#E36209;">to_idx</span><span style="color:#24292E;">);</span></span></code></pre></div><h3 id="スタック" tabindex="-1">スタック <a class="header-anchor" href="#スタック" aria-label="Permalink to &quot;スタック&quot;">​</a></h3><p>| ... | old(to_idx) | ... | val(from_idx) | ... | -&gt; | ... | val(to_idx) | ... | val(from_idx) | ... |</p><h3 id="要約" tabindex="-1">要約 <a class="header-anchor" href="#要約" aria-label="Permalink to &quot;要約&quot;">​</a></h3><p>from_idxからto_idxに値をコピーし、前の値を上書きします。どちらかのインデックスが無効な場合、エラーを投げます。。</p><p>これは，以下の略記法です。</p><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">/* to_index must be normalized in case it is negative and would change its</span></span>
<span class="line"><span style="color:#6A737D;"> * meaning after duk_dup().</span></span>
<span class="line"><span style="color:#6A737D;"> */</span></span>
<span class="line"><span style="color:#E1E4E8;">to_idx </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">duk_normalize_idx</span><span style="color:#E1E4E8;">(ctx, to_idx);</span></span>
<span class="line"><span style="color:#B392F0;">duk_dup</span><span style="color:#E1E4E8;">(ctx, from_idx);</span></span>
<span class="line"><span style="color:#B392F0;">duk_replace</span><span style="color:#E1E4E8;">(ctx, to_idx);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">/* to_index must be normalized in case it is negative and would change its</span></span>
<span class="line"><span style="color:#6A737D;"> * meaning after duk_dup().</span></span>
<span class="line"><span style="color:#6A737D;"> */</span></span>
<span class="line"><span style="color:#24292E;">to_idx </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">duk_normalize_idx</span><span style="color:#24292E;">(ctx, to_idx);</span></span>
<span class="line"><span style="color:#6F42C1;">duk_dup</span><span style="color:#24292E;">(ctx, from_idx);</span></span>
<span class="line"><span style="color:#6F42C1;">duk_replace</span><span style="color:#24292E;">(ctx, to_idx);</span></span></code></pre></div><h3 id="例" tabindex="-1">例 <a class="header-anchor" href="#例" aria-label="Permalink to &quot;例&quot;">​</a></h3><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">duk_copy</span><span style="color:#E1E4E8;">(ctx, </span><span style="color:#F97583;">-</span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">duk_copy</span><span style="color:#24292E;">(ctx, </span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">);</span></span></code></pre></div><h3 id="参照" tabindex="-1">参照 <a class="header-anchor" href="#参照" aria-label="Permalink to &quot;参照&quot;">​</a></h3><p>duk_insert duk_replace</p>`,14),e=[l];function t(c,r,i,d,y,_){return a(),n("div",null,e)}const h=s(p,[["render",t]]);export{E as __pageData,h as default};
