import{_ as l,o as i,c as e,R as a}from"./chunks/framework.c2IVng1e.js";const V=JSON.parse('{"title":"LLVMの特徴","description":"","frontmatter":{},"headers":[],"relativePath":"translation/llvm/features.md","filePath":"translation/llvm/features.md","lastUpdated":1690210523000}'),t={name:"translation/llvm/features.md"},r=a('<h1 id="llvmの特徴" tabindex="-1">LLVMの特徴 <a class="header-anchor" href="#llvmの特徴" aria-label="Permalink to &quot;LLVMの特徴&quot;">​</a></h1><p>CおよびC++用のLLVMコンパイラー・システムには、以下のものがある：</p><ul><li>C、C++、Objective-C、Fortranなどのフロントエンド。これらはANSI標準のCおよびC++言語をサポートしている。さらに、多くのGCC拡張がサポートされています。</li><li>LLVM命令セットの安定した実装。アセンブリ（ASCII）とバイトコード（バイナリ）のリーダとライタ、ベリファイアとともに、オンラインとオフラインの両方のコード表現として機能する。</li><li>強力なパス管理システム。依存関係に基づいてパス（解析、変換、コード生成パスを含む）を自動的にシーケンス化し、パイプライン化して効率化を図る。</li><li>幅広いグローバルなスカラー最適化。</li><li>洗練された全プログラムポインタ解析、コールグラフ構築、プロファイルガイド付き最適化のサポートを含む、豊富な解析と変換のセットを備えたリンクタイム手続き間最適化フレームワーク。</li><li>現在、X86、X86-64、PowerPC、PowerPC-64、ARM、Thumb、SPARC、Alpha、CellSPU、MIPS、MSP430、SystemZ、WebAssembly、XCoreをサポートしています。</li><li>ジャストインタイム（JIT）コード生成システム。現在、X86、X86-64、ARM、AArch64、Mips、SystemZ、PowerPC、PowerPC-64をサポートしています。</li><li>DWARF デバッグ情報の生成をサポート。</li><li>gprof に似たプロファイリングシステム。</li><li>多数のベンチマークコードとアプリケーションを備えたテストフレームワーク。</li><li>LLVMコンポーネントの迅速な開発を簡素化するAPIとデバッグツール。</li></ul><h2 id="llvmシステムの強み" tabindex="-1">LLVMシステムの強み <a class="header-anchor" href="#llvmシステムの強み" aria-label="Permalink to &quot;LLVMシステムの強み&quot;">​</a></h2><ol><li>LLVMは、セマンティクスが厳密に定義されたシンプルな低レベル言語を使用する。</li><li>CとC++のフロントエンドを含む。Java、Scheme、その他の言語のフロントエンドも開発中。</li><li>スカラー最適化、手続き間最適化、プロファイル駆動型最適化、単純なループ最適化など、積極的なオプティマイザを備えている。</li><li>リンク時、インストール時、ランタイム、オフライン最適化を含む、ライフ・ロング・コンパイル・モデルをサポートしている。</li><li>LLVMは正確なガベージコレクションを完全にサポートしている。</li><li>LLVMコード・ジェネレーターは比較的簡単にリターゲットでき、強力なターゲット記述言語を利用できる。</li><li>LLVMには広範なドキュメントがあり、様々な種類の多くのプロジェクトをホストしている。</li><li>多くのサードパーティユーザーが、LLVMは扱いやすく開発しやすいと主張している。例えば、（現在は削除された）Stackerフロントエンドは、LLVMについて何も知らずに始めた人が4日間で書いたものだ。さらに、LLVMには開発を容易にするツールがある。</li><li>LLVMは活発に開発されており、常に拡張、強化、改善されています。左のバーのステータス・アップデートを見れば、開発のスピードがわかる。</li><li>LLVMは、OSI承認の &quot;Apache License Version 2.0 &quot;ライセンスの下で自由に利用できます。</li><li>LLVMは現在、多くの営利、非営利、学術団体によって使用されており、多くの拡張や新機能が提供されています。</li></ol><h2 id="llvmオーディエンス" tabindex="-1">LLVMオーディエンス <a class="header-anchor" href="#llvmオーディエンス" aria-label="Permalink to &quot;LLVMオーディエンス&quot;">​</a></h2><p>LLVMは、様々なプロジェクトで使用することができます。以下のような方はLLVMに興味があるかもしれません：</p><ul><li>CおよびC++プログラムのコンパイル時、リンク時（手続き間）、実行時の変換に興味のあるコンパイラ研究者。</li><li>ポータブルで言語に依存しない命令セットとコンパイルフレームワークに興味のある仮想マシン研究者/開発者。</li><li>コンパイラ/ハードウェア技術に興味のあるアーキテクチャ研究者。</li><li>静的解析やインスツルメンテーションに興味のあるセキュリティ研究者。</li><li>コンパイラ変換の迅速なプロトタイピングのためのシステムに興味のあるインストラクターや開発者。</li><li>コードのパフォーマンスを向上させたいエンドユーザー。</li></ul><h2 id="もっと知りたいですか" tabindex="-1">もっと知りたいですか？ <a class="header-anchor" href="#もっと知りたいですか" aria-label="Permalink to &quot;もっと知りたいですか？&quot;">​</a></h2><p>オンラインでドキュメントを閲覧したり、ウェブブラウザでLLVMを試したり、ソースコードをダウンロードすることができる。</p>',10),o=[r];function L(s,n,c,h,M,d){return i(),e("div",null,o)}const _=l(t,[["render",L]]);export{V as __pageData,_ as default};
