import{_ as s,c as n,o as a,a as l}from"./app.1650bd79.js";const d=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[{"level":2,"title":"duk_components_to_time()","slug":"duk-components-to-time","link":"#duk-components-to-time","children":[{"level":3,"title":"プロトタイプ","slug":"プロトタイプ","link":"#プロトタイプ","children":[]},{"level":3,"title":"スタック","slug":"スタック","link":"#スタック","children":[]},{"level":3,"title":"要約","slug":"要約","link":"#要約","children":[]},{"level":3,"title":"例","slug":"例","link":"#例","children":[]},{"level":3,"title":"参照","slug":"参照","link":"#参照","children":[]}]}],"relativePath":"translation/duktape/api/duk_components_to_time.md","lastUpdated":1676126774000}'),o={name:"translation/duktape/api/duk_components_to_time.md"},p=l(`<h2 id="duk-components-to-time" tabindex="-1">duk_components_to_time() <a class="header-anchor" href="#duk-components-to-time" aria-hidden="true">#</a></h2><p>2.0.0 time</p><h3 id="プロトタイプ" tabindex="-1">プロトタイプ <a class="header-anchor" href="#プロトタイプ" aria-hidden="true">#</a></h3><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">duk_double_t</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">duk_components_to_time</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">duk_context </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">ctx</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> duk_time_components </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">comp</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span></code></pre></div><h3 id="スタック" tabindex="-1">スタック <a class="header-anchor" href="#スタック" aria-hidden="true">#</a></h3><p>(バリュースタックに影響なし。)</p><h3 id="要約" tabindex="-1">要約 <a class="header-anchor" href="#要約" aria-hidden="true">#</a></h3><p>UTCで解釈される構成要素（年、月、日、など）を時間値に変換します。comp-&gt;weekday 引数は変換の際に無視されます。構成要素の値が無効な場合、エラーが投げられます。</p><p>ECMAScriptのDate.UTC()組み込みと若干の違いがあります。</p><p>2桁の年号を特別に扱うことはありません。例えば、Date.UTC(99, 0, 1)は1999-01-01として解釈されます。comp-&gt;time が 99 の場合、99 年と解釈されます。 ミリ秒成分は分数（サブミリ秒の分解能）が許され、結果として得られる時刻の値に分数を持たせることができます。 ECMAScript のプリミティブと同様に、成分はその自然な範囲を超えることができ、正規化されます。例えば、comp-&gt;minutesを120と指定すると、時間値に2時間追加されると解釈されます。成分はIEEE doublesで表現され、大きな値や負の値を使用できるようにします。</p><h3 id="例" tabindex="-1">例 <a class="header-anchor" href="#例" aria-hidden="true">#</a></h3><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">duk_time_components comp</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#FFCB6B;">duk_double_t</span><span style="color:#A6ACCD;"> time</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">memset</span><span style="color:#89DDFF;">((</span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;font-style:italic;">comp</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">sizeof(</span><span style="color:#A6ACCD;">comp</span><span style="color:#89DDFF;">));</span><span style="color:#676E95;font-style:italic;">  /* good practice even if fully initialized */</span></span>
<span class="line"><span style="color:#A6ACCD;">comp.year </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2016</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">comp.month </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;">  /* 0-based, 1=January */</span></span>
<span class="line"><span style="color:#A6ACCD;">comp.day </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;">    /* 1-based: second of January */</span></span>
<span class="line"><span style="color:#A6ACCD;">comp.hours </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">comp.minutes </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">4</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">comp.seconds </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">5</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">comp.milliseconds </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">6.0</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;">  /* allows sub-millisecond resolution */</span></span>
<span class="line"><span style="color:#A6ACCD;">comp.weekday </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;">  /* ignored */</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">time </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">duk_components_to_time</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">ctx</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;font-style:italic;">comp</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#82AAFF;">printf</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">2016-01-02 03:04:05.006Z -&gt; %lf</span><span style="color:#A6ACCD;">\\n</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">double</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">time</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span></code></pre></div><h3 id="参照" tabindex="-1">参照 <a class="header-anchor" href="#参照" aria-hidden="true">#</a></h3><p>duk_time_to_components</p>`,14),e=[p];function t(c,r,i,D,y,C){return a(),n("div",null,e)}const A=s(o,[["render",t]]);export{d as __pageData,A as default};
