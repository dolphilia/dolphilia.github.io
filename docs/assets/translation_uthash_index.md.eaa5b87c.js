import{_ as s,c as a,o as n,Q as l}from"./chunks/framework.44f152d8.js";const C=JSON.parse('{"title":"uthash","description":"","frontmatter":{},"headers":[],"relativePath":"translation/uthash/index.md","lastUpdated":null}'),p={name:"translation/uthash/index.md"},o=l(`<h1 id="uthash" tabindex="-1">uthash <a class="header-anchor" href="#uthash" aria-label="Permalink to &quot;uthash&quot;">​</a></h1><p>C言語の構造体であれば、uthashを使ってハッシュテーブルに格納することができます。構造体にUT_hash_handleを追加し、キーとして機能するように構造体の1つ以上のフィールドを選択するだけです。次に、これらのマクロを使用して、ハッシュテーブルから項目を格納、取得、削除します。</p><p>例1．ハッシュに項目を追加する。</p><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">#include</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">uthash.h</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">struct</span><span style="color:#A6ACCD;"> my_struct </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">int</span><span style="color:#F07178;"> id</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;">            /* このフィールドをキーとして使用します */</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">char</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">name</span><span style="color:#89DDFF;">[</span><span style="color:#F78C6C;">10</span><span style="color:#89DDFF;">];</span></span>
<span class="line"><span style="color:#F07178;">    UT_hash_handle hh</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;"> /* この構造体をハッシャブルにする */</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">struct</span><span style="color:#A6ACCD;"> my_struct </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">users </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">NULL;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">add_user</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">struct</span><span style="color:#A6ACCD;"> my_struct </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">s</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">HASH_ADD_INT</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;"> users</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> id</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> s </span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>例2.ハッシュの中の項目を調べる。</p><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">struct</span><span style="color:#A6ACCD;"> my_struct </span><span style="color:#89DDFF;">*</span><span style="color:#82AAFF;">find_user</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">user_id</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">struct</span><span style="color:#F07178;"> my_struct </span><span style="color:#89DDFF;">*</span><span style="color:#F07178;">s</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">HASH_FIND_INT</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;"> users</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&amp;</span><span style="color:#F07178;">user_id</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> s </span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> s</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>例3．ハッシュから項目を削除する。</p><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">delete_user</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">struct</span><span style="color:#A6ACCD;"> my_struct </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">user</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">HASH_DEL</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;"> users</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> user</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>詳細や使用例については、「ユーザーガイド」をご覧ください。</p>`,9),t=[o];function e(c,r,y,F,D,i){return n(),a("div",null,t)}const u=s(p,[["render",e]]);export{C as __pageData,u as default};
