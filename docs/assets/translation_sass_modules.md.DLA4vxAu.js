import{_ as l,c as n,o as t,a3 as a,j as s,a as i}from"./chunks/framework.DflgEAq4.js";const ki=JSON.parse('{"title":"組み込みモジュール","description":"","frontmatter":{},"headers":[],"relativePath":"translation/sass/modules.md","filePath":"translation/sass/modules.md","lastUpdated":1676974355000}'),h={name:"translation/sass/modules.md"},p=a(`<h1 id="組み込みモジュール" tabindex="-1">組み込みモジュール <a class="header-anchor" href="#組み込みモジュール" aria-label="Permalink to &quot;組み込みモジュール&quot;">​</a></h1><nav class="table-of-contents"><ul><li><a href="#概要">概要</a></li><li><a href="#sass-color">sass:color</a></li><li><a href="#sass-list">sass:list</a></li><li><a href="#sass-map">sass:map</a></li><li><a href="#sass-math">sass:math</a><ul><li><a href="#変数">変数</a></li><li><a href="#バウンディング関数">バウンディング関数</a></li><li><a href="#距離関数">距離関数</a></li><li><a href="#指数関数">指数関数</a></li><li><a href="#三角関数">三角関数</a></li><li><a href="#ユニット関数">ユニット関数</a></li><li><a href="#その他の関数">その他の関数</a></li></ul></li><li><a href="#sass-meta">sass:meta</a><ul><li><a href="#mixins">Mixins</a></li><li><a href="#関数">関数</a></li></ul></li><li><a href="#sass-selector">sass:selector</a><ul><li><a href="#selector-values">Selector Values</a></li></ul></li><li><a href="#sass-string">sass:string</a></li></ul></nav><h2 id="概要" tabindex="-1">概要 <a class="header-anchor" href="#概要" aria-label="Permalink to &quot;概要&quot;">​</a></h2><p>互換性:</p><ul><li>Dart Sass: since 1.23.0</li><li>LibSass: ✗</li><li>Ruby Sass: ✗</li><li>▶</li></ul><p>Sass には、便利な関数 (および時折の mixin) を含む多くの組み込みモジュールがあります。これらのモジュールは、他のユーザ定義スタイルシートと同様に @use 規則でロードすることができ、その関数は他のモジュール・メンバーと同様に呼び出すことができます。すべての組み込みモジュールの URL は、Sass 自体の一部であることを示すために sass: で始まっています。</p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>⚠️ Heads up!</p><p>Sassモジュールシステムが導入される以前は、全てのSass関数が常にグローバルに利用可能でした。多くの関数は現在でもグローバルエイリアスを持っています（これらはドキュメントに記載されています）。Sass チームはこれらの使用を推奨しておらず、いずれは非推奨とする予定ですが、現時点では古い Sass バージョンや LibSass (モジュールシステムをまだサポートしていない) との互換性のために、これらの関数が残っています。</p><p>いくつかの関数は、新しいモジュールシステムでもグローバルにしか利用できません。これは、特別な評価動作 (if()) や、組み込みの CSS 関数 (rgb() と hsl()) の上に追加の動作を追加しているためです。これらは非推奨になることはなく、自由に使うことができます。</p></div><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-67hFV" id="tab-Sh5Y8qe" checked><label for="tab-Sh5Y8qe">SCSS</label><input type="radio" name="group-67hFV" id="tab-wH0meH_"><label for="tab-wH0meH_">CSS</label></div><div class="blocks"><div class="language-scss vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@use</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;sass:color&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.button</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  $primary-color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">#6b717f</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$primary-color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  border</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> solid</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">scale</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$primary-color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$lightness:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 20</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">%</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.button</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">#6b717f</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  border</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> solid</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> #878d9a</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></div></div><p>Sassには、以下の組み込みモジュールが用意されています。</p><ul><li>sass:math モジュールは、数値に対して操作する関数を提供します。</li><li>sass:string モジュールは、文字列の結合、検索、分割を簡単に行うことができるようにします。</li><li>sass:color モジュールは、既存の色に基づいて新しい色を生成し、カラーテーマを簡単に構築します。</li><li>sass:list モジュールは、リスト内の値にアクセスし、変更することができる。</li><li>sass:map モジュールは、マップ内のキーに関連付けられた値を検索することを可能にします。</li><li>sass:selector モジュールは、Sass の強力なセレクタエンジンにアクセスするためのモジュールです。</li><li>sass:meta モジュールは、Sass の内部動作の詳細を公開します。</li></ul><p>グローバル関数パーマリンクグローバル関数</p><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">hsl(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$hue</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> $saturation</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> $lightness</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">hsl(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$hue</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> $saturation</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> $lightness</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> / </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$alpha</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">hsl(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$hue</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$saturation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$lightness</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$alpha</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">hsla</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$hue</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> $saturation</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> $lightness</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">hsla</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$hue</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> $saturation</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> $lightness</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> /</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> $alpha</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">hsla</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$hue</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$saturation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$lightness</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$alpha:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//=&gt; color</span></span></code></pre></div><p>互換性 (Level 4 Syntax):</p><ul><li>Dart Sass: since 1.15.0</li><li>LibSass: ✗</li><li>Ruby Sass: ✗</li><li>▶</li></ul><p>互換性 (Percent Alpha):</p><ul><li>Dart Sass: ✓</li><li>LibSass: ✗</li><li>Ruby Sass: since 3.7.0</li><li>▶</li></ul><p>与えられた色相、彩度、明度、およびアルファチャンネルを持つ色を返します。</p><p>色相は 0deg から 360deg の間の数値で、単位を持たないこともあります。彩度・明度は 0% から 100% の間の数値で、単位はありません。アルファチャンネルは、0 から 1 の間の単位を持たない数値、または 0% から 100% の間のパーセントで指定します。</p>`,19),e=s("div",{class:"tip custom-block"},[s("p",{class:"custom-block-title"},"TIP"),s("p",null,"💡 Fun fact:"),s("p",null,"hsl()の引数の代わりに calc() や var() のような特殊な関数を渡すことができます。複数の引数の代わりに var() を使うことさえできます。色関数をこの方法で呼び出すと、呼び出されたときと同じシグネチャを使用した引用符なしの文字列が返されます。"),s("div",{class:"language-scss vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"scss"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"@debug"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," hsl(210deg 100% 20% / var("),s("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}},"--opacity"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},")); "),s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// hsl(210deg 100% 20% / var(--opacity))")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"@debug"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," hsla(var("),s("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}},"--peach"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"), 20%); "),s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// hsla(var(--peach), 20%)")])])])]),s("div",{class:"warning custom-block"},[s("p",{class:"custom-block-title"},"WARNING"),s("p",null,"⚠️ Heads up!"),s("p",null,[i("スラッシュで区切られた値に対する Sass の特別なパースルールは、 hsl($hue $saturation $lightness / $alpha) シグネチャを使うときに $lightness や "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"a"),s("mi",null,"l"),s("mi",null,"p"),s("mi",null,"h"),s("mi",null,"a"),s("mtext",null,"の変数を渡すことを困難にしています。代わりに"),s("mi",null,"h"),s("mi",null,"s"),s("mi",null,"l"),s("mo",{stretchy:"false"},"(")]),s("annotation",{encoding:"application/x-tex"},"alpha の変数を渡すことを困難にしています。代わりに hsl(")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal"},"a"),s("span",{class:"mord mathnormal"},"lp"),s("span",{class:"mord mathnormal"},"ha"),s("span",{class:"mord cjk_fallback"},"の変数を渡すことを困難にしています。代わりに"),s("span",{class:"mord mathnormal"},"h"),s("span",{class:"mord mathnormal"},"s"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.01968em"}},"l"),s("span",{class:"mopen"},"(")])])]),i("hue, $saturation, $lightness, $alpha) を使うことを検討してください。")])])],-1),k=a(`<div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> hsl(210deg 100% 20%); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// #036</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> hsl(34, 35%, 92%); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// #f2ece4</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> hsl(210deg 100% 20% / 50%); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// rgba(0, 51, 102, 0.5)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> hsla(34, 35%, 92%, 0.2); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// rgba(242, 236, 228, 0.2)</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">if(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$condition</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$if-true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$if-false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div>`,3),r=s("p",null,[i("条件が真であれば"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"i"),s("mi",null,"f"),s("mo",null,"−"),s("mi",null,"t"),s("mi",null,"r"),s("mi",null,"u"),s("mi",null,"e"),s("mtext",null,"を、そうでなければ")]),s("annotation",{encoding:"application/x-tex"},"if-trueを、そうでなければ")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8889em","vertical-align":"-0.1944em"}}),s("span",{class:"mord mathnormal"},"i"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.10764em"}},"f"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"−"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6833em"}}),s("span",{class:"mord mathnormal"},"t"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"r"),s("span",{class:"mord mathnormal"},"u"),s("span",{class:"mord mathnormal"},"e"),s("span",{class:"mord cjk_fallback"},"を、そうでなければ")])])]),i("if-falseを返します。")],-1),d=a(`<p>この関数は、返されない引数を評価しないという点で特別です。 そのため、未使用の引数がエラーを投げるような場合でも安全に呼び出すことができます。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> if(true, 10px, 15px); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 10px</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> if(false, 10px, 15px); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 15px</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> if(variable-defined(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, null); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// null</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">rgb(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$red</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> $green</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> $blue</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">rgb(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$red</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> $green</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> $blue</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> / </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$alpha</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">rgb(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$red</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$green</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$blue</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$alpha</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">rgb</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$alpha</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">rgba</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$red</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> $green</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> $blue</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">rgba</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$red</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> $green</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> $blue</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> /</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> $alpha</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">rgba</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$red</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$green</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$blue</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$alpha:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">rgba</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$alpha</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//=&gt; color</span></span></code></pre></div><p>互換性 (Level 4 Syntax):</p><ul><li>Dart Sass: since 1.15.0</li><li>LibSass: ✗</li><li>Ruby Sass: ✗</li><li>▶</li></ul><p>互換性 (Percent Alpha):</p><ul><li>Dart Sass: ✓</li><li>LibSass: ✗</li><li>Ruby Sass: since 3.7.0</li><li>▶</li></ul><p>red, $green, $blue、そしてオプションで $alpha が渡された場合、 与えられた赤、緑、青、アルファチャンネルを持つ色を返します。</p><p>各チャンネルは、0 から 255 までの単位を持たない数値、 あるいは 0% から 100% までのパーセンテージで指定することができます。アルファチャンネルは，0 から 1 までの単位を持たない数値，または 0 から 100 までのパーセントで指定します．</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>💡 Fun fact:</p><p>rgb()の引数の代わりに calc() や var() などの特殊な関数を渡すことができます。複数の引数の代わりに var() を使用することもできます。色関数をこの方法で呼び出すと、呼び出されたときと同じシグネチャを使用した引用符なしの文字列が返されます。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> rgb(0 51 102 / var(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">--opacity</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// rgb(0 51 102 / var(--opacity))</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> rgba(var(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">--peach</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), 0.2); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// rgba(var(--peach), 0.2)</span></span></code></pre></div></div>`,11),E=s("div",{class:"warning custom-block"},[s("p",{class:"custom-block-title"},"WARNING"),s("p",null,"⚠️ Heads up!"),s("p",null,[i("Sassのスラッシュで区切られた値の特別な解析ルールは、rgb($red $green $blue / "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"a"),s("mi",null,"l"),s("mi",null,"p"),s("mi",null,"h"),s("mi",null,"a"),s("mo",{stretchy:"false"},")"),s("mtext",null,"署名を使用するときに")]),s("annotation",{encoding:"application/x-tex"},"alpha)署名を使用するときに")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal"},"a"),s("span",{class:"mord mathnormal"},"lp"),s("span",{class:"mord mathnormal"},"ha"),s("span",{class:"mclose"},")"),s("span",{class:"mord cjk_fallback"},"署名を使用するときに")])])]),i("blueまたは"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"a"),s("mi",null,"l"),s("mi",null,"p"),s("mi",null,"h"),s("mi",null,"a"),s("mtext",null,"の変数を渡すことを難しくします。代わりに"),s("mi",null,"r"),s("mi",null,"g"),s("mi",null,"b"),s("mo",{stretchy:"false"},"(")]),s("annotation",{encoding:"application/x-tex"},"alphaの変数を渡すことを難しくします。代わりにrgb(")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal"},"a"),s("span",{class:"mord mathnormal"},"lp"),s("span",{class:"mord mathnormal"},"ha"),s("span",{class:"mord cjk_fallback"},"の変数を渡すことを難しくします。代わりに"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"r"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"g"),s("span",{class:"mord mathnormal"},"b"),s("span",{class:"mopen"},"(")])])]),i("red, $green, $blue, $alpha)を使用することを検討してください。")])],-1),g=a(`<div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> rgb(0 51 102); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// #036</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> rgb(95%, 92.5%, 89.5%); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// #f2ece4</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> rgb(0 51 102 / 50%); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// rgba(0, 51, 102, 0.5)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> rgba(95%, 92.5%, 89.5%, 0.2); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// rgba(242, 236, 228, 0.2)</span></span></code></pre></div><p>color と $alpha が渡された場合、これは $color に与えられた $alpha チャンネルを、 元のアルファチャンネルのかわりに付けて返します。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> rgb(#f2ece4, 50%); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// rgba(242, 236, 228, 0.5);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> rgba(rgba(0, 51, 102, 0.5), 1); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// #003366</span></span></code></pre></div><h2 id="sass-color" tabindex="-1">sass:color <a class="header-anchor" href="#sass-color" aria-label="Permalink to &quot;sass:color&quot;">​</a></h2><p>互換性:</p><ul><li>Dart Sass: since 1.23.0</li><li>LibSass: ✗</li><li>Ruby Sass: ✗</li><li>▶</li></ul><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">color.adjust(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  $red</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: null, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$green</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: null, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$blue</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: null,</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  $hue</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: null, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$saturation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: null, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$lightness</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: null,</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  $whiteness</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: null, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$blackness</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: null,</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  $alpha</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: null)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">adjust-color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//=&gt; color</span></span></code></pre></div><p>互換性 ($whiteness and $blackness):</p><ul><li>Dart Sass: since 1.28.0</li><li>LibSass: ✗</li><li>Ruby Sass: ✗</li></ul><p>color の 1 つまたは複数のプロパティを固定値で増減します。</p>`,11),c=s("p",null,[i("各キーワード引数に渡された値を、色の対応するプロパティに追加し、調整後の色を返します。RGB プロパティ ("),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"r"),s("mi",null,"e"),s("mi",null,"d"),s("mtext",null,"、")]),s("annotation",{encoding:"application/x-tex"},"red、")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6944em"}}),s("span",{class:"mord mathnormal"},"re"),s("span",{class:"mord mathnormal"},"d"),s("span",{class:"mord cjk_fallback"},"、")])])]),i("green、および "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"b"),s("mi",null,"l"),s("mi",null,"u"),s("mi",null,"e"),s("mo",{stretchy:"false"},")"),s("mtext",null,"と"),s("mi",null,"H"),s("mi",null,"S"),s("mi",null,"L"),s("mtext",null,"プロパティ"),s("mo",{stretchy:"false"},"(")]),s("annotation",{encoding:"application/x-tex"},"blue) と HSL プロパティ (")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal"},"b"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.01968em"}},"l"),s("span",{class:"mord mathnormal"},"u"),s("span",{class:"mord mathnormal"},"e"),s("span",{class:"mclose"},")"),s("span",{class:"mord cjk_fallback"},"と"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.08125em"}},"H"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.05764em"}},"S"),s("span",{class:"mord mathnormal"},"L"),s("span",{class:"mord cjk_fallback"},"プロパティ"),s("span",{class:"mopen"},"(")])])]),i("hue、$saturation、および "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"l"),s("mi",null,"i"),s("mi",null,"g"),s("mi",null,"h"),s("mi",null,"t"),s("mi",null,"n"),s("mi",null,"e"),s("mi",null,"s"),s("mi",null,"s"),s("mo",{stretchy:"false"},")"),s("mtext",null,"を同時に指定したり、それらのいずれかと"),s("mi",null,"H"),s("mi",null,"W"),s("mi",null,"B"),s("mtext",null,"プロパティ"),s("mo",{stretchy:"false"},"(")]),s("annotation",{encoding:"application/x-tex"},"lightness) を同時に指定したり、それらのいずれかと HWB プロパティ (")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.01968em"}},"l"),s("span",{class:"mord mathnormal"},"i"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"g"),s("span",{class:"mord mathnormal"},"h"),s("span",{class:"mord mathnormal"},"t"),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mord mathnormal"},"ess"),s("span",{class:"mclose"},")"),s("span",{class:"mord cjk_fallback"},"を同時に指定したり、それらのいずれかと"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.08125em"}},"H"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.13889em"}},"W"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.05017em"}},"B"),s("span",{class:"mord cjk_fallback"},"プロパティ"),s("span",{class:"mopen"},"(")])])]),i("hue、$whiteness、および $blackness) を同時に指定するとエラーになります。")],-1),o=s("p",null,[i("オプションの引数は、すべて数字でなければなりません。red、"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"g"),s("mi",null,"r"),s("mi",null,"e"),s("mi",null,"e"),s("mi",null,"n"),s("mtext",null,"、")]),s("annotation",{encoding:"application/x-tex"},"green、")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8778em","vertical-align":"-0.1944em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"g"),s("span",{class:"mord mathnormal"},"ree"),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mord cjk_fallback"},"、")])])]),i("blueの各引数は、単位を持たず、-255から255の間（この値を含む）でなければなりません。hueは、単位がdegであるか、または単位なしである必要があります。saturation、"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"l"),s("mi",null,"i"),s("mi",null,"g"),s("mi",null,"h"),s("mi",null,"t"),s("mi",null,"n"),s("mi",null,"e"),s("mi",null,"s"),s("mi",null,"s"),s("mtext",null,"、")]),s("annotation",{encoding:"application/x-tex"},"lightness、")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8889em","vertical-align":"-0.1944em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.01968em"}},"l"),s("span",{class:"mord mathnormal"},"i"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"g"),s("span",{class:"mord mathnormal"},"h"),s("span",{class:"mord mathnormal"},"t"),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mord mathnormal"},"ess"),s("span",{class:"mord cjk_fallback"},"、")])])]),i("whiteness、$blacknessは-100%から100%の間でなければならず、無単位であってはな りません。alphaは、-1以上1以下（単位なし）でなければなりません。")],-1),m=a(`<p>こちらも参照してください。</p><ul><li>色のプロパティを流動的に拡大縮小する color.scale()。</li><li>色のプロパティを設定するには color.change() を使用します。</li></ul><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> color.adjust(#6b717f, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$red</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: 15); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// #7a717f</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> color.adjust(#d2e1dd, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$red</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: -10, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$blue</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: 10); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// #c8e1e7</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> color.adjust(#998099, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$lightness</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: -30%, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$alpha</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: -0.4); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// rgba(71, 57, 71, 0.6)</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">adjust-hue(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$degrees</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//=&gt; color</span></span></code></pre></div><p>color の色相を増減します。</p><p>hue は、-360deg から 360deg (この値を含む) までの数値で、 $color の色相に加算します。単位を持たないこともできますが、deg 以外の単位を持つことはできません。</p><p>色の属性を調整する color.adjust() も参照してください。</p>`,8),u=s("div",{class:"warning custom-block"},[s("p",{class:"custom-block-title"},"WARNING"),s("p",null,"⚠️ Heads up!"),s("p",null,[i("adjust-hue()はadjust()と冗長なので、新しいモジュールシステムには直接含まれません。adjust-hue($color, "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"a"),s("mi",null,"m"),s("mi",null,"o"),s("mi",null,"u"),s("mi",null,"n"),s("mi",null,"t"),s("mo",{stretchy:"false"},")"),s("mtext",null,"の代わりに、"),s("mi",null,"c"),s("mi",null,"o"),s("mi",null,"l"),s("mi",null,"o"),s("mi",null,"r"),s("mi",{mathvariant:"normal"},"."),s("mi",null,"a"),s("mi",null,"d"),s("mi",null,"j"),s("mi",null,"u"),s("mi",null,"s"),s("mi",null,"t"),s("mo",{stretchy:"false"},"(")]),s("annotation",{encoding:"application/x-tex"},"amount) の代わりに、 color.adjust(")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal"},"am"),s("span",{class:"mord mathnormal"},"o"),s("span",{class:"mord mathnormal"},"u"),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mord mathnormal"},"t"),s("span",{class:"mclose"},")"),s("span",{class:"mord cjk_fallback"},"の代わりに、"),s("span",{class:"mord mathnormal"},"co"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.01968em"}},"l"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"or"),s("span",{class:"mord"},"."),s("span",{class:"mord mathnormal"},"a"),s("span",{class:"mord mathnormal"},"d"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.05724em"}},"j"),s("span",{class:"mord mathnormal"},"u"),s("span",{class:"mord mathnormal"},"s"),s("span",{class:"mord mathnormal"},"t"),s("span",{class:"mopen"},"(")])])]),i("color, $hue: $amount) と書くことができます。")])],-1),y=a(`<div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Hue 222deg becomes 282deg.</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> adjust-hue(#6b717f, 60deg); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// #796b7f</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Hue 164deg becomes 104deg.</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> adjust-hue(#d2e1dd, -60deg); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// #d6e1d2</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Hue 210deg becomes 255deg.</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> adjust-hue(#036, 45); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// #1a0066</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">color.alpha(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">alpha(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">opacity(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//=&gt; number</span></span></code></pre></div><p>color のアルファチャンネルを 0 から 1 の間の数値で返します。</p><p>特殊なケースとして、これは Internet Explorer の alpha(opacity=20) という構文もサポートしており、その場合は引用符で囲まれていない文字列を返します。</p><p>こちらも参照ください。</p><ul><li>color.red() は色の赤チャンネルを取得します。</li><li>color.green() は、色の緑チャンネルを取得します。</li><li>color.blue() は、色の青チャンネルを取得します。</li><li>color.hue() は、色の色相を取得します。</li><li>color.saturation() は、色の彩度を取得します。</li><li>color.lightness() は、色の明度を取得します。</li></ul><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> color.alpha(#e1d7d2); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 1</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> color.opacity(rgb(210, 225, 221, 0.4)); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 0.4</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> alpha(opacity=20); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// alpha(opacity=20)</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">color.blackness(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//=&gt; number</span></span></code></pre></div><p>互換性:</p><ul><li>Dart Sass: since 1.28.0</li><li>LibSass: ✗</li><li>Ruby Sass: ✗</li></ul><p>0%から100%の間の数値として$colorのHWB黒さを返します。</p><p>こちらも参照ください。</p><ul><li>色の赤チャンネルを取得するには color.red() を使用します。</li><li>色の緑チャネルを得るには color.green() を使用します。</li><li>color.hue() は、色の色相を取得します。</li><li>color.saturation() は、色の彩度を取得します。</li><li>color.lightness() は、色の明度を取得します。</li><li>color.whiteness() は、色の白色度を取得します。</li><li>color.alpha() は、色のアルファチャンネルを取得します。</li></ul><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> color.blackness(#e1d7d2); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 11.7647058824%</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> color.blackness(white); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 0%</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> color.blackness(black); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 100%</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">color.blue(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">blue(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//=&gt; number</span></span></code></pre></div><p>color の青チャンネルを 0 から 255 までの数で返します。</p><p>こちらも参照ください。</p><ul><li>色の赤チャンネルを取得するには color.red() を使用します。</li><li>色の緑チャネルを得るには color.green() を使用します。</li><li>color.hue() は、色の色相を取得します。</li><li>color.saturation() は、色の彩度を取得します。</li><li>color.lightness() は、色の明度を取得します。</li><li>color.whiteness() は、色の白色度を取得します。</li><li>color.blackness() は、色の黒さを取得します。</li><li>color.alpha() は、色のアルファチャンネルを取得します。</li></ul><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> color.blue(#e1d7d2); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 210</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> color.blue(white); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 255</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> color.blue(black); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 0</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">color.change(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  $red</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: null, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$green</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: null, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$blue</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: null,</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  $hue</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: null, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$saturation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: null, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$lightness</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: null,</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  $whiteness</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: null, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$blackness</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: null,</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  $alpha</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: null)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">change-color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//=&gt; color</span></span></code></pre></div><p>互換性 ($whiteness and $blackness):</p><ul><li>Dart Sass: since 1.28.0</li><li>LibSass: ✗</li><li>Ruby Sass: ✗</li></ul><p>色の1つまたは複数のプロパティを新しい値に設定します。</p>`,27),F=s("p",null,[i("各キーワード引数に渡された値を、色の対応するプロパティの代わりに使用し、 変更後の色を返します。RGB プロパティ ("),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"r"),s("mi",null,"e"),s("mi",null,"d"),s("mtext",null,"、")]),s("annotation",{encoding:"application/x-tex"},"red、")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6944em"}}),s("span",{class:"mord mathnormal"},"re"),s("span",{class:"mord mathnormal"},"d"),s("span",{class:"mord cjk_fallback"},"、")])])]),i("green、および "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"b"),s("mi",null,"l"),s("mi",null,"u"),s("mi",null,"e"),s("mo",{stretchy:"false"},")"),s("mtext",null,"と"),s("mi",null,"H"),s("mi",null,"S"),s("mi",null,"L"),s("mtext",null,"プロパティ"),s("mo",{stretchy:"false"},"(")]),s("annotation",{encoding:"application/x-tex"},"blue) と HSL プロパティ (")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal"},"b"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.01968em"}},"l"),s("span",{class:"mord mathnormal"},"u"),s("span",{class:"mord mathnormal"},"e"),s("span",{class:"mclose"},")"),s("span",{class:"mord cjk_fallback"},"と"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.08125em"}},"H"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.05764em"}},"S"),s("span",{class:"mord mathnormal"},"L"),s("span",{class:"mord cjk_fallback"},"プロパティ"),s("span",{class:"mopen"},"(")])])]),i("hue、$saturation、および "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"l"),s("mi",null,"i"),s("mi",null,"g"),s("mi",null,"h"),s("mi",null,"t"),s("mi",null,"n"),s("mi",null,"e"),s("mi",null,"s"),s("mi",null,"s"),s("mo",{stretchy:"false"},")"),s("mtext",null,"を同時に指定したり、それらのいずれかと"),s("mi",null,"H"),s("mi",null,"W"),s("mi",null,"B"),s("mtext",null,"プロパティ"),s("mo",{stretchy:"false"},"(")]),s("annotation",{encoding:"application/x-tex"},"lightness) を同時に指定したり、それらのいずれかと HWB プロパティ (")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.01968em"}},"l"),s("span",{class:"mord mathnormal"},"i"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"g"),s("span",{class:"mord mathnormal"},"h"),s("span",{class:"mord mathnormal"},"t"),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mord mathnormal"},"ess"),s("span",{class:"mclose"},")"),s("span",{class:"mord cjk_fallback"},"を同時に指定したり、それらのいずれかと"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.08125em"}},"H"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.13889em"}},"W"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.05017em"}},"B"),s("span",{class:"mord cjk_fallback"},"プロパティ"),s("span",{class:"mopen"},"(")])])]),i("hue、$whiteness、および $blackness) を同時に指定するとエラーになります。")],-1),b=s("p",null,[i("オプションの引数は、すべて数字でなければなりません。red、"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"g"),s("mi",null,"r"),s("mi",null,"e"),s("mi",null,"e"),s("mi",null,"n"),s("mtext",null,"、")]),s("annotation",{encoding:"application/x-tex"},"green、")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8778em","vertical-align":"-0.1944em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"g"),s("span",{class:"mord mathnormal"},"ree"),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mord cjk_fallback"},"、")])])]),i("blueの各引数は、単位を持たず、0から255の間（この値を含む）でなければなりません。hueは、単位がdegであるか、または単位なしである必要があります。saturation、"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"l"),s("mi",null,"i"),s("mi",null,"g"),s("mi",null,"h"),s("mi",null,"t"),s("mi",null,"n"),s("mi",null,"e"),s("mi",null,"s"),s("mi",null,"s"),s("mtext",null,"、")]),s("annotation",{encoding:"application/x-tex"},"lightness、")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8889em","vertical-align":"-0.1944em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.01968em"}},"l"),s("span",{class:"mord mathnormal"},"i"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"g"),s("span",{class:"mord mathnormal"},"h"),s("span",{class:"mord mathnormal"},"t"),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mord mathnormal"},"ess"),s("span",{class:"mord cjk_fallback"},"、")])])]),i("whiteness、$blacknessは0%から100%の間でなければならず、無単位であってはな りません。alpha引数は、0から1（を含む）の間の単位なしである必要があります。")],-1),A=a(`<p>こちらも参照してください。</p><ul><li>色のプロパティを流動的に拡大縮小する color.scale()。</li><li>色のプロパティを固定値で調整する color.adjust()。</li></ul><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> color.change(#6b717f, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$red</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: 100); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// #64717f</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> color.change(#d2e1dd, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$red</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: 100, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$blue</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: 50); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// #64e132</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> color.change(#998099, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$lightness</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: 30%, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$alpha</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: 0.5); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// rgba(85, 68, 85, 0.5)</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">color.complement(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">complement(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//=&gt; color</span></span></code></pre></div><p>colorのRGB補数を返します。</p><p>これは color.adjust($color, $hue: 180deg) と同じです。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Hue 222deg becomes 42deg.</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> color.complement(#6b717f); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// #7f796b</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Hue 164deg becomes 344deg.</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> color.complement(#d2e1dd); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// #e1d2d6</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Hue 210deg becomes 30deg.</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> color.complement(#036); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// #663300</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">darken(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$amount</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//=&gt; color</span></span></code></pre></div><p>色を濃くします。</p>`,11),v=s("p",null,[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"a"),s("mi",null,"m"),s("mi",null,"o"),s("mi",null,"u"),s("mi",null,"n"),s("mi",null,"t"),s("mtext",null,"は"),s("mn",null,"0")]),s("annotation",{encoding:"application/x-tex"},"amountは0%から100%の間の数値でなければなりません（これを含む）。")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6833em"}}),s("span",{class:"mord mathnormal"},"am"),s("span",{class:"mord mathnormal"},"o"),s("span",{class:"mord mathnormal"},"u"),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mord mathnormal"},"t"),s("span",{class:"mord cjk_fallback"},"は"),s("span",{class:"mord"},"0")])])]),i("colorのHSL明度をその値だけ下げます。")],-1),D=s("div",{class:"warning custom-block"},[s("p",{class:"custom-block-title"},"WARNING"),s("p",null,"⚠️ Heads up!"),s("p",null,"darken()関数は、明るさを一定量減少させますが、これはしばしば望ましい効果ではありません。ある色をある割合で暗くするには、代わりに color.scale() を使用します。"),s("p",null,[i("darken() は通常、色を暗くする最良の方法ではないので、新しいモジュールシステムには直接含まれません。しかし、既存の動作を維持する必要がある場合、 darken($color, "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"a"),s("mi",null,"m"),s("mi",null,"o"),s("mi",null,"u"),s("mi",null,"n"),s("mi",null,"t"),s("mo",{stretchy:"false"},")"),s("mtext",null,"は"),s("mi",null,"c"),s("mi",null,"o"),s("mi",null,"l"),s("mi",null,"o"),s("mi",null,"r"),s("mi",{mathvariant:"normal"},"."),s("mi",null,"a"),s("mi",null,"d"),s("mi",null,"j"),s("mi",null,"u"),s("mi",null,"s"),s("mi",null,"t"),s("mo",{stretchy:"false"},"(")]),s("annotation",{encoding:"application/x-tex"},"amount) は color.adjust(")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal"},"am"),s("span",{class:"mord mathnormal"},"o"),s("span",{class:"mord mathnormal"},"u"),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mord mathnormal"},"t"),s("span",{class:"mclose"},")"),s("span",{class:"mord cjk_fallback"},"は"),s("span",{class:"mord mathnormal"},"co"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.01968em"}},"l"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"or"),s("span",{class:"mord"},"."),s("span",{class:"mord mathnormal"},"a"),s("span",{class:"mord mathnormal"},"d"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.05724em"}},"j"),s("span",{class:"mord mathnormal"},"u"),s("span",{class:"mord mathnormal"},"s"),s("span",{class:"mord mathnormal"},"t"),s("span",{class:"mopen"},"(")])])]),i("color, "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"l"),s("mi",null,"i"),s("mi",null,"g"),s("mi",null,"h"),s("mi",null,"t"),s("mi",null,"n"),s("mi",null,"e"),s("mi",null,"s"),s("mi",null,"s"),s("mo",null,":"),s("mo",null,"−")]),s("annotation",{encoding:"application/x-tex"},"lightness: -")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8889em","vertical-align":"-0.1944em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.01968em"}},"l"),s("span",{class:"mord mathnormal"},"i"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"g"),s("span",{class:"mord mathnormal"},"h"),s("span",{class:"mord mathnormal"},"t"),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mord mathnormal"},"ess"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},":"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6667em","vertical-align":"-0.0833em"}}),s("span",{class:"mord"},"−")])])]),i("amount) と書くことができます。")]),s("div",{class:"language-scss vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"scss"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// #036は明度20%なので、darken()で30%減算しても黒が返ってくるだけです。")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"@debug"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," darken(#036, 30%); "),s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// black")]),i(`
`),s("span",{class:"line"}),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// scale()の代わりに、元々あった色より30%暗くします。")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"@debug"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," color.scale(#036, "),s("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}},"$lightness"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": -30%); "),s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// #002447")])])])])],-1),C=a(`<div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Lightness 92% becomes 72%.</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> darken(#b37399, 20%); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// #7c4465</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Lightness 85% becomes 45%.</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> darken(#f2ece4, 40%); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// #b08b5a</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Lightness 20% becomes 0%.</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> darken(#036, 30%); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// black</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">desaturate(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$amount</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//=&gt; color</span></span></code></pre></div><p>色彩の彩度を低くします。</p><p>amountは0%から100%（を含む）の間の数値でなければなりません。その値だけ、$color の HSL 彩度を下げます。</p>`,5),x=s("div",{class:"warning custom-block"},[s("p",{class:"custom-block-title"},"WARNING"),s("p",null,"⚠️ Heads up!"),s("p",null,"desaturate() 関数は彩度を一定量下げるものですが、これは望ましい効果でないことがよくあります。ある色の彩度を一定量だけ下げるには、代わりに color.scale() を使用します。"),s("p",null,[i("desaturate()は通常、色の彩度を下げるのに最適な方法ではないので、新しいモジュールシステムには直接含まれていません。しかし、既存の動作を維持する必要がある場合、 desaturate($color, "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"a"),s("mi",null,"m"),s("mi",null,"o"),s("mi",null,"u"),s("mi",null,"n"),s("mi",null,"t"),s("mo",{stretchy:"false"},")"),s("mtext",null,"は"),s("mi",null,"c"),s("mi",null,"o"),s("mi",null,"l"),s("mi",null,"o"),s("mi",null,"r"),s("mi",{mathvariant:"normal"},"."),s("mi",null,"a"),s("mi",null,"d"),s("mi",null,"j"),s("mi",null,"u"),s("mi",null,"s"),s("mi",null,"t"),s("mo",{stretchy:"false"},"(")]),s("annotation",{encoding:"application/x-tex"},"amount) は color.adjust(")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal"},"am"),s("span",{class:"mord mathnormal"},"o"),s("span",{class:"mord mathnormal"},"u"),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mord mathnormal"},"t"),s("span",{class:"mclose"},")"),s("span",{class:"mord cjk_fallback"},"は"),s("span",{class:"mord mathnormal"},"co"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.01968em"}},"l"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"or"),s("span",{class:"mord"},"."),s("span",{class:"mord mathnormal"},"a"),s("span",{class:"mord mathnormal"},"d"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.05724em"}},"j"),s("span",{class:"mord mathnormal"},"u"),s("span",{class:"mord mathnormal"},"s"),s("span",{class:"mord mathnormal"},"t"),s("span",{class:"mopen"},"(")])])]),i("color, "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"s"),s("mi",null,"a"),s("mi",null,"t"),s("mi",null,"u"),s("mi",null,"r"),s("mi",null,"a"),s("mi",null,"t"),s("mi",null,"i"),s("mi",null,"o"),s("mi",null,"n"),s("mo",null,":"),s("mo",null,"−")]),s("annotation",{encoding:"application/x-tex"},"saturation: -")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6595em"}}),s("span",{class:"mord mathnormal"},"s"),s("span",{class:"mord mathnormal"},"a"),s("span",{class:"mord mathnormal"},"t"),s("span",{class:"mord mathnormal"},"u"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"r"),s("span",{class:"mord mathnormal"},"a"),s("span",{class:"mord mathnormal"},"t"),s("span",{class:"mord mathnormal"},"i"),s("span",{class:"mord mathnormal"},"o"),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},":"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6667em","vertical-align":"-0.0833em"}}),s("span",{class:"mord"},"−")])])]),i("amount) と書くことができます。")]),s("div",{class:"language-scss vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"scss"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// #d2e1ddは彩度20%なので、desaturate()で30%減算してもグレーが返ってくるだけです。")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"@debug"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," desaturate(#d2e1dd, 30%); "),s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// #dadada")]),i(`
`),s("span",{class:"line"}),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// scale()の代わりに、元々あった彩度より30%低い彩度にします。")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"@debug"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," color.scale(#6b717f, "),s("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}},"$saturation"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": -30%); "),s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// #6e727c")])])])])],-1),B=a(`<div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Saturation 100% becomes 80%.</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> desaturate(#036, 20%); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// #0a335c</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Saturation 35% becomes 15%.</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> desaturate(#f2ece4, 20%); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// #eeebe8</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Saturation 20% becomes 0%.</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> desaturate(#d2e1dd, 30%); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// #dadada</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">color.grayscale(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">grayscale(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//=&gt; color</span></span></code></pre></div><p>color と同じ明度の灰色を返します。</p><p>これは color.change($color, $saturation: 0%) と同じです。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> color.grayscale(#6b717f); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// #757575</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> color.grayscale(#d2e1dd); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// #dadada</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> color.grayscale(#036); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// #333333</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">color.green(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">green(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//=&gt; number</span></span></code></pre></div><p>color の緑チャンネルを 0 から 255 までの数で返します。</p><p>こちらも参照ください。</p><ul><li>色の赤チャンネルを取得するには color.red() を使用します。</li><li>色の青チャンネルを得るには color.blue() を使用します。</li><li>color.hue() は色の色相を取得します。</li><li>color.saturation() は、色の彩度を取得します。</li><li>color.lightness() は、色の明度を取得します。</li><li>color.whiteness() は、色の白色度を取得します。</li><li>color.blackness() は、色の黒さを取得します。</li><li>color.alpha() は、色のアルファチャンネルを取得します。</li></ul><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> color.green(#e1d7d2); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 215</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> color.green(white); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 255</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> color.green(black); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 0</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">color.hue(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">hue(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//=&gt; number</span></span></code></pre></div><p>color の色相を 0deg から 360deg の間の数値で返します。</p><p>こちらも参照ください。</p><ul><li>色の赤チャンネルを取得するには color.red() を使用します。</li><li>色の緑チャネルを得るには color.green() を使用します。</li><li>color.blue() は、色の青チャンネルを取得します。</li><li>color.saturation() は、色の彩度を取得します。</li><li>color.lightness() は、色の明度を取得します。</li><li>color.whiteness() は、色の白色度を取得します。</li><li>color.blackness() は、色の黒さを取得します。</li><li>color.alpha() は、色のアルファチャンネルを取得します。</li></ul><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> color.hue(#e1d7d2); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 20deg</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> color.hue(#f2ece4); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 34.2857142857deg</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> color.hue(#dadbdf); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 228deg</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">color.hwb(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$hue</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> $whiteness</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> $blackness</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">color.hwb(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$hue</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> $whiteness</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> $blackness</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> / </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$alpha</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">color.hwb(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$hue</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$whiteness</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$blackness</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$alpha</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//=&gt; color</span></span></code></pre></div><p>互換性:</p><ul><li>Dart Sass: since 1.28.0</li><li>LibSass: ✗</li><li>Ruby Sass: ✗</li></ul><p>与えられた色相、白さ、黒さ、および与えられたアルファチャンネルを持つ色を返します。</p><p>色相は 0deg から 360deg (この値を含む) の間の数値です。白色度および黒色度は、0% から 100% の間の数値です（この値を含む）。色相は無単位でもよいが、白さと黒さは単位を持たなければならない。アルファチャンネルは、0 から 1 の間の単位を持たない数値、または 0 から 100 の間のパーセントで指定することができます。</p>`,24),_=s("div",{class:"warning custom-block"},[s("p",{class:"custom-block-title"},"WARNING"),s("p",null,"⚠️ Heads up!"),s("p",null,[i("Sassのスラッシュで区切られた値の特別なパースルールは、 color.hwb($hue $whiteness $blackness / "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"a"),s("mi",null,"l"),s("mi",null,"p"),s("mi",null,"h"),s("mi",null,"a"),s("mo",{stretchy:"false"},")"),s("mtext",null,"シグネチャを使うときに")]),s("annotation",{encoding:"application/x-tex"},"alpha) シグネチャを使うときに")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal"},"a"),s("span",{class:"mord mathnormal"},"lp"),s("span",{class:"mord mathnormal"},"ha"),s("span",{class:"mclose"},")"),s("span",{class:"mord cjk_fallback"},"シグネチャを使うときに")])])]),i("blackness や "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"a"),s("mi",null,"l"),s("mi",null,"p"),s("mi",null,"h"),s("mi",null,"a"),s("mtext",null,"の変数を渡すことを困難にしています。代わりに"),s("mi",null,"c"),s("mi",null,"o"),s("mi",null,"l"),s("mi",null,"o"),s("mi",null,"r"),s("mi",{mathvariant:"normal"},"."),s("mi",null,"h"),s("mi",null,"w"),s("mi",null,"b"),s("mo",{stretchy:"false"},"(")]),s("annotation",{encoding:"application/x-tex"},"alpha の変数を渡すことを困難にしています。代わりに color.hwb(")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal"},"a"),s("span",{class:"mord mathnormal"},"lp"),s("span",{class:"mord mathnormal"},"ha"),s("span",{class:"mord cjk_fallback"},"の変数を渡すことを困難にしています。代わりに"),s("span",{class:"mord mathnormal"},"co"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.01968em"}},"l"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"or"),s("span",{class:"mord"},"."),s("span",{class:"mord mathnormal"},"h"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02691em"}},"w"),s("span",{class:"mord mathnormal"},"b"),s("span",{class:"mopen"},"(")])])]),i("hue, $whiteness, $blackness, $alpha) を使うことを検討してください。")]),s("div",{class:"language- vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"}),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span")]),i(`
`),s("span",{class:"line"},[s("span",null,"```scss")]),i(`
`),s("span",{class:"line"},[s("span",null,"@debug color.hwb(210, 0%, 60%); // #036")]),i(`
`),s("span",{class:"line"},[s("span",null,"@debug color.hwb(34, 89%, 5%); // #f2ece4")]),i(`
`),s("span",{class:"line"},[s("span",null,"@debug color.hwb(210 0% 60% / 0.5); // rgba(0, 51, 102, 0.5)")])])])]),s("hr"),s("div",{class:"language-scss vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"scss"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"color.ie-hex-str("),s("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}},"$color"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},")")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"ie-hex-str("),s("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}},"$color"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},") "),s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//=> unquoted string")])])])]),s("p",null,"Internet Explorerの-ms-filterプロパティで期待される#AARRGGBB形式の$colorを表す引用符なしの文字列を返します。"),s("div",{class:"language-scss vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"scss"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"@debug"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," color.ie-hex-str(#b37399); "),s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// #FFB37399")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"@debug"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," color.ie-hex-str(#808c99); "),s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// #FF808C99")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"@debug"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," color.ie-hex-str(rgba(242, 236, 228, 0.6)); "),s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// #99F2ECE4")])])])]),s("hr"),s("div",{class:"language-scss vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"scss"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"color.invert("),s("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}},"$color"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},", "),s("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}},"$weight"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": "),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"100"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"%"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},")")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"invert"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),s("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}},"$color"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},", "),s("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}},"$weight:"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," 100"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"%"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},") "),s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//=> color")])])])]),s("p",null,"color の逆数または負の値を返します。"),s("p",null,"重み付けは、0%から100% (この値を含む) の間の数値でなければなりません。重みが大きいと結果は負に近くなり、小さいと $color に近くなります。重み50%は常に#808080を生成します。"),s("div",{class:"language-scss vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"scss"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"@debug"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," color.invert(#b37399); "),s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// #4c8c66")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"@debug"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," color.invert(black); "),s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// white")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"@debug"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," color.invert(#550e0c, 20%); "),s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// #663b3a")])])])]),s("hr"),s("div",{class:"language-scss vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"scss"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"lighten("),s("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}},"$color"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},", "),s("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}},"$amount"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},") "),s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//=> color")])])])]),s("p",null,"カラーを薄くします。"),s("p",null,"amountは0%から100%（を含む）の間の数値でなければなりません。その値だけ、$color の HSL 明度を増加させます。"),s("div",{class:"warning custom-block"},[s("p",{class:"custom-block-title"},"WARNING"),s("p",null,"⚠️ Heads up!"),s("p",null,"lighten() 関数は、 明度を一定量だけ上げるものですが、これは望ましい効果ではないことがよくあります。ある色をある割合で明るくするには、代わりに scale() を使用します。"),s("p",null,[i("lighten() は通常、色を明るくする最良の方法ではないため、新しいモジュールシステムには直接含まれません。しかし、既存の挙動を維持する必要がある場合は、 lighten($color, "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"a"),s("mi",null,"m"),s("mi",null,"o"),s("mi",null,"u"),s("mi",null,"n"),s("mi",null,"t"),s("mo",{stretchy:"false"},")"),s("mtext",null,"は"),s("mi",null,"a"),s("mi",null,"d"),s("mi",null,"j"),s("mi",null,"u"),s("mi",null,"s"),s("mi",null,"t"),s("mo",{stretchy:"false"},"(")]),s("annotation",{encoding:"application/x-tex"},"amount) は adjust(")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal"},"am"),s("span",{class:"mord mathnormal"},"o"),s("span",{class:"mord mathnormal"},"u"),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mord mathnormal"},"t"),s("span",{class:"mclose"},")"),s("span",{class:"mord cjk_fallback"},"は"),s("span",{class:"mord mathnormal"},"a"),s("span",{class:"mord mathnormal"},"d"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.05724em"}},"j"),s("span",{class:"mord mathnormal"},"u"),s("span",{class:"mord mathnormal"},"s"),s("span",{class:"mord mathnormal"},"t"),s("span",{class:"mopen"},"(")])])]),i("color, $lightness: $amount) と書くことができます。")]),s("div",{class:"language-scss vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"scss"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// #e1d7d2は明度85%なので、lighten()で30%追加しても白になるだけです。")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"@debug"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," lighten(#e1d7d2, 30%); "),s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// white")]),i(`
`),s("span",{class:"line"}),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// scale()の代わりに、元々あったものより30%軽くします。")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"@debug"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," color.scale(#e1d7d2, "),s("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}},"$lightness"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": 30%); "),s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// #eae3e0")])])])])])],-1),$=a(`<div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Lightness 46% becomes 66%.</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> lighten(#6b717f, 20%); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// #a1a5af</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Lightness 20% becomes 80%.</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> lighten(#036, 60%); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// #99ccff</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Lightness 85% becomes 100%.</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> lighten(#e1d7d2, 30%); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// white</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">color.lightness(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">lightness(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//=&gt; number</span></span></code></pre></div><p>0%から100%の間の数値として$colorのHSL明度を返します。</p><p>See also:</p><ul><li>color.red() は、色の赤チャンネルを取得するためのものです。</li><li>color.green() は色の緑チャンネルを取得します。</li><li>color.blue() は色の青チャンネルを取得します。</li><li>color.hue() は色の色相を取得します。</li><li>color.saturation() は色の彩度を取得します。</li><li>color.whiteness() は色の白色度を取得します。</li><li>color.blackness() は色の黒さを取得します。</li><li>color.alpha() は、色のアルファチャンネルを取得します。</li></ul><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> color.lightness(#e1d7d2); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 85.2941176471%</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> color.lightness(#f2ece4); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 92.1568627451%</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> color.lightness(#dadbdf); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 86.4705882353%</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">color.mix(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$color1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$color2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$weight</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">50</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">%</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">mix</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$color1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$color2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$weight:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 50</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">%</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//=&gt; color</span></span></code></pre></div><p>color1 と $color2 を混ぜた色を返します。</p><p>各色の重みと相対的な不透明度の両方が、 結果に含まれる各色の量を決定します。重み付けは、0% から 100% (この値を含む) の間の数値でなければなりません。重みが大きければ大きいほど、$color1 を多く使うべきであり、小さければ小さいほど $color2 を多く使うべきであると示します。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> color.mix(#036, #d2e1dd); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// #698aa2</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> color.mix(#036, #d2e1dd, 75%); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// #355f84</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> color.mix(#036, #d2e1dd, 25%); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// #9eb6bf</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> color.mix(rgba(242, 236, 228, 0.5), #6b717f); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// rgba(141, 144, 152, 0.75)</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">opacify(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$amount</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">fade-in(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$amount</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//=&gt; color</span></span></code></pre></div><p>color をより不透明にします。</p><p>amount は、0 から 1 までの数字でなければなりません（この値を含む）。color のアルファチャンネルをその分増加させます。</p>`,16),q=s("div",{class:"warning custom-block"},[s("p",{class:"custom-block-title"},"WARNING"),s("p",null,"⚠️ Heads up!"),s("p",null,"opacify() 関数はアルファチャンネルを固定値で増加させますが、これは望ましい効果ではないことがよくあります。ある色を以前より一定割合だけ不透明にするには、代わりに scale() を使用します。"),s("p",null,[i("opacify() は通常、色をより不透明にする最適な方法ではないため、新しいモジュールシステムには直接含まれていません。しかし、もし既存の動作を維持しなければならないのなら、 opacify($color, "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"a"),s("mi",null,"m"),s("mi",null,"o"),s("mi",null,"u"),s("mi",null,"n"),s("mi",null,"t"),s("mo",{stretchy:"false"},")"),s("mtext",null,"は"),s("mi",null,"a"),s("mi",null,"d"),s("mi",null,"j"),s("mi",null,"u"),s("mi",null,"s"),s("mi",null,"t"),s("mo",{stretchy:"false"},"(")]),s("annotation",{encoding:"application/x-tex"},"amount) は adjust(")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal"},"am"),s("span",{class:"mord mathnormal"},"o"),s("span",{class:"mord mathnormal"},"u"),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mord mathnormal"},"t"),s("span",{class:"mclose"},")"),s("span",{class:"mord cjk_fallback"},"は"),s("span",{class:"mord mathnormal"},"a"),s("span",{class:"mord mathnormal"},"d"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.05724em"}},"j"),s("span",{class:"mord mathnormal"},"u"),s("span",{class:"mord mathnormal"},"s"),s("span",{class:"mord mathnormal"},"t"),s("span",{class:"mopen"},"(")])])]),i("color, "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"a"),s("mi",null,"l"),s("mi",null,"p"),s("mi",null,"h"),s("mi",null,"a"),s("mo",null,":"),s("mo",null,"−")]),s("annotation",{encoding:"application/x-tex"},"alpha: -")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8889em","vertical-align":"-0.1944em"}}),s("span",{class:"mord mathnormal"},"a"),s("span",{class:"mord mathnormal"},"lp"),s("span",{class:"mord mathnormal"},"ha"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},":"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6667em","vertical-align":"-0.0833em"}}),s("span",{class:"mord"},"−")])])]),i("amount) と書くことができます。")]),s("div",{class:"language-scss vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"scss"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// rgba(#036, 0.7) はアルファ 0.7 なので、opacify() で 0.3 を加えると、完全に不透明な色が返されます。")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"@debug"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," opacify(rgba(#036, 0.7), 0.3); "),s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// #036")]),i(`
`),s("span",{class:"line"}),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// scale() の代わりに、元々あったものより30%不透明化されます。")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"@debug"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," color.scale(rgba(#036, 0.7), "),s("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}},"$alpha"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": 30%); "),s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// rgba(0, 51, 102, 0.79)")])])])])],-1),w=a(`<div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> opacify(rgba(#6b717f, 0.5), 0.2); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// rgba(107, 113, 127, 0.7)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> fade-in(rgba(#e1d7d2, 0.5), 0.4); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// rgba(225, 215, 210, 0.9)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> opacify(rgba(#036, 0.7), 0.3); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// #036</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">color.red(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">red(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//=&gt; number</span></span></code></pre></div><p>color の赤チャンネルを 0 から 255 までの数で返します。</p><p>こちらも参照ください。</p><ul><li>色の緑チャネルを取得するには color.green() を使用します。</li><li>色の青チャンネルを得るには color.blue() を使用します。</li><li>color.hue() は色の色相を取得します。</li><li>color.saturation() は、色の彩度を取得します。</li><li>color.lightness() は、色の明度を取得します。</li><li>color.whiteness() は、色の白色度を取得します。</li><li>color.blackness() は、色の黒さを取得します。</li><li>color.alpha() は、色のアルファチャンネルを取得します。</li></ul><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> color.red(#e1d7d2); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 225</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> color.red(white); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 255</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> color.red(black); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 0</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">saturate(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$amount</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">saturate(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$amount</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//=&gt; color</span></span></code></pre></div><p>カラーをより飽和状態にします。</p><p>amountは0%から100%（を含む）の間の数値でなければなりません。その値だけ、$color の HSL 彩度を増加させます。</p>`,11),f=s("div",{class:"warning custom-block"},[s("p",{class:"custom-block-title"},"WARNING"),s("p",null,"⚠️ Heads up!"),s("p",null,"saturate()関数は、彩度を一定量上げるものですが、これはしばしば望ましい効果ではありません。ある色の彩度を以前より一定割合高くするには、代わりに scale() を使用します。"),s("p",null,[i("saturate() は通常、色をより飽和させる最良の方法ではないため、新しいモジュールシステムには直接含まれていません。しかし、既存の動作を維持しなければならない場合、 saturate($color, "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"a"),s("mi",null,"m"),s("mi",null,"o"),s("mi",null,"u"),s("mi",null,"n"),s("mi",null,"t"),s("mo",{stretchy:"false"},")"),s("mtext",null,"は"),s("mi",null,"a"),s("mi",null,"d"),s("mi",null,"j"),s("mi",null,"u"),s("mi",null,"s"),s("mi",null,"t"),s("mo",{stretchy:"false"},"(")]),s("annotation",{encoding:"application/x-tex"},"amount) は adjust(")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal"},"am"),s("span",{class:"mord mathnormal"},"o"),s("span",{class:"mord mathnormal"},"u"),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mord mathnormal"},"t"),s("span",{class:"mclose"},")"),s("span",{class:"mord cjk_fallback"},"は"),s("span",{class:"mord mathnormal"},"a"),s("span",{class:"mord mathnormal"},"d"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.05724em"}},"j"),s("span",{class:"mord mathnormal"},"u"),s("span",{class:"mord mathnormal"},"s"),s("span",{class:"mord mathnormal"},"t"),s("span",{class:"mopen"},"(")])])]),i("color, $saturation: $amount) と書くことができます。")]),s("div",{class:"language-scss vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"scss"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// #0e4982は彩度80%なので、saturate()で30%を追加すると彩度100%になります。")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"@debug"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," saturate(#0e4982, 30%); "),s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// #004990")]),i(`
`),s("span",{class:"line"}),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// scale()の代わりに、元々あった彩度より30%高い彩度にします。")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"@debug"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," color.scale(#0e4982, "),s("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}},"$saturation"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": 30%); "),s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// #0a4986")])])])])],-1),S=a(`<div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Saturation 50% becomes 70%.</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> saturate(#c69, 20%); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// #e05299</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Saturation 35% becomes 85%.</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> desaturate(#f2ece4, 50%); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// #ebebeb</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Saturation 80% becomes 100%.</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> saturate(#0e4982, 30%)  // #004990</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">color.saturation(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">saturation(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//=&gt; number</span></span></code></pre></div><p>color の HSL 彩度を 0% から 100% の間の数値で返します。</p><p>こちらも参照ください。</p><ul><li>色の赤チャンネルを取得するには color.red() を使用します。</li><li>色の緑チャネルを得るには color.green() を使用します。</li><li>color.blue() は、色の青チャンネルを取得します。</li><li>color.hue() は、色の色相を取得します。</li><li>color.lightness() は、色の明度を取得します。</li><li>color.whiteness() は、色の白色度を取得します。</li><li>color.blackness() は、色の黒さを取得します。</li><li>color.alpha() は、色のアルファチャンネルを取得します。</li></ul><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> color.saturation(#e1d7d2); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 20%</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> color.saturation(#f2ece4); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 30%</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> color.saturation(#dadbdf); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 7.2463768116%</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">color.scale(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  $red</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: null, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$green</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: null, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$blue</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: null,</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  $saturation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: null, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$lightness</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: null,</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  $whiteness</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: null, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$blackness</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: null,</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  $alpha</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: null)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">scale-color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//=&gt; color</span></span></code></pre></div><p>互換性 ($whiteness and $blackness):</p><ul><li>Dart Sass: since 1.28.0</li><li>LibSass: ✗</li><li>Ruby Sass: ✗</li></ul><p>colorの1つまたは複数のプロパティを流動的にスケーリングします。</p><p>各キーワード引数は、-100% から 100% (これを含む) の間の数値でなければなりません。これは、対応するプロパティを元の位置から最大値 (引数が正の場合) または最小値 (引数が負の場合) に向かってどれだけ移動させるべきかを表します。これは、例えば$lightness: 50%は、すべての色を完全に白にすることなく、50%最大の明るさに近づけることを意味します。</p>`,13),T=s("p",null,[i("RGBプロパティ（"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"r"),s("mi",null,"e"),s("mi",null,"d"),s("mtext",null,"、")]),s("annotation",{encoding:"application/x-tex"},"red、")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6944em"}}),s("span",{class:"mord mathnormal"},"re"),s("span",{class:"mord mathnormal"},"d"),s("span",{class:"mord cjk_fallback"},"、")])])]),i("green、"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"b"),s("mi",null,"l"),s("mi",null,"u"),s("mi",null,"e"),s("mtext",null,"）と"),s("mi",null,"H"),s("mi",null,"S"),s("mi",null,"L"),s("mtext",null,"プロパティ（")]),s("annotation",{encoding:"application/x-tex"},"blue）とHSLプロパティ（")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6944em"}}),s("span",{class:"mord mathnormal"},"b"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.01968em"}},"l"),s("span",{class:"mord mathnormal"},"u"),s("span",{class:"mord mathnormal"},"e"),s("span",{class:"mord cjk_fallback"},"）と"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.08125em"}},"H"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.05764em"}},"S"),s("span",{class:"mord mathnormal"},"L"),s("span",{class:"mord cjk_fallback"},"プロパティ（")])])]),i("saturation、"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"l"),s("mi",null,"i"),s("mi",null,"g"),s("mi",null,"h"),s("mi",null,"t"),s("mi",null,"n"),s("mi",null,"e"),s("mi",null,"s"),s("mi",null,"s"),s("mtext",null,"）、またはそれらのいずれかと"),s("mi",null,"H"),s("mi",null,"W"),s("mi",null,"B"),s("mtext",null,"プロパティ（")]),s("annotation",{encoding:"application/x-tex"},"lightness）、またはそれらのいずれかとHWBプロパティ（")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8889em","vertical-align":"-0.1944em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.01968em"}},"l"),s("span",{class:"mord mathnormal"},"i"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"g"),s("span",{class:"mord mathnormal"},"h"),s("span",{class:"mord mathnormal"},"t"),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mord mathnormal"},"ess"),s("span",{class:"mord cjk_fallback"},"）、またはそれらのいずれかと"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.08125em"}},"H"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.13889em"}},"W"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.05017em"}},"B"),s("span",{class:"mord cjk_fallback"},"プロパティ（")])])]),i("whiteness、$blackness）を同時に指定することはエラーとなります。")],-1),M=a(`<p>こちらもご覧ください。</p><ul><li>色のプロパティを一定量だけ変化させる color.adjust() も参照してください。</li><li>色のプロパティを設定する color.change()。</li></ul><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> color.scale(#6b717f, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$red</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: 15%); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// #81717f</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> color.scale(#d2e1dd, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$lightness</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: -10%, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$saturation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: 10%); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// #b3d4cb</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> color.scale(#998099, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$alpha</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: -40%); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// rgba(153, 128, 153, 0.6)</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">transparentize(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$amount</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">fade-out(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$amount</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//=&gt; color</span></span></code></pre></div><p>カラーをより透明にします。</p><p>amount は、0 から 1 までの数字でなければなりません（この値を含む）。color のアルファチャンネルをその値だけ減らします。</p>`,7),L=s("div",{class:"warning custom-block"},[s("p",{class:"custom-block-title"},"WARNING"),s("p",null,"⚠️ Heads up!"),s("p",null,"transparentize() 関数はアルファチャンネルを固定量だけ減少させますが、これはしばしば望ましい効果ではありません。ある色を以前より一定割合だけ透明にするには、代わりに color.scale() を使用します。"),s("p",null,[i("transparentize() は通常、色をより透明にする最良の方法ではないため、新しいモジュールシステムには直接含まれていません。しかし、既存の動作を維持する必要がある場合は、 transparentize($color, "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"a"),s("mi",null,"m"),s("mi",null,"o"),s("mi",null,"u"),s("mi",null,"n"),s("mi",null,"t"),s("mo",{stretchy:"false"},")"),s("mtext",null,"は"),s("mi",null,"c"),s("mi",null,"o"),s("mi",null,"l"),s("mi",null,"o"),s("mi",null,"r"),s("mi",{mathvariant:"normal"},"."),s("mi",null,"a"),s("mi",null,"d"),s("mi",null,"j"),s("mi",null,"u"),s("mi",null,"s"),s("mi",null,"t"),s("mo",{stretchy:"false"},"(")]),s("annotation",{encoding:"application/x-tex"},"amount) は color.adjust(")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal"},"am"),s("span",{class:"mord mathnormal"},"o"),s("span",{class:"mord mathnormal"},"u"),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mord mathnormal"},"t"),s("span",{class:"mclose"},")"),s("span",{class:"mord cjk_fallback"},"は"),s("span",{class:"mord mathnormal"},"co"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.01968em"}},"l"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"or"),s("span",{class:"mord"},"."),s("span",{class:"mord mathnormal"},"a"),s("span",{class:"mord mathnormal"},"d"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.05724em"}},"j"),s("span",{class:"mord mathnormal"},"u"),s("span",{class:"mord mathnormal"},"s"),s("span",{class:"mord mathnormal"},"t"),s("span",{class:"mopen"},"(")])])]),i("color, "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"a"),s("mi",null,"l"),s("mi",null,"p"),s("mi",null,"h"),s("mi",null,"a"),s("mo",null,":"),s("mo",null,"−")]),s("annotation",{encoding:"application/x-tex"},"alpha: -")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8889em","vertical-align":"-0.1944em"}}),s("span",{class:"mord mathnormal"},"a"),s("span",{class:"mord mathnormal"},"lp"),s("span",{class:"mord mathnormal"},"ha"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},":"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6667em","vertical-align":"-0.0833em"}}),s("span",{class:"mord"},"−")])])]),i("amount) と書くことができます。")]),s("div",{class:"language-scss vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"scss"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// rgba(#036, 0.3) はアルファ 0.3 なので、transparentize() で 0.3 を引くと完全に透明な色が返されます。")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"@debug"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," transparentize(rgba(#036, 0.3), 0.3); "),s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// rgba(0, 51, 102, 0)")]),i(`
`),s("span",{class:"line"}),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// scale()は、その代わりに、元々あったものより30％透明度を高くします。")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"@debug"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," color.scale(rgba(#036, 0.3), "),s("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}},"$alpha"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": -30%); "),s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// rgba(0, 51, 102, 0.21)")])])])])],-1),j=a(`<div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> transparentize(rgba(#6b717f, 0.5), 0.2)  // rgba(107, 113, 127, 0.3)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">@debug fade-out(rgba(#e1d7d2, 0.5), 0.4)  // rgba(225, 215, 210, 0.1)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">@debug transparentize(rgba(#036, 0.3), 0.3)  // rgba(0, 51, 102, 0)</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">color.whiteness(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//=&gt; number </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">互換性:</span></span></code></pre></div><ul><li>Dart Sass: since 1.28.0</li><li>LibSass: ✗</li><li>Ruby Sass: ✗</li></ul><p>color の HWB 白色度を 0% から 100% の間の数値で返します。</p><p>こちらも参照ください。</p><ul><li>color.red() は、色の赤チャンネルを取得するためのものです。</li><li>color.green() は、色の緑チャンネルを取得します。</li><li>color.hue() は、色の色相を取得します。</li><li>color.saturation() は、色の彩度を取得します。</li><li>color.lightness() は、色の明度を取得します。</li><li>color.blackness() は、色の黒さを取得します。</li><li>color.alpha() は、色のアルファチャンネルを取得します。</li></ul><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> color.whiteness(#e1d7d2); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 82.3529411765%</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> color.whiteness(white); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 100%</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> color.whiteness(black); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 0%</span></span></code></pre></div><h2 id="sass-list" tabindex="-1">sass:list <a class="header-anchor" href="#sass-list" aria-label="Permalink to &quot;sass:list&quot;">​</a></h2><p>互換性:</p><ul><li>Dart Sass: since 1.23.0</li><li>LibSass: ✗</li><li>Ruby Sass: ✗</li><li>▶</li></ul><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>💡 Fun fact:</p><p>Sass では、すべてのマップは、各キー/バリュー・ペアの 2 要素リストを含むリストとしてカウントされます。例えば、(1: 2, 3: 4) は (1 2, 3 4) とカウントされます。ですから、これらの関数はすべてマップに対しても有効です。</p><p>個々の値もリストとしてカウントされます。これらの関数はすべて、1pxを値1pxを含むリストとして扱います。</p></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">list.append(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$list</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$separator</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">auto</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">append</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$list</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$separator:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> auto</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//=&gt; list</span></span></code></pre></div><p>listのコピーに$valを末尾に追加したものを返します。</p>`,15),R=s("p",null,[i("separator がカンマ、スペース、スラッシュの場合、返すリストはそれぞれカンマ区切り、スペース区切り、スラッシュ区切りとなります。auto (デフォルト) の場合は、"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"l"),s("mi",null,"i"),s("mi",null,"s"),s("mi",null,"t"),s("mtext",null,"と同じ区切り文字を使用します"),s("mo",{stretchy:"false"},"(")]),s("annotation",{encoding:"application/x-tex"},"list と同じ区切り文字を使用します (")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.01968em"}},"l"),s("span",{class:"mord mathnormal"},"i"),s("span",{class:"mord mathnormal"},"s"),s("span",{class:"mord mathnormal"},"t"),s("span",{class:"mord cjk_fallback"},"と同じ区切り文字を使用します"),s("span",{class:"mopen"},"(")])])]),i("list に区切り文字がない場合は空白を使用します)。それ以外の値は許されません。")],-1),I=a(`<p>list.join()とは異なり、$valがリストの場合は、 そのすべての要素が返されるリストに追加されるのではなく、 返されるリストの中にネストされることに注意しましょう。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> list.append(10px 20px, 30px); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 10px 20px 30px</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> list.append((blue, red), green); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// blue, red, green</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> list.append(10px 20px, 30px 40px); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 10px 20px (30px 40px)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> list.append(10px, 20px, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$separator</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: comma); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 10px, 20px</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> list.append((blue, red), green, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$separator</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: space); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// blue red green</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">list.index(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$list</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$value</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">index(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$list</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$value</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//=&gt; number | null</span></span></code></pre></div><p>リスト内の$valueのインデックスを返します。</p>`,5),N=s("p",null,[i("値が"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"l"),s("mi",null,"i"),s("mi",null,"s"),s("mi",null,"t"),s("mtext",null,"内に存在しない場合、これは"),s("mi",null,"n"),s("mi",null,"u"),s("mi",null,"l"),s("mi",null,"l"),s("mtext",null,"を返します。値が")]),s("annotation",{encoding:"application/x-tex"},"list内に存在しない場合、これはnullを返します。値が")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6944em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.01968em"}},"l"),s("span",{class:"mord mathnormal"},"i"),s("span",{class:"mord mathnormal"},"s"),s("span",{class:"mord mathnormal"},"t"),s("span",{class:"mord cjk_fallback"},"内に存在しない場合、これは"),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mord mathnormal"},"u"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.01968em"}},"ll"),s("span",{class:"mord cjk_fallback"},"を返します。値が")])])]),i("list内に複数回出現する場合、これは、その最初の出現のインデックスを返します。")],-1),P=a(`<div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> list.index(1px solid red, 1px); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 1</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> list.index(1px solid red, solid); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 2</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> list.index(1px solid red, dashed); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// null</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">list.is-bracketed(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$list</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">is-bracketed(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$list</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//=&gt; boolean</span></span></code></pre></div><p>リストが角括弧を持つかどうかを返します。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> list.is-bracketed(1px 2px 3px); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// false</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> list.is-bracketed([1px, 2px, 3px]); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// true</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">list.join(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$list1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$list2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$separator</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">auto</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$bracketed</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">auto</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">join</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$list1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$list2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$separator:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> auto</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$bracketed:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> auto</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//=&gt; list</span></span></code></pre></div><p>list1の要素に続いて$list2の要素を含む新しいリストを返します。</p>`,8),H=s("div",{class:"warning custom-block"},[s("p",{class:"custom-block-title"},"WARNING"),s("p",null,"⚠️ Heads up!"),s("p",null,"個々の値は単一要素のリストとしてカウントされるので、 list.join() を使ってリストの末尾に値を追加することが可能です。しかし、これは推奨されません。なぜなら、その値がリストである場合、連結されてしまうため、おそらくあなたが期待しているものとは異なるからです。"),s("p",null,[i("代わりに list.append() を使用して、リストにひとつの値を追加します。list.join() は、ふたつのリストをひとつにまとめるときだけ使用します。 separator がカンマ、スペース、スラッシュの場合は、それぞれカンマ区切り、スペース区切り、スラッシュ区切りのリストが返されます。auto (デフォルト) の場合、返されるリストは、"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"l"),s("mi",null,"i"),s("mi",null,"s"),s("mi",null,"t"),s("mn",null,"1"),s("mtext",null,"がセパレータを持つ場合はそれと同じセパレータを使い、")]),s("annotation",{encoding:"application/x-tex"},"list1 がセパレータを持つ場合はそれと同じセパレータを使い、")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6944em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.01968em"}},"l"),s("span",{class:"mord mathnormal"},"i"),s("span",{class:"mord mathnormal"},"s"),s("span",{class:"mord mathnormal"},"t"),s("span",{class:"mord"},"1"),s("span",{class:"mord cjk_fallback"},"がセパレータを持つ場合はそれと同じセパレータを使い、")])])]),i("list2 がセパレータを持つ場合はそれ以外のものを使い、$space の場合はそれ以外のものを用います。それ以外の値は許されません。")])],-1),V=s("p",null,[i("bracketedがauto(デフォルト)の場合、"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"l"),s("mi",null,"i"),s("mi",null,"s"),s("mi",null,"t"),s("mn",null,"1"),s("mtext",null,"が括弧付きであれば、返されるリストも括弧付きになります。それ以外の場合は、")]),s("annotation",{encoding:"application/x-tex"},"list1が括弧付きであれば、返されるリストも括弧付きになります。それ以外の場合は、")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6944em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.01968em"}},"l"),s("span",{class:"mord mathnormal"},"i"),s("span",{class:"mord mathnormal"},"s"),s("span",{class:"mord mathnormal"},"t"),s("span",{class:"mord"},"1"),s("span",{class:"mord cjk_fallback"},"が括弧付きであれば、返されるリストも括弧付きになります。それ以外の場合は、")])])]),i("bracketed が真であれば角括弧が付き、$bracketed が偽であれば括弧が付きません。")],-1),G=a(`<div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> list.join(10px 20px, 30px 40px); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 10px 20px 30px 40px</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> list.join((blue, red), (#abc, #def)); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// blue, red, #abc, #def</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> list.join(10px, 20px); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 10px 20px</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> list.join(10px, 20px, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$separator</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: comma); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 10px, 20px</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> list.join((blue, red), (#abc, #def), </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$separator</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: space); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// blue red #abc #def</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> list.join([10px], 20px); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// [10px 20px]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> list.join(10px, 20px, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$bracketed</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: true); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// [10px 20px]</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">list.length(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$list</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">length(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$list</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//=&gt; number</span></span></code></pre></div><p>listの長さを返します。</p><p>これは、マップ内のペアの数を返すこともできます。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> list.length(10px); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 1</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> list.length(10px 20px 30px); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 3</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> list.length((width: 10px, height: 20px)); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 2</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">list.separator(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$list</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">list-separator(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$list</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//=&gt; unquoted string</span></span></code></pre></div><p>listが使用するセパレータの名前（スペース、カンマ、スラッシュのいずれか）を返します。</p><p>もし$listがセパレータを持たない場合、スペースを返します。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> list.separator(1px 2px 3px); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// space</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> list.separator(1px, 2px, 3px); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// comma</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> list.separator(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Helvetica&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// space</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> list.separator(()); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// space</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">list.nth(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$list</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$n</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">nth(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$list</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$n</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>listのインデックス$nにある要素を返します。</p>`,14),W=s("p",null,[i("nが負の場合は、"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"l"),s("mi",null,"i"),s("mi",null,"s"),s("mi",null,"t"),s("mtext",null,"の末尾から数えます。インデックス")]),s("annotation",{encoding:"application/x-tex"},"listの末尾から数えます。インデックス")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6944em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.01968em"}},"l"),s("span",{class:"mord mathnormal"},"i"),s("span",{class:"mord mathnormal"},"s"),s("span",{class:"mord mathnormal"},"t"),s("span",{class:"mord cjk_fallback"},"の末尾から数えます。インデックス")])])]),i("nに要素がない場合は、エラーをスローします。")],-1),z=a(`<div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> list.nth(10px 12px 16px, 2); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 12px</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> list.nth([line1, line2, line3], -1); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// line3</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">list.set-nth(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$list</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$n</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$value</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">set-nth(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$list</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$n</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$value</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//=&gt; list</span></span></code></pre></div>`,3),U=s("p",null,[i("インデックス"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"n"),s("mtext",null,"の要素を")]),s("annotation",{encoding:"application/x-tex"},"nの要素を")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6833em"}}),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mord cjk_fallback"},"の要素を")])])]),i("valueに置き換えた$listのコピーを返します。")],-1),Q=s("p",null,[i("nが負の場合は、"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"l"),s("mi",null,"i"),s("mi",null,"s"),s("mi",null,"t"),s("mtext",null,"の末尾から数えます。インデックス")]),s("annotation",{encoding:"application/x-tex"},"listの末尾から数えます。インデックス")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6944em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.01968em"}},"l"),s("span",{class:"mord mathnormal"},"i"),s("span",{class:"mord mathnormal"},"s"),s("span",{class:"mord mathnormal"},"t"),s("span",{class:"mord cjk_fallback"},"の末尾から数えます。インデックス")])])]),i("nに要素が存在しない場合は、エラーをスローします。")],-1),J=a(`<div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> list.set-nth(10px 20px 30px, 1, 2em); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 2em 20px 30px</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> list.set-nth(10px 20px 30px, -1, 8em); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 10px, 20px, 8em</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> list.set-nth((Helvetica, Arial, sans-serif), 3, Roboto); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Helvetica, Arial, Roboto</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">list.slash(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$elements</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">...) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//=&gt; list</span></span></code></pre></div><p>要素を含む、スラッシュで区切られたリストを返します。</p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>⚠️ Heads up!</p><p>この関数は、スラッシュで区切られたリストを作成するための一時的な解決策です。最終的には、1px / 2px / solid のように文字通りスラッシュで記述することになりますが、当面はスラッシュは分割のために使用されるので、古い構文が削除されるまで Sass は新しい構文のためにスラッシュを使用することはできません。</p></div><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> list.slash(1px, 50px, 100px); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 1px / 50px / 100px</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">list.zip(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$lists</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">...)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">zip(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$lists</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">...) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//=&gt; list</span></span></code></pre></div><p>lists に含まれるすべてのリストを、1つのサブリストにまとめます。</p>`,9),K=s("p",null,[i("返されたリストの各要素は、"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"l"),s("mi",null,"i"),s("mi",null,"s"),s("mi",null,"t"),s("mi",null,"s"),s("mtext",null,"のその位置のすべての要素を含みます。返されるリストの長さは、")]),s("annotation",{encoding:"application/x-tex"},"lists のその位置のすべての要素を含みます。返されるリストの長さは、")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6944em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.01968em"}},"l"),s("span",{class:"mord mathnormal"},"i"),s("span",{class:"mord mathnormal"},"s"),s("span",{class:"mord mathnormal"},"t"),s("span",{class:"mord mathnormal"},"s"),s("span",{class:"mord cjk_fallback"},"のその位置のすべての要素を含みます。返されるリストの長さは、")])])]),i("lists の中で最も短いリストと同じです。")],-1),O=a(`<p>返されるリストは常にカンマで区切られ、サブリストは常にスペースで区切られます。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> list.zip(10px 50px 100px, short mid long); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 10px short, 50px mid, 100px long</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> list.zip(10px 50px 100px, short mid); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 10px short, 50px mid</span></span></code></pre></div><h2 id="sass-map" tabindex="-1">sass:map <a class="header-anchor" href="#sass-map" aria-label="Permalink to &quot;sass:map&quot;">​</a></h2><p>互換性:</p><ul><li>Dart Sass: since 1.23.0</li><li>LibSass: ✗</li><li>Ruby Sass: ✗</li><li>▶</li></ul><p>:::</p><p>💡 Fun fact:</p><p>Sassライブラリやデザインシステムは、ネストされたマップ（マップを含むマップを含むマップ）として表現される設定を共有し、上書きする傾向があります。</p><p>ネストされたマップを操作しやすくするために、いくつかのマップ関数は深い操作をサポートしています。例えば、複数のキーを map.get() に渡すと、それらのキーを辿って目的のネストされたマップを見つけます。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$config</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">a</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">b</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">c</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: d)));</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> map.get(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$config</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, a, b, c); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// d</span></span></code></pre></div><p>:::</p><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">map</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.deep-merge(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$map1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$map2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//=&gt; map</span></span></code></pre></div><p>互換性:</p><ul><li>Dart Sass: since 1.27.0</li><li>LibSass: ✗</li><li>Ruby Sass: ✗</li></ul><p>map.merge()と同じ。ただし、ネストしたマップの値も再帰的にマージされる。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$helvetica-light</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: (</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;weights&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: (</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;lightest&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;light&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">300</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  )</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$helvetica-heavy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: (</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;weights&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: (</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;medium&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">500</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;bold&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">700</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  )</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> map.deep-merge(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$helvetica-light</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$helvetica-heavy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// (</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//   &quot;weights&quot;: (</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//     &quot;lightest&quot;: 100,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//     &quot;light&quot;: 300,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//     &quot;medium&quot;: 500,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//     &quot;bold&quot;: 700</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//   )</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// )</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> map.merge(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$helvetica-light</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$helvetica-heavy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// (</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//   &quot;weights&quot;: (</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//     &quot;medium: 500,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//     &quot;bold&quot;: 700</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//   )</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// )</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">map</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.deep-remove(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$map</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$key</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$keys</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">...) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//=&gt; map</span></span></code></pre></div><p>互換性:</p><ul><li>Dart Sass: since 1.27.0</li><li>LibSass: ✗</li><li>Ruby Sass: ✗</li></ul>`,21),Y=s("p",null,[i("keysが空の場合、"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"k"),s("mi",null,"e"),s("mi",null,"y"),s("mtext",null,"に関連する値を除いた")]),s("annotation",{encoding:"application/x-tex"},"keyに関連する値を除いた")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8889em","vertical-align":"-0.1944em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03148em"}},"k"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"ey"),s("span",{class:"mord cjk_fallback"},"に関連する値を除いた")])])]),i("mapのコピーを返します。")],-1),X=a(`<div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$font-weights</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: (</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;regular&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">400</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;medium&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">500</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;bold&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">700</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> map.deep-remove(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$font-weights</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;regular&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// (&quot;medium&quot;: 500, &quot;bold&quot;: 700)</span></span></code></pre></div>`,1),Z=s("p",null,[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"k"),s("mi",null,"e"),s("mi",null,"y"),s("mi",null,"s"),s("mtext",null,"が空でない場合、")]),s("annotation",{encoding:"application/x-tex"},"keysが空でない場合、")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8889em","vertical-align":"-0.1944em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03148em"}},"k"),s("span",{class:"mord mathnormal"},"eys"),s("span",{class:"mord cjk_fallback"},"が空でない場合、")])])]),i("keyを含み$keysの最後のキーを除くキーの集合を左から右へ辿って、更新対象の入れ子マップを探す。")],-1),ss=s("p",null,[i("対象となるマップが "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"k"),s("mi",null,"e"),s("mi",null,"y"),s("mi",null,"s"),s("mtext",null,"の最後のキーに関連付けられた値を持っていない場合、")]),s("annotation",{encoding:"application/x-tex"},"keys の最後のキーに関連付けられた値を持っていない場合、")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8889em","vertical-align":"-0.1944em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03148em"}},"k"),s("span",{class:"mord mathnormal"},"eys"),s("span",{class:"mord cjk_fallback"},"の最後のキーに関連付けられた値を持っていない場合、")])])]),i("map のコピーを返します。")],-1),is=a(`<div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$fonts</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: (</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;Helvetica&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: (</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;weights&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: (</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      &quot;regular&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">400</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      &quot;medium&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">500</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      &quot;bold&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">700</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    )</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  )</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> map.deep-remove(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$fonts</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Helvetica&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;weights&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;regular&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// (</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//   &quot;Helvetica&quot;: (</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//     &quot;weights: (</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//       &quot;medium&quot;: 500,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//       &quot;bold&quot;: 700</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//     )</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//   )</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// )</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">map</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.get(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$map</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$key</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$keys</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">...)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">map-get(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$map</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$key</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$keys</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">...)</span></span></code></pre></div>`,3),as=s("p",null,[i("もし"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"k"),s("mi",null,"e"),s("mi",null,"y"),s("mi",null,"s"),s("mtext",null,"が空の場合、")]),s("annotation",{encoding:"application/x-tex"},"keysが空の場合、")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8889em","vertical-align":"-0.1944em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03148em"}},"k"),s("span",{class:"mord mathnormal"},"eys"),s("span",{class:"mord cjk_fallback"},"が空の場合、")])])]),i("keyに関連する$mapの値を返します。")],-1),ls=a(`<p>mapに$keyに関連する値がない場合は、nullを返します。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$font-weights</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: (</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;regular&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">400</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;medium&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">500</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;bold&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">700</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> map.get(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$font-weights</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;medium&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 500</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> map.get(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$font-weights</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;extra-bold&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// null</span></span></code></pre></div><p>互換性:</p><ul><li>Dart Sass: since 1.27.0</li><li>LibSass: ✗</li><li>Ruby Sass: ✗</li><li>▶</li></ul>`,4),ns=s("p",null,[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"k"),s("mi",null,"e"),s("mi",null,"y"),s("mi",null,"s"),s("mtext",null,"が空でない場合、")]),s("annotation",{encoding:"application/x-tex"},"keysが空でない場合、")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8889em","vertical-align":"-0.1944em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03148em"}},"k"),s("span",{class:"mord mathnormal"},"eys"),s("span",{class:"mord cjk_fallback"},"が空でない場合、")])])]),i("keyを含み$keysの最後のキーを除くキーの集合を左から右にたどり、検索対象のネストしたマップを見つける。")],-1),ts=a(`<p>$keysの最後のキーに関連付けられた、対象となるマップ内の値を返します。</p><p>マップにそのキーに関連する値がない場合、または $keys 内のいずれかのキーがマップから外れている場合、あるいはマップでない値を参照している場合は null を返します。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$fonts</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: (</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;Helvetica&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: (</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;weights&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: (</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      &quot;regular&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">400</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      &quot;medium&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">500</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      &quot;bold&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">700</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    )</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  )</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> map.get(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$fonts</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Helvetica&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;weights&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;regular&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 400</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> map.get(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$fonts</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Helvetica&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;colors&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// null</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">map</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.has-key(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$map</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$key</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$keys</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">...)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">map-has-key(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$map</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$key</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$keys</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">...) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//=&gt; boolean</span></span></code></pre></div>`,5),hs=s("p",null,[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"k"),s("mi",null,"e"),s("mi",null,"y"),s("mi",null,"s"),s("mtext",null,"が空の場合、")]),s("annotation",{encoding:"application/x-tex"},"keys が空の場合、")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8889em","vertical-align":"-0.1944em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03148em"}},"k"),s("span",{class:"mord mathnormal"},"eys"),s("span",{class:"mord cjk_fallback"},"が空の場合、")])])]),i("map に $key に対応する値が含まれているかどうかを返します。")],-1),ps=a(`<div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$font-weights</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: (</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;regular&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">400</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;medium&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">500</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;bold&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">700</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> map.has-key(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$font-weights</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;regular&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// true</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> map.has-key(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$font-weights</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;bolder&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// false</span></span></code></pre></div><p>互換性:</p><ul><li>Dart Sass: since 1.27.0</li><li>LibSass: ✗</li><li>Ruby Sass: ✗</li><li>▶</li></ul><p>If $keys is not empty, follows the set of keys including $key and excluding the last key in $keys, from left to right, to find the nested map targeted for searching.</p><p>Returns true if the targeted map contains a value associated with the last key in $keys.</p><p>Returns false if it does not, or if any key in $keys is missing from a map or references a value that is not a map.</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$fonts</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: (</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;Helvetica&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: (</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;weights&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: (</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      &quot;regular&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">400</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      &quot;medium&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">500</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      &quot;bold&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">700</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    )</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  )</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> map.has-key(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$fonts</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Helvetica&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;weights&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;regular&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// true</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> map.has-key(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$fonts</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Helvetica&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;colors&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// false</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">map</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.keys(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$map</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">map-keys(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$map</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//=&gt; list</span></span></code></pre></div><p>$mapに含まれるすべてのキーのカンマ区切りリストを返します。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$font-weights</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: (</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;regular&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">400</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;medium&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">500</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;bold&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">700</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> map.keys(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$font-weights</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// &quot;regular&quot;, &quot;medium&quot;, &quot;bold&quot;</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">map</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.merge(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$map1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$map2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">map-merge(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$map1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$map2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">map</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.merge(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$map1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$keys</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">..., </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$map2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">map-merge(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$map1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$keys</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">..., </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$map2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//=&gt; map</span></span></code></pre></div>`,13),es=s("div",{class:"warning custom-block"},[s("p",{class:"custom-block-title"},"WARNING"),s("p",null,"⚠️ Heads up!"),s("p",null,[i("実際には、map.merge($map1, $keys..., "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"m"),s("mi",null,"a"),s("mi",null,"p"),s("mn",null,"2"),s("mo",{stretchy:"false"},")"),s("mtext",null,"への実際の引数は"),s("mi",null,"m"),s("mi",null,"a"),s("mi",null,"p"),s("mi",{mathvariant:"normal"},"."),s("mi",null,"m"),s("mi",null,"e"),s("mi",null,"r"),s("mi",null,"g"),s("mi",null,"e"),s("mo",{stretchy:"false"},"(")]),s("annotation",{encoding:"application/x-tex"},"map2) への実際の引数は map.merge(")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal"},"ma"),s("span",{class:"mord mathnormal"},"p"),s("span",{class:"mord"},"2"),s("span",{class:"mclose"},")"),s("span",{class:"mord cjk_fallback"},"への実際の引数は"),s("span",{class:"mord mathnormal"},"ma"),s("span",{class:"mord mathnormal"},"p"),s("span",{class:"mord"},"."),s("span",{class:"mord mathnormal"},"m"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"er"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"g"),s("span",{class:"mord mathnormal"},"e"),s("span",{class:"mopen"},"(")])])]),i("map1, $args...) として渡されます。ここでは、説明のために $map1, $keys..., $map2 と記述しています。")])],-1),ks=s("p",null,"キーが渡されない場合、$map1 と $map2 の両方からすべてのキーと値を含む新しいマップを返します。",-1),rs=s("p",null,[i("map1と"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"m"),s("mi",null,"a"),s("mi",null,"p"),s("mn",null,"2"),s("mtext",null,"の両方が同じキーを持つ場合、")]),s("annotation",{encoding:"application/x-tex"},"map2の両方が同じキーを持つ場合、")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8778em","vertical-align":"-0.1944em"}}),s("span",{class:"mord mathnormal"},"ma"),s("span",{class:"mord mathnormal"},"p"),s("span",{class:"mord"},"2"),s("span",{class:"mord cjk_fallback"},"の両方が同じキーを持つ場合、")])])]),i("map2の値が優先されます。")],-1),ds=a(`<p>返されたマップの中で $map1 にも含まれるキーはすべて、 $map1 と同じ順番で並びます。map2からの新しいキーは、マップの末尾に表示されます。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$light-weights</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: (</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;lightest&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;light&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">300</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$heavy-weights</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: (</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;medium&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">500</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;bold&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">700</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> map.merge(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$light-weights</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$heavy-weights</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// (&quot;lightest&quot;: 100, &quot;light&quot;: 300, &quot;medium&quot;: 500, &quot;bold&quot;: 700)</span></span></code></pre></div><p>互換性:</p><ul><li>Dart Sass: since 1.27.0</li><li>LibSass: ✗</li><li>Ruby Sass: ✗</li><li>▶</li></ul>`,4),Es=s("p",null,[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"k"),s("mi",null,"e"),s("mi",null,"y"),s("mi",null,"s"),s("mtext",null,"が空でない場合、")]),s("annotation",{encoding:"application/x-tex"},"keysが空でない場合、")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8889em","vertical-align":"-0.1944em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03148em"}},"k"),s("span",{class:"mord mathnormal"},"eys"),s("span",{class:"mord cjk_fallback"},"が空でない場合、")])])]),i("keysをたどってマージ対象のネストされたマップを探します。keysの中のいずれかのキーがマップから外れているか、マップでない値を参照している場合、そのキーの値を空のマップに設定します。")],-1),gs=a(`<p>対象となるマップが、対象となるマップと $map2 の両方のすべてのキーと値を含む新しいマップに置き換えられた $map1 のコピーを返します。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$fonts</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: (</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;Helvetica&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: (</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;weights&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: (</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      &quot;lightest&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      &quot;light&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">300</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    )</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  )</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$heavy-weights</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: (</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;medium&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">500</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;bold&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">700</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> map.merge(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$fonts</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Helvetica&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;weights&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$heavy-weights</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// (</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//   &quot;Helvetica&quot;: (</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//     &quot;weights&quot;: (</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//       &quot;lightest&quot;: 100,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//       &quot;light&quot;: 300,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//       &quot;medium&quot;: 500,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//       &quot;bold&quot;: 700</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//     )</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//   )</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// )</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">map</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.remove(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$map</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$keys</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">...)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">map-remove(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$map</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$keys</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">...) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//=&gt; map</span></span></code></pre></div><p>キーに関連する値を除いた $map のコピーを返します。</p>`,5),cs=s("p",null,[i("もし"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"k"),s("mi",null,"e"),s("mi",null,"y"),s("mi",null,"s"),s("mtext",null,"のキーが")]),s("annotation",{encoding:"application/x-tex"},"keysのキーが")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8889em","vertical-align":"-0.1944em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03148em"}},"k"),s("span",{class:"mord mathnormal"},"eys"),s("span",{class:"mord cjk_fallback"},"のキーが")])])]),i("mapに関連する値を持っていない場合、それは無視されます。")],-1),os=a(`<div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$font-weights</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: (</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;regular&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">400</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;medium&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">500</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;bold&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">700</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> map.remove(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$font-weights</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;regular&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// (&quot;medium&quot;: 500, &quot;bold&quot;: 700)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> map.remove(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$font-weights</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;regular&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;bold&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// (&quot;medium&quot;: 500)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> map.remove(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$font-weights</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;bolder&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// (&quot;regular&quot;: 400, &quot;medium&quot;: 500, &quot;bold&quot;: 700)</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">map</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.set(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$map</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$key</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$value</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">map</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.set(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$map</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$keys</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">..., </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$key</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$value</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//=&gt; map</span></span></code></pre></div>`,3),ms=s("div",{class:"warning custom-block"},[s("p",{class:"custom-block-title"},"WARNING"),s("p",null,"⚠️ Heads up!"),s("p",null,[i("実際には、map.set($map, $keys..., $key, "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"v"),s("mi",null,"a"),s("mi",null,"l"),s("mi",null,"u"),s("mi",null,"e"),s("mo",{stretchy:"false"},")"),s("mtext",null,"の実際の引数は、"),s("mi",null,"m"),s("mi",null,"a"),s("mi",null,"p"),s("mi",{mathvariant:"normal"},"."),s("mi",null,"s"),s("mi",null,"e"),s("mi",null,"t"),s("mo",{stretchy:"false"},"(")]),s("annotation",{encoding:"application/x-tex"},"value)の実際の引数は、map.set(")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"v"),s("span",{class:"mord mathnormal"},"a"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.01968em"}},"l"),s("span",{class:"mord mathnormal"},"u"),s("span",{class:"mord mathnormal"},"e"),s("span",{class:"mclose"},")"),s("span",{class:"mord cjk_fallback"},"の実際の引数は、"),s("span",{class:"mord mathnormal"},"ma"),s("span",{class:"mord mathnormal"},"p"),s("span",{class:"mord"},"."),s("span",{class:"mord mathnormal"},"se"),s("span",{class:"mord mathnormal"},"t"),s("span",{class:"mopen"},"(")])])]),i("map, "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"a"),s("mi",null,"r"),s("mi",null,"g"),s("mi",null,"s"),s("mi",{mathvariant:"normal"},"."),s("mi",{mathvariant:"normal"},"."),s("mi",{mathvariant:"normal"},"."),s("mo",{stretchy:"false"},")"),s("mtext",null,"として渡されています。ここでは説明のために、")]),s("annotation",{encoding:"application/x-tex"},"args...)として渡されています。ここでは説明のために、")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal"},"a"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"r"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"g"),s("span",{class:"mord mathnormal"},"s"),s("span",{class:"mord"},"..."),s("span",{class:"mclose"},")"),s("span",{class:"mord cjk_fallback"},"として渡されています。ここでは説明のために、")])])]),i("map, $keys..., $key, $valueと記述しています。")])],-1),us=s("p",null,[i("キーが渡されない場合、"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"k"),s("mi",null,"e"),s("mi",null,"y"),s("mtext",null,"の値を")]),s("annotation",{encoding:"application/x-tex"},"keyの値を")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8889em","vertical-align":"-0.1944em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03148em"}},"k"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"ey"),s("span",{class:"mord cjk_fallback"},"の値を")])])]),i("valueに設定した$mapのコピーを返します。")],-1),ys=a(`<div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$font-weights</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: (</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;regular&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">400</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;medium&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">500</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;bold&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">700</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> map.set(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$font-weights</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;regular&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, 300);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// (&quot;regular&quot;: 300, &quot;medium&quot;: 500, &quot;bold&quot;: 700)</span></span></code></pre></div><p>互換性:</p><ul><li>Dart Sass: since 1.27.0</li><li>LibSass: ✗</li><li>Ruby Sass: ✗</li><li>▶</li></ul><p>keyが渡された場合、$keysをたどって更新対象のネストされたマップを探します。keysに含まれるキーがマップにない場合、あるいはマップでない値を参照している場合、 そのキーの値を空のマップに設定します。</p>`,4),Fs=s("p",null,[i("ターゲット・マップの"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"k"),s("mi",null,"e"),s("mi",null,"y"),s("mtext",null,"の値を")]),s("annotation",{encoding:"application/x-tex"},"keyの値を")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8889em","vertical-align":"-0.1944em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03148em"}},"k"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"ey"),s("span",{class:"mord cjk_fallback"},"の値を")])])]),i("valueに設定した$mapのコピーを返します。")],-1),bs=a(`<div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$fonts</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: (</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;Helvetica&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: (</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;weights&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: (</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      &quot;regular&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">400</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      &quot;medium&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">500</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      &quot;bold&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">700</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    )</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  )</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> map.set(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$fonts</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Helvetica&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;weights&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;regular&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, 300);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// (</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//   &quot;Helvetica&quot;: (</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//     &quot;weights&quot;: (</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//       &quot;regular&quot;: 300,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//       &quot;medium&quot;: 500,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//       &quot;bold&quot;: 700</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//     )</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//   )</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// )</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">map</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.values(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$map</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">map-values(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$map</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//=&gt; list</span></span></code></pre></div><p>$mapに含まれるすべての値をカンマ区切りで返します。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$font-weights</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: (</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;regular&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">400</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;medium&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">500</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;bold&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">700</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> map.values(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$font-weights</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 400, 500, 700</span></span></code></pre></div><h2 id="sass-math" tabindex="-1">sass:math <a class="header-anchor" href="#sass-math" aria-label="Permalink to &quot;sass:math&quot;">​</a></h2><p>互換性:</p><ul><li>Dart Sass: since 1.23.0</li><li>LibSass: ✗</li><li>Ruby Sass: ✗</li><li>▶</li></ul><h3 id="変数" tabindex="-1">変数 <a class="header-anchor" href="#変数" aria-label="Permalink to &quot;変数&quot;">​</a></h3><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">math</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$e</span></span></code></pre></div><p>互換性:</p><ul><li>Dart Sass: since 1.25.0</li><li>LibSass: ✗</li><li>Ruby Sass: ✗</li></ul><p>数学定数eの値に等しい。</p><div class="language-Scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">Scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> math</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$e</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 2.7182818285</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">math</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$pi</span></span></code></pre></div><p>互換性:</p><ul><li>Dart Sass: since 1.25.0</li><li>LibSass: ✗</li><li>Ruby Sass: ✗</li></ul><p>数学定数πの値に等しい。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> math</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$pi</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 3.1415926536</span></span></code></pre></div><h3 id="バウンディング関数" tabindex="-1">バウンディング関数 <a class="header-anchor" href="#バウンディング関数" aria-label="Permalink to &quot;バウンディング関数&quot;">​</a></h3><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">math</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.ceil(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ceil(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//=&gt; number</span></span></code></pre></div><p>$numberを次の最も大きい整数に切り上げます。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> math.ceil(4); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 4</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> math.ceil(4.2); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 5</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> math.ceil(4.9); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 5</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">math</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.clamp(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$min</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$max</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//=&gt; number</span></span></code></pre></div><p>互換性:</p><ul><li>Dart Sass: since 1.25.0</li><li>LibSass: ✗</li><li>Ruby Sass: ✗</li></ul><p>$number を $min から $max までの範囲に制限します。number が $min より小さい場合は $min を、 $max より大きい場合は $max を返します。</p>`,29),As=s("p",null,[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"m"),s("mi",null,"i"),s("mi",null,"n"),s("mtext",null,"、")]),s("annotation",{encoding:"application/x-tex"},"min、")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6833em"}}),s("span",{class:"mord mathnormal"},"min"),s("span",{class:"mord cjk_fallback"},"、")])])]),i("number、$maxは、互換性のある単位を持つか、すべて単位なしである必要があります。")],-1),vs=a(`<div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> math.clamp(-1, 0, 1); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 0</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> math.clamp(1px, -1px, 10px); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 1px</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> math.clamp(-1in, 1cm, 10mm); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 10mm</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">math</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.floor(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">floor(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//=&gt; number</span></span></code></pre></div><p>$numberを切り捨て、次の最小の整数にします。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> math.floor(4); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 4</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> math.floor(4.2); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 4</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> math.floor(4.9); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 4</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">math</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.max(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">...)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">max(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">...) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//=&gt; number</span></span></code></pre></div><p>1つまたは複数の数値のうち、最も大きい数値を返します。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> math.max(1px, 4px); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 4px</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$widths</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">50</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">30</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> math.max(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$widths</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">...); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 100px</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">math</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.min(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">...)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">min(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">...) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//=&gt; number</span></span></code></pre></div><p>1つまたは複数の数値のうち、最も小さい数値を返します。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> math.min(1px, 4px); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 1px</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$widths</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">50</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">30</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> math.min(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$widths</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">...); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 30px</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">math</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.round(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">round(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//=&gt; number</span></span></code></pre></div><p>最も近い整数に $number を丸めます。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> math.round(4); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 4</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> math.round(4.2); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 4</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> math.round(4.9); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 5</span></span></code></pre></div><h3 id="距離関数" tabindex="-1">距離関数 <a class="header-anchor" href="#距離関数" aria-label="Permalink to &quot;距離関数&quot;">​</a></h3><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">math</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.abs(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">abs(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//=&gt; number</span></span></code></pre></div>`,19),Ds=s("p",null,[i("numberの絶対値を返します。numberが負の場合は-"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"n"),s("mi",null,"u"),s("mi",null,"m"),s("mi",null,"b"),s("mi",null,"e"),s("mi",null,"r"),s("mtext",null,"を、正の場合は")]),s("annotation",{encoding:"application/x-tex"},"numberを、正の場合は")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6944em"}}),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mord mathnormal"},"u"),s("span",{class:"mord mathnormal"},"mb"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"er"),s("span",{class:"mord cjk_fallback"},"を、正の場合は")])])]),i("numberをそのまま返します。")],-1),Cs=a(`<div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> math.abs(10px); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 10px</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> math.abs(-10px); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 10px</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">math</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.hypot(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">...) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//=&gt; number</span></span></code></pre></div><p>互換性:</p><ul><li>Dart Sass: since 1.25.0</li><li>LibSass: ✗</li><li>Ruby Sass: ✗</li></ul><p>各$numberに等しい成分を持つ、n次元ベクトルの長さを返します。例えば、a, b, cの3つの数に対して、これはa² + b² + c²の平方根を返します。</p><p>数値はすべて互換性のある単位を持つか、すべて単位を持たないかのどちらかでなければなりません。そして、数値の単位が異なる場合があるので、出力は最初の数値の単位をとります。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> math.hypot(3, 4); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 5</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$lengths</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">cm</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">50</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> math.hypot(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$lengths</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">...); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 4.0952775683in</span></span></code></pre></div><h3 id="指数関数" tabindex="-1">指数関数 <a class="header-anchor" href="#指数関数" aria-label="Permalink to &quot;指数関数&quot;">​</a></h3><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">math</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.log(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$base</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: null) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//=&gt; number</span></span></code></pre></div><p>互換性:</p><ul><li>Dart Sass: since 1.25.0</li><li>LibSass: ✗</li><li>Ruby Sass: ✗</li></ul>`,12),xs=s("p",null,[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"n"),s("mi",null,"u"),s("mi",null,"m"),s("mi",null,"b"),s("mi",null,"e"),s("mi",null,"r"),s("mtext",null,"の")]),s("annotation",{encoding:"application/x-tex"},"numberの")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6944em"}}),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mord mathnormal"},"u"),s("span",{class:"mord mathnormal"},"mb"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"er"),s("span",{class:"mord cjk_fallback"},"の")])])]),i("baseに対する対数を返します。baseがNULLの場合は、自然対数を計算します。")],-1),Bs=s("p",null,[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"n"),s("mi",null,"u"),s("mi",null,"m"),s("mi",null,"b"),s("mi",null,"e"),s("mi",null,"r"),s("mtext",null,"と")]),s("annotation",{encoding:"application/x-tex"},"numberと")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6944em"}}),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mord mathnormal"},"u"),s("span",{class:"mord mathnormal"},"mb"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"er"),s("span",{class:"mord cjk_fallback"},"と")])])]),i("baseは無単位でなければならない。")],-1),_s=a(`<div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> math.log(10); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 2.302585093</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> math.log(10, 10); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 1</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">math</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.pow(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$base</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$exponent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//=&gt; number</span></span></code></pre></div><p>互換性:</p><ul><li>Dart Sass: since 1.25.0</li><li>LibSass: ✗</li><li>Ruby Sass: ✗</li></ul>`,5),$s=s("p",null,[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"b"),s("mi",null,"a"),s("mi",null,"s"),s("mi",null,"e"),s("mtext",null,"を")]),s("annotation",{encoding:"application/x-tex"},"baseを")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6944em"}}),s("span",{class:"mord mathnormal"},"ba"),s("span",{class:"mord mathnormal"},"se"),s("span",{class:"mord cjk_fallback"},"を")])])]),i("exponentのべき乗に引き上げます。")],-1),qs=s("p",null,[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"b"),s("mi",null,"a"),s("mi",null,"s"),s("mi",null,"e"),s("mtext",null,"と")]),s("annotation",{encoding:"application/x-tex"},"baseと")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6944em"}}),s("span",{class:"mord mathnormal"},"ba"),s("span",{class:"mord mathnormal"},"se"),s("span",{class:"mord cjk_fallback"},"と")])])]),i("exponentは無単位でなければなりません。")],-1),ws=a(`<div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> math.pow(10, 2); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 100</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> math.pow(100, math.div(1, 3)); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 4.6415888336</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> math.pow(5, -2); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 0.04</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">math</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.sqrt(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//=&gt; number</span></span></code></pre></div><p>互換性:</p><ul><li>Dart Sass: since 1.25.0</li><li>LibSass: ✗</li><li>Ruby Sass: ✗</li></ul><p>$numberの平方根を返します。</p><p>$numberは無単位でなければなりません。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> math.sqrt(100); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 10</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> math.sqrt(math.div(1, 3)); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 0.5773502692</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> math.sqrt(-1); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// NaN</span></span></code></pre></div><h3 id="三角関数" tabindex="-1">三角関数 <a class="header-anchor" href="#三角関数" aria-label="Permalink to &quot;三角関数&quot;">​</a></h3><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">math</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.cos(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//=&gt; number</span></span></code></pre></div><p>互換性:</p><ul><li>Dart Sass: since 1.25.0</li><li>LibSass: ✗</li><li>Ruby Sass: ✗</li></ul><p>$numberのcosを返します。</p><p>$numberは角度（単位はdegと互換性があること）または単位なしである必要があります。numberに単位がない場合は、radであるとみなされます。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> math.cos(100deg); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// -0.1736481777</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> math.cos(1rad); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 0.5403023059</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> math.cos(1); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 0.5403023059</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">math</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.sin(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//=&gt; number</span></span></code></pre></div><p>互換性:</p><ul><li>Dart Sass: since 1.25.0</li><li>LibSass: ✗</li><li>Ruby Sass: ✗</li></ul><p>$numberの正弦を返します。</p><p>$numberは角度（単位はdegと互換性があること）または単位なしである必要があります。numberに単位がない場合は、radであるとみなされます。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> math.sin(100deg); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 0.984807753</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> math.sin(1rad); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 0.8414709848</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> math.sin(1); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 0.8414709848</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">math</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.tan(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//=&gt; number</span></span></code></pre></div><p>互換性:</p><ul><li>Dart Sass: since 1.25.0</li><li>LibSass: ✗</li><li>Ruby Sass: ✗</li></ul><p>numberのタンジェントを返します。</p><p>$numberは角度（単位はdegと互換性があること）または単位なしである必要があります。numberに単位がない場合は、radであると見なされます。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> math.tan(100deg); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// -5.6712818196</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> math.tan(1rad); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 1.5574077247</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> math.tan(1); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 1.5574077247</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">math</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.acos(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//=&gt; number</span></span></code></pre></div><p>互換性:</p><ul><li>Dart Sass: since 1.25.0</li><li>LibSass: ✗</li><li>Ruby Sass: ✗</li></ul><p>$numberのアークサインをdegで返します。</p><p>$numberは無単位でなければなりません。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> math.acos(0.5); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 60deg</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> math.acos(2); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// NaNdeg</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">math</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.asin(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//=&gt; number</span></span></code></pre></div><p>互換性:</p><ul><li>Dart Sass: since 1.25.0</li><li>LibSass: ✗</li><li>Ruby Sass: ✗</li></ul><p>$numberのアークサインをdegで返します。</p><p>$numberは無単位でなければなりません。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> math.asin(0.5); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 30deg</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> math.asin(2); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// NaNdeg</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">math</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.atan(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//=&gt; number</span></span></code></pre></div><p>互換性:</p><ul><li>Dart Sass: since 1.25.0</li><li>LibSass: ✗</li><li>Ruby Sass: ✗</li></ul><p>$numberのアークタンジェントをdegで返します。</p><p>$numberは無単位でなければなりません。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> math.atan(10); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 84.2894068625deg</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">math</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.atan2(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$y</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$x</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//=&gt; number</span></span></code></pre></div><p>互換性:</p><ul><li>Dart Sass: since 1.25.0</li><li>LibSass: ✗</li><li>Ruby Sass: ✗</li></ul>`,54),fs=s("p",null,[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"y"),s("mtext",null,"と")]),s("annotation",{encoding:"application/x-tex"},"yと")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8778em","vertical-align":"-0.1944em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"y"),s("span",{class:"mord cjk_fallback"},"と")])])]),i("xの2引数のアークタンジェントをdegで返します。")],-1),Ss=s("p",null,[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"y"),s("mtext",null,"と")]),s("annotation",{encoding:"application/x-tex"},"yと")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8778em","vertical-align":"-0.1944em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"y"),s("span",{class:"mord cjk_fallback"},"と")])])]),i("xは互換性のある単位を持つか、単位なしである必要があります。")],-1),Ts=s("div",{class:"tip custom-block"},[s("p",{class:"custom-block-title"},"TIP"),s("p",null,"💡 Fun fact:"),s("p",null,[i("math.atan2($y, "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"x"),s("mo",{stretchy:"false"},")"),s("mtext",null,"と"),s("mi",null,"a"),s("mi",null,"t"),s("mi",null,"a"),s("mi",null,"n"),s("mo",{stretchy:"false"},"("),s("mi",null,"m"),s("mi",null,"a"),s("mi",null,"t"),s("mi",null,"h"),s("mi",{mathvariant:"normal"},"."),s("mi",null,"d"),s("mi",null,"i"),s("mi",null,"v"),s("mo",{stretchy:"false"},"(")]),s("annotation",{encoding:"application/x-tex"},"x) と atan(math.div(")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal"},"x"),s("span",{class:"mclose"},")"),s("span",{class:"mord cjk_fallback"},"と"),s("span",{class:"mord mathnormal"},"a"),s("span",{class:"mord mathnormal"},"t"),s("span",{class:"mord mathnormal"},"an"),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal"},"ma"),s("span",{class:"mord mathnormal"},"t"),s("span",{class:"mord mathnormal"},"h"),s("span",{class:"mord"},"."),s("span",{class:"mord mathnormal"},"d"),s("span",{class:"mord mathnormal"},"i"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"v"),s("span",{class:"mopen"},"(")])])]),i("y, $x)) は、問題の点の象限を保持するため、区別されます。例えば， math.atan2(1, -1) は点 (-1, 1) に対応し，135deg を返します． これに対して， math.atan(math.div(1, -1)) と math.atan(math.div(-1, 1)) は最初に atan(-1) に解決するので，両方とも -45deg を返します．")])],-1),Ms=a(`<div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> math.atan2(-1, 1); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 135deg</span></span></code></pre></div><h3 id="ユニット関数" tabindex="-1">ユニット関数 <a class="header-anchor" href="#ユニット関数" aria-label="Permalink to &quot;ユニット関数&quot;">​</a></h3><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">math</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.compatible(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$number1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$number2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">comparable(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$number1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$number2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//=&gt; boolean</span></span></code></pre></div><p>$number1 と $number2 が互換性のある単位を持っているかどうかを返します。</p><p>これが真を返した場合、$number1 と $number2 は安全に加算、減算、および比較することができます。そうでない場合は、エラーが発生します。</p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>⚠️ Heads up!</p><p>この関数のグローバル名はcomparableですが、sass:mathモジュールに追加されたときに、この関数が何をするのかをより明確に伝えるためにcompatibleに名前が変更されました。</p></div><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> math.compatible(2px, 1px); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// true</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> math.compatible(100px, 3em); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// false</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> math.compatible(10cm, 3mm); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// true</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">math</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.is-unitless(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">unitless(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//=&gt; boolean</span></span></code></pre></div><p>$numberが単位を持たないかどうかを返します。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> math.is-unitless(100); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// true</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> math.is-unitless(100px); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// false</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">math</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.unit(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">unit(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//=&gt; quoted string</span></span></code></pre></div><p>$numberの単位を文字列で返します。</p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>⚠️ Heads up!</p><p>この関数はデバッグ用です。その出力形式は、Sass のバージョンまたは実装間で一貫していることは保証されません。</p></div><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> math.unit(100); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// &quot;&quot;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> math.unit(100px); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// &quot;px&quot;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> math.unit(5px * 10px); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// &quot;px*px&quot;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> math.unit(math.div(5px, 1s)); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// &quot;px/s&quot;</span></span></code></pre></div><h3 id="その他の関数" tabindex="-1">その他の関数 <a class="header-anchor" href="#その他の関数" aria-label="Permalink to &quot;その他の関数&quot;">​</a></h3><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">math</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.div(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$number1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$number2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//=&gt; number</span></span></code></pre></div><p>互換性:</p><ul><li>Dart Sass: since 1.33.0</li><li>LibSass: ✗</li><li>Ruby Sass: ✗</li></ul><p>$number1 を $number2 で割った結果を返します。</p>`,21),Ls=s("p",null,[i("両方の数字に共通する単位は、すべて相殺されます。"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"n"),s("mi",null,"u"),s("mi",null,"m"),s("mi",null,"b"),s("mi",null,"e"),s("mi",null,"r"),s("mn",null,"1"),s("mtext",null,"にあって")]),s("annotation",{encoding:"application/x-tex"},"number1にあって")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6944em"}}),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mord mathnormal"},"u"),s("span",{class:"mord mathnormal"},"mb"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"er"),s("span",{class:"mord"},"1"),s("span",{class:"mord cjk_fallback"},"にあって")])])]),i("number2にない単位は戻り値の分子に、"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"n"),s("mi",null,"u"),s("mi",null,"m"),s("mi",null,"b"),s("mi",null,"e"),s("mi",null,"r"),s("mn",null,"2"),s("mtext",null,"にあって")]),s("annotation",{encoding:"application/x-tex"},"number2にあって")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6944em"}}),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mord mathnormal"},"u"),s("span",{class:"mord mathnormal"},"mb"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"er"),s("span",{class:"mord"},"2"),s("span",{class:"mord cjk_fallback"},"にあって")])])]),i("number1にない単位は戻り値の分母に入ることになります。")],-1),js=a(`<div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>⚠️ Heads up!</p><p>後方互換性のために、これは非推奨の/演算子と全く同じ結果を返し、間に/文字がある2つの文字列を連結することを含む。しかし、この動作はいずれ削除されるため、新しいスタイルシートでは使用しない方が良い。</p></div><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> math.div(1, 2); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 0.5</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> math.div(100px, 5px); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 20</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> math.div(100px, 5); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 20px</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> math.div(100px, 5s); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 20px/s</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">math</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.percentage(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">percentage(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//=&gt; number</span></span></code></pre></div><p>単位のない $number (通常は 0 と 1 の間の 10 進数) をパーセンテージに変換します。</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>💡 Fun fact:</p><p>この関数は、$number * 100% と同じです。</p></div><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> math.percentage(0.2); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 20%</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> math.percentage(math.div(100px, 50px)); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 200%</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">math</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.random(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$limit</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: null)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">random</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$limit:</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//=&gt; number</span></span></code></pre></div><p>$limit が NULL の場合、0 から 1 までのランダムな 10 進数を返します。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> math.random(); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 0.2821251858</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> math.random(); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 0.6221325814</span></span></code></pre></div>`,11),Rs=s("p",null,[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"l"),s("mi",null,"i"),s("mi",null,"m"),s("mi",null,"i"),s("mi",null,"t"),s("mtext",null,"が"),s("mn",null,"1"),s("mtext",null,"以上の数値の場合、"),s("mn",null,"1"),s("mtext",null,"から")]),s("annotation",{encoding:"application/x-tex"},"limitが1以上の数値の場合、1から")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6944em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.01968em"}},"l"),s("span",{class:"mord mathnormal"},"imi"),s("span",{class:"mord mathnormal"},"t"),s("span",{class:"mord cjk_fallback"},"が"),s("span",{class:"mord"},"1"),s("span",{class:"mord cjk_fallback"},"以上の数値の場合、"),s("span",{class:"mord"},"1"),s("span",{class:"mord cjk_fallback"},"から")])])]),i("limitまでの間のランダムな整数を返します。")],-1),Is=s("div",{class:"warning custom-block"},[s("p",{class:"custom-block-title"},"WARNING"),s("p",null,"⚠️ Heads up!"),s("p",null,[i("random() は、"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"l"),s("mi",null,"i"),s("mi",null,"m"),s("mi",null,"i"),s("mi",null,"t"),s("mtext",null,"の単位を無視します。この動作は非推奨で、"),s("mi",null,"r"),s("mi",null,"a"),s("mi",null,"n"),s("mi",null,"d"),s("mi",null,"o"),s("mi",null,"m"),s("mo",{stretchy:"false"},"(")]),s("annotation",{encoding:"application/x-tex"},"limit の単位を無視します。この動作は非推奨で、 random(")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.01968em"}},"l"),s("span",{class:"mord mathnormal"},"imi"),s("span",{class:"mord mathnormal"},"t"),s("span",{class:"mord cjk_fallback"},"の単位を無視します。この動作は非推奨で、"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"r"),s("span",{class:"mord mathnormal"},"an"),s("span",{class:"mord mathnormal"},"d"),s("span",{class:"mord mathnormal"},"o"),s("span",{class:"mord mathnormal"},"m"),s("span",{class:"mopen"},"(")])])]),i("limit) は引数 $limit と同じ単位のランダムな整数を返します。")]),s("div",{class:"language-scss vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"scss"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"@debug"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," math.random(100px); "),s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// 42")])])])])],-1),Ns=a(`<div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> math.random(10); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 4</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> math.random(10000); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 5373</span></span></code></pre></div><h2 id="sass-meta" tabindex="-1">sass:meta <a class="header-anchor" href="#sass-meta" aria-label="Permalink to &quot;sass:meta&quot;">​</a></h2><p>互換性:</p><ul><li>Dart Sass: since 1.23.0</li><li>LibSass: ✗</li><li>Ruby Sass: ✗</li><li>▶</li></ul><h3 id="mixins" tabindex="-1">Mixins <a class="header-anchor" href="#mixins" aria-label="Permalink to &quot;Mixins&quot;">​</a></h3><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">meta</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.load-css(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$url</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$with</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: null)</span></span></code></pre></div><p>互換性:</p><ul><li>Dart Sass: since 1.23.0</li><li>LibSass: ✗</li><li>Ruby Sass: ✗</li><li>▶</li></ul>`,8),Ps=s("p",null,[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"u"),s("mi",null,"r"),s("mi",null,"l"),s("mtext",null,"にあるモジュールをロードし、その"),s("mi",null,"C"),s("mi",null,"S"),s("mi",null,"S"),s("mtext",null,"をこの"),s("mi",null,"m"),s("mi",null,"i"),s("mi",null,"x"),s("mi",null,"i"),s("mi",null,"n"),s("mtext",null,"のコンテンツとして書き込んだかのように含めます。"),s("mi",null,"w"),s("mi",null,"i"),s("mi",null,"t"),s("mi",null,"h"),s("mtext",null,"パラメータは、モジュールの設定を行います。渡す場合は、変数名（")]),s("annotation",{encoding:"application/x-tex"},"url にあるモジュールをロードし、その CSS をこの mixin のコンテンツとして書き込んだかのように含めます。with パラメータは、モジュールの設定を行います。渡す場合は、変数名（")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6944em"}}),s("span",{class:"mord mathnormal"},"u"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"r"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.01968em"}},"l"),s("span",{class:"mord cjk_fallback"},"にあるモジュールをロードし、その"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.05764em"}},"CSS"),s("span",{class:"mord cjk_fallback"},"をこの"),s("span",{class:"mord mathnormal"},"mi"),s("span",{class:"mord mathnormal"},"x"),s("span",{class:"mord mathnormal"},"in"),s("span",{class:"mord cjk_fallback"},"のコンテンツとして書き込んだかのように含めます。"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02691em"}},"w"),s("span",{class:"mord mathnormal"},"i"),s("span",{class:"mord mathnormal"},"t"),s("span",{class:"mord mathnormal"},"h"),s("span",{class:"mord cjk_fallback"},"パラメータは、モジュールの設定を行います。渡す場合は、変数名（")])])]),i("なし）から、読み込んだモジュールで使用するそれらの変数の値へのマップである必要があります。")],-1),Hs=a(`<p>$url が relative の場合、meta.load-css() が含まれるファイルからの相対パスとして解釈されます。</p><p><code>@use</code>ルールのように。</p><ul><li>これは、与えられたモジュールが異なる方法で複数回ロードされたとしても、一度だけ評価します。</li><li>これは、すでにロードされたモジュールに設定を提供することはできません。</li></ul><p><code>@use</code>ルールとは異なります。</p><ul><li>これは、ロードされたモジュールのメンバーを現在のモジュールで利用できるようにするものではありません。</li><li>これはスタイルシートのどこでも使用することができます。スタイル・ルールの中に入れて、ネストされたスタイルを作成することもできます。</li><li>読み込まれるモジュールの URL は、変数から得ることができ、補間を含むことができます。</li></ul><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>⚠️ Heads up!</p><p>$urlパラメータは、@useルールに渡すようなURLを含む文字列でなければなりません。CSSのurl()であってはいけません!</p></div><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-AeyLp" id="tab-_3oSSz6" checked><label for="tab-_3oSSz6">SCSS</label><input type="radio" name="group-AeyLp" id="tab-HyuNK52"><label for="tab-HyuNK52">CSS</label></div><div class="blocks"><div class="language-scss vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// dark-theme/_code.scss</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$border-contrast</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: false </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!default</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">code</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  background-color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">#6b717f</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">#d2e1dd</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  @if</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> $border-contrast</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    border-color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">#dadbdf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// style.scss</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@use</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;sass:meta&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">body</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.dark</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  @include</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> meta</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">load-css</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;dark-theme/code&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">      $with</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: (</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;border-contrast&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: true));</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">body</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.dark</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;"> code</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  background-color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">#6b717f</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">#d2e1dd</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  border-color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">#dadbdf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></div></div><h3 id="関数" tabindex="-1">関数 <a class="header-anchor" href="#関数" aria-label="Permalink to &quot;関数&quot;">​</a></h3><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">meta</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.calc-args(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$calc</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//=&gt; list</span></span></code></pre></div><p>互換性:</p><ul><li>Dart Sass: since 1.40.0</li><li>LibSass: ✗</li><li>Ruby Sass: ✗</li></ul><p>指定された計算の引数を返します。</p><p>引数が数値またはネストされた計算である場合、その型として返されます。それ以外の場合は、引用符で囲まれていない文字列として返される。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> meta.calc-args(calc(100px + 10%)); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// unquote(&quot;100px + 10%&quot;)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> meta.calc-args(clamp(50px, var(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">--width</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), 1000px)); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 50px, unquote(&quot;var(--width)&quot;), 1000px</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">meta</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.calc-name(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$calc</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//=&gt; quoted string</span></span></code></pre></div><p>互換性:</p><ul><li>Dart Sass: since 1.40.0</li><li>LibSass: ✗</li><li>Ruby Sass: ✗</li></ul><p>指定された計算の名前を返します。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> meta.calc-name(calc(100px + 10%)); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// &quot;calc&quot;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> meta.calc-name(clamp(50px, var(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">--width</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), 1000px)); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// &quot;clamp&quot;</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">meta</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.call(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$args</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">...)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">call(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$args</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">...)</span></span></code></pre></div><p>互換性 (引数の種類):</p><ul><li>Dart Sass: ✓</li><li>LibSass: since 3.5.0</li><li>Ruby Sass: since 3.5.0</li><li>▶</li></ul><p>$args を指定して $function を起動し、結果を返します。</p><p>この$functionは、meta.get-function()によって返される関数でなければなりません。</p>`,26),Vs=s("div",{class:"vp-code-group vp-adaptive-theme"},[s("div",{class:"tabs"},[s("input",{type:"radio",name:"group-kQGDm",id:"tab-RN6B2wj",checked:""}),s("label",{for:"tab-RN6B2wj"},"scss"),s("input",{type:"radio",name:"group-kQGDm",id:"tab-p2uB4OH"}),s("label",{for:"tab-p2uB4OH"},"css"),s("input",{type:"radio",name:"group-kQGDm",id:"tab-qIx2Sa2"}),s("label",{for:"tab-qIx2Sa2"},"scss"),s("input",{type:"radio",name:"group-kQGDm",id:"tab-IkUKDab"}),s("label",{for:"tab-IkUKDab"},"scss"),s("input",{type:"radio",name:"group-kQGDm",id:"tab-KYYaswH"}),s("label",{for:"tab-KYYaswH"},"scss"),s("input",{type:"radio",name:"group-kQGDm",id:"tab-bweS8Zv"}),s("label",{for:"tab-bweS8Zv"},"scss"),s("input",{type:"radio",name:"group-kQGDm",id:"tab-eorNgtR"}),s("label",{for:"tab-eorNgtR"},"scss"),s("input",{type:"radio",name:"group-kQGDm",id:"tab-ya4h0Me"}),s("label",{for:"tab-ya4h0Me"},"scss"),s("input",{type:"radio",name:"group-kQGDm",id:"tab-qJv47mJ"}),s("label",{for:"tab-qJv47mJ"},"scss"),s("input",{type:"radio",name:"group-kQGDm",id:"tab-fVui86w"}),s("label",{for:"tab-fVui86w"},"scss"),s("input",{type:"radio",name:"group-kQGDm",id:"tab-l200QKR"}),s("label",{for:"tab-l200QKR"},"scss"),s("input",{type:"radio",name:"group-kQGDm",id:"tab-hpbg-BX"}),s("label",{for:"tab-hpbg-BX"},"scss"),s("input",{type:"radio",name:"group-kQGDm",id:"tab-OW81a90"}),s("label",{for:"tab-OW81a90"},"scss")]),s("div",{class:"blocks"},[s("div",{class:"language-scss vp-adaptive-theme active"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"scss"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"@use"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},' "sass:list"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},";")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"@use"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},' "sass:meta"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},";")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"@use"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},' "sass:string"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},";")]),i(`
`),s("span",{class:"line"}),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"/// $condition が `true` を返すすべての要素を削除した $list のコピーを返します。")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"@function"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," remove-where"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),s("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}},"$list"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},", "),s("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}},"$condition"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},") {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}},"  $new-list"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": ();")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}},"  $separator"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": "),s("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}},"list"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"."),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"separator"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),s("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}},"$list"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},");")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"  @each"),s("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}}," $element"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," in"),s("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}}," $list"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"    @if"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," not"),s("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}}," meta"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"."),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"call"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),s("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}},"$condition"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},", "),s("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}},"$element"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},") {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}},"      $new-list"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": "),s("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}},"list"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"."),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"append"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),s("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}},"$new-list"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},", "),s("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}},"$element"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},", "),s("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}},"$separator:"),s("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}}," $separator"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},");")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    }")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"  }")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"  @return"),s("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}}," $new-list"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},";")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")]),i(`
`),s("span",{class:"line"}),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}},"$fonts"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": "),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"Tahoma"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},", Geneva, "),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"Helvetica Neue"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},", "),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"Helvetica"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},", "),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"Arial"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},", "),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"sans-serif"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},";")]),i(`
`),s("span",{class:"line"}),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#22863A","--shiki-dark":"#85E89D"}},"content"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"  @function"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," contains-helvetica"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),s("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}},"$string"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},") {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"    @return"),s("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}}," string"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"."),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"index"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),s("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}},"$string"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},", "),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"Helvetica"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},");")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"  }")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"  font-family"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": "),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"remove-where"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),s("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}},"$fonts"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},", "),s("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}},"meta"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"."),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"get-function"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"contains-helvetica"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"));")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")])])])]),s("div",{class:"language-css vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"css"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},".content"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"  font-family"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": "),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"Tahoma"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},", Geneva, "),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"Arial"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},", "),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"sans-serif"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},";")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")])])])]),s("hr"),s("div",{class:"language-scss vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"scss"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#22863A","--shiki-dark":"#85E89D"}},"meta"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},".content-exists()")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"content-exists() "),s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//=> boolean")])])])]),s("p",null,[i("現在の mixin に "),s("code",null,"@content"),i(" ブロックが渡されたかどうかを返します。")]),s("p",null,"ミキシンの外部で呼び出された場合はエラーをスローします。"),s("div",{class:"language-scss vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"scss"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"@mixin"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," debug-content-exists"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"  @debug"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," meta.content-exists();")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"  @content"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},";")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")]),i(`
`),s("span",{class:"line"}),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"@include"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," debug-content-exists"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"; "),s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// false")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"@include"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," debug-content-exists"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," { "),s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// true")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"  // Content!")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")])])])]),s("hr"),s("div",{class:"language-scss vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"scss"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#22863A","--shiki-dark":"#85E89D"}},"meta"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},".feature-exists("),s("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}},"$feature"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},")")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"feature-exists("),s("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}},"$feature"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},") "),s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//=> boolean")])])])]),s("p",null,"現在の Sass 実装が $feature をサポートしているかどうかを返します。"),s("p",null,"feature は文字列である必要があります。現在認識されている機能は以下の通りです。"),s("ul",null,[s("li",null,"global-variable-shadowing は、ローカル変数がグローバル変数をシャドウすることを意味します（!global フラグがない限り）。"),s("li",null,"extend-selector-pseudoclass, これは @extend ルールが :not() のような擬似クラスにネストされたセレクタに影響することを意味します。"),s("li",null,"units-level3, これは、単位演算が CSS Values and Units Level 3 で定義された単位をサポートすることを意味します。"),s("li",null,"at-error, これは @error ルールがサポートされることを意味します。"),s("li",null,"custom-property は、カスタムプロパティ宣言の値が補間以外の表現に対応していないことを意味します。")]),s("p",null,"認識できない$featureに対してはfalseを返します。"),s("div",{class:"language-scss vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"scss"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"@debug"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," meta.feature-exists("),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"at-error"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"); "),s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// true")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"@debug"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," meta.feature-exists("),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"unrecognized"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"); "),s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// false")])])])]),s("hr"),s("div",{class:"language-scss vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"scss"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#22863A","--shiki-dark":"#85E89D"}},"meta"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},".function-exists("),s("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}},"$name"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},", "),s("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}},"$module"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": null)")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"function-exists"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),s("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}},"$name"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},") "),s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//=> boolean")])])])]),s("p",null,"$nameという名前の関数が、組み込み関数として、あるいはユーザー定義関数として定義されているかどうかを返します。"),s("p",null,[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"m"),s("mi",null,"o"),s("mi",null,"d"),s("mi",null,"u"),s("mi",null,"l"),s("mi",null,"e"),s("mtext",null,"が渡された場合、これは、")]),s("annotation",{encoding:"application/x-tex"},"moduleが渡された場合、これは、")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6944em"}}),s("span",{class:"mord mathnormal"},"m"),s("span",{class:"mord mathnormal"},"o"),s("span",{class:"mord mathnormal"},"d"),s("span",{class:"mord mathnormal"},"u"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.01968em"}},"l"),s("span",{class:"mord mathnormal"},"e"),s("span",{class:"mord cjk_fallback"},"が渡された場合、これは、")])])]),i("moduleという名前のモジュールに関数が定義されているかどうかもチェックします。moduleは、現在のファイルの[@use rule][]の名前空間と一致する文字列である必要があります。")]),s("div",{class:"language-scss vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"scss"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"@use"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},' "sass:math"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},";")]),i(`
`),s("span",{class:"line"}),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"@debug"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," meta.function-exists("),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"div"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},", "),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"math"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"); "),s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// true")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"@debug"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," meta.function-exists("),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"scale-color"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"); "),s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// true")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"@debug"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," meta.function-exists("),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"add"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"); "),s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// false")]),i(`
`),s("span",{class:"line"}),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"@function"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," add"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),s("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}},"$num1"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},", "),s("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}},"$num2"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},") {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"  @return"),s("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}}," $num1"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," +"),s("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}}," $num2"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},";")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"@debug"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," meta.function-exists("),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"add"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"); "),s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// true")])])])]),s("hr"),s("div",{class:"language-scss vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"scss"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#22863A","--shiki-dark":"#85E89D"}},"meta"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},".get-function("),s("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}},"$name"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},", "),s("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}},"$css"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": false, "),s("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}},"$module"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": null)")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"get-function"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),s("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}},"$name"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},", "),s("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}},"$css:"),s("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}}," false"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},", "),s("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}},"$module:"),s("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}}," null"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},") "),s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//=> function")])])])]),s("p",null,"$nameという名前の関数を返します。"),s("p",null,[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"m"),s("mi",null,"o"),s("mi",null,"d"),s("mi",null,"u"),s("mi",null,"l"),s("mi",null,"e"),s("mtext",null,"が"),s("mi",null,"N"),s("mi",null,"U"),s("mi",null,"L"),s("mi",null,"L"),s("mtext",null,"の場合、名前空間なしで")]),s("annotation",{encoding:"application/x-tex"},"moduleがNULLの場合、名前空間なしで")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6944em"}}),s("span",{class:"mord mathnormal"},"m"),s("span",{class:"mord mathnormal"},"o"),s("span",{class:"mord mathnormal"},"d"),s("span",{class:"mord mathnormal"},"u"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.01968em"}},"l"),s("span",{class:"mord mathnormal"},"e"),s("span",{class:"mord cjk_fallback"},"が"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.10903em"}},"N"),s("span",{class:"mord mathnormal"},"ULL"),s("span",{class:"mord cjk_fallback"},"の場合、名前空間なしで")])])]),i("nameという名前の関数を返します(グローバル組み込み関数を含む)。そうでない場合は、"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"m"),s("mi",null,"o"),s("mi",null,"d"),s("mi",null,"u"),s("mi",null,"l"),s("mi",null,"e"),s("mtext",null,"は現在のファイル内の"),s("mi",{mathvariant:"normal"},"@"),s("mi",null,"u"),s("mi",null,"s"),s("mi",null,"e"),s("mtext",null,"ルールの名前空間に一致する文字列でなければならず、その場合、これは")]),s("annotation",{encoding:"application/x-tex"},"moduleは現在のファイル内の@useルールの名前空間に一致する文字列でなければならず、その場合、これは")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6944em"}}),s("span",{class:"mord mathnormal"},"m"),s("span",{class:"mord mathnormal"},"o"),s("span",{class:"mord mathnormal"},"d"),s("span",{class:"mord mathnormal"},"u"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.01968em"}},"l"),s("span",{class:"mord mathnormal"},"e"),s("span",{class:"mord cjk_fallback"},"は現在のファイル内の"),s("span",{class:"mord"},"@"),s("span",{class:"mord mathnormal"},"u"),s("span",{class:"mord mathnormal"},"se"),s("span",{class:"mord cjk_fallback"},"ルールの名前空間に一致する文字列でなければならず、その場合、これは")])])]),i("nameという名前のそのモジュール内の関数を返します。")]),s("p",null,[i("デフォルトでは、"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"n"),s("mi",null,"a"),s("mi",null,"m"),s("mi",null,"e"),s("mtext",null,"が"),s("mi",null,"S"),s("mi",null,"a"),s("mi",null,"s"),s("mi",null,"s"),s("mtext",null,"関数を参照していない場合、これはエラーを投げます。しかし、")]),s("annotation",{encoding:"application/x-tex"},"nameがSass関数を参照していない場合、これはエラーを投げます。しかし、")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6833em"}}),s("span",{class:"mord mathnormal"},"nam"),s("span",{class:"mord mathnormal"},"e"),s("span",{class:"mord cjk_fallback"},"が"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.05764em"}},"S"),s("span",{class:"mord mathnormal"},"a"),s("span",{class:"mord mathnormal"},"ss"),s("span",{class:"mord cjk_fallback"},"関数を参照していない場合、これはエラーを投げます。しかし、")])])]),i("cssがtrueの場合、代わりにプレーンなCSS関数を返します。")]),s("p",null,"返された関数は、meta.call() を使って呼び出すことができます。"),s("div",{class:"language-scss vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"scss"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"@use"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},' "sass:list"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},";")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"@use"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},' "sass:meta"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},";")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"@use"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},' "sass:string"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},";")]),i(`
`),s("span",{class:"line"}),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"/// $condition が `true` を返すすべての要素を削除した $list のコピーを返します。")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"@function"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," remove-where"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),s("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}},"$list"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},", "),s("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}},"$condition"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},") {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}},"  $new-list"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": ();")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}},"  $separator"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": "),s("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}},"list"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"."),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"separator"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),s("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}},"$list"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},");")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"  @each"),s("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}}," $element"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," in"),s("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}}," $list"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"    @if"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," not"),s("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}}," meta"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"."),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"call"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),s("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}},"$condition"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},", "),s("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}},"$element"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},") {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}},"      $new-list"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": "),s("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}},"list"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"."),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"append"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),s("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}},"$new-list"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},", "),s("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}},"$element"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},", "),s("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}},"$separator:"),s("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}}," $separator"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},");")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    }")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"  }")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"  @return"),s("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}}," $new-list"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},";")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")]),i(`
`),s("span",{class:"line"}),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}},"$fonts"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": "),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"Tahoma"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},", Geneva, "),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"Helvetica Neue"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},", "),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"Helvetica"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},", "),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"Arial"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},", "),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"sans-serif"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},";")]),i(`
`),s("span",{class:"line"}),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#22863A","--shiki-dark":"#85E89D"}},"content"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"  @function"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," contains-helvetica"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),s("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}},"$string"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},") {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"    @return"),s("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}}," string"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"."),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"index"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),s("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}},"$string"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},", "),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"Helvetica"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},");")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"  }")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"  font-family"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": "),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"remove-where"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),s("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}},"$fonts"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},", "),s("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}},"meta"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"."),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"get-function"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"contains-helvetica"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"));")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")])])])]),s("hr"),s("div",{class:"language-scss vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"scss"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#22863A","--shiki-dark":"#85E89D"}},"meta"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},".global-variable-exists("),s("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}},"$name"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},", "),s("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}},"$module"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": null)")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"global-variable-exists"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),s("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}},"$name"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},", "),s("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}},"$module:"),s("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}}," null"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},") "),s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//=> boolean")])])])]),s("p",null,[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"n"),s("mi",null,"a"),s("mi",null,"m"),s("mi",null,"e"),s("mtext",null,"という名前のグローバル変数が（")]),s("annotation",{encoding:"application/x-tex"},"nameという名前のグローバル変数が（")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6833em"}}),s("span",{class:"mord mathnormal"},"nam"),s("span",{class:"mord mathnormal"},"e"),s("span",{class:"mord cjk_fallback"},"という名前のグローバル変数が（")])])]),i("を除いた）存在するかどうかを返します。")]),s("p",null,[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"m"),s("mi",null,"o"),s("mi",null,"d"),s("mi",null,"u"),s("mi",null,"l"),s("mi",null,"e"),s("mtext",null,"が"),s("mi",null,"N"),s("mi",null,"U"),s("mi",null,"L"),s("mi",null,"L"),s("mtext",null,"の場合、名前空間を持たない")]),s("annotation",{encoding:"application/x-tex"},"moduleがNULLの場合、名前空間を持たない")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6944em"}}),s("span",{class:"mord mathnormal"},"m"),s("span",{class:"mord mathnormal"},"o"),s("span",{class:"mord mathnormal"},"d"),s("span",{class:"mord mathnormal"},"u"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.01968em"}},"l"),s("span",{class:"mord mathnormal"},"e"),s("span",{class:"mord cjk_fallback"},"が"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.10903em"}},"N"),s("span",{class:"mord mathnormal"},"ULL"),s("span",{class:"mord cjk_fallback"},"の場合、名前空間を持たない")])])]),i("nameという変数が存在するかどうかを返します。そうでない場合は、"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"m"),s("mi",null,"o"),s("mi",null,"d"),s("mi",null,"u"),s("mi",null,"l"),s("mi",null,"e"),s("mtext",null,"は現在のファイル内の"),s("mi",{mathvariant:"normal"},"@"),s("mi",null,"u"),s("mi",null,"s"),s("mi",null,"e"),s("mtext",null,"ルールの名前空間に一致する文字列でなければならず、その場合、これはそのモジュールが")]),s("annotation",{encoding:"application/x-tex"},"moduleは現在のファイル内の@useルールの名前空間に一致する文字列でなければならず、その場合、これはそのモジュールが")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6944em"}}),s("span",{class:"mord mathnormal"},"m"),s("span",{class:"mord mathnormal"},"o"),s("span",{class:"mord mathnormal"},"d"),s("span",{class:"mord mathnormal"},"u"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.01968em"}},"l"),s("span",{class:"mord mathnormal"},"e"),s("span",{class:"mord cjk_fallback"},"は現在のファイル内の"),s("span",{class:"mord"},"@"),s("span",{class:"mord mathnormal"},"u"),s("span",{class:"mord mathnormal"},"se"),s("span",{class:"mord cjk_fallback"},"ルールの名前空間に一致する文字列でなければならず、その場合、これはそのモジュールが")])])]),i("nameという名前の変数を持っているかどうかを返します。")]),s("p",null,"meta.variable-exists()も参照してください。"),s("div",{class:"language-scss vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"scss"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"@debug"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," meta.global-variable-exists("),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"var1"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"); "),s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// false")]),i(`
`),s("span",{class:"line"}),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}},"$var1"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": value;")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"@debug"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," meta.global-variable-exists("),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"var1"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"); "),s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// true")]),i(`
`),s("span",{class:"line"}),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#22863A","--shiki-dark":"#85E89D"}},"h1"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"  // $var2 is local.")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}},"  $var2"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": value;")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"  @debug"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," meta.global-variable-exists("),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"var2"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"); "),s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// false")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")])])])]),s("hr"),s("div",{class:"language-scss vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"scss"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#22863A","--shiki-dark":"#85E89D"}},"meta"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},".inspect("),s("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}},"$value"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},")")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"inspect("),s("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}},"$value"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},") "),s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//=> unquoted string")])])])]),s("p",null,"$value の文字列表現を返します。"),s("p",null,"CSS で表現できる値だけでなく、あらゆる Sass 値の表現を返します。そのため、その戻り値は有効なCSSであることは保証されません。"),s("div",{class:"warning custom-block"},[s("p",{class:"custom-block-title"},"WARNING"),s("p",null,"⚠️ Heads up!"),s("p",null,"この関数はデバッグ用です。その出力形式は、Sass のバージョンまたは実装間で一貫していることは保証されません。")])])],-1),Gs=a(`<div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> meta.inspect(10px 20px 30px); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// unquote(&quot;10px 20px 30px&quot;)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> meta.inspect((</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;width&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: 200px)); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// unquote(&#39;(&quot;width&quot;: 200px)&#39;)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> meta.inspect(null); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// unquote(&quot;null&quot;)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> meta.inspect(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Helvetica&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// unquote(&#39;&quot;Helvetica&quot;&#39;)</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">meta</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.keywords(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$args</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">keywords(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$args</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//=&gt; map</span></span></code></pre></div><p>任意の引数を取る mixin や関数に渡されたキーワードを返します。引数$argsは引数リストである必要があります。</p><p>キーワードは、引用符で囲まれていない文字列（$を含まない）としての 引数名から、それらの引数の値へのマップとして返されます。</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-SJNU4" id="tab-84epxmJ" checked><label for="tab-84epxmJ">SCSS</label><input type="radio" name="group-SJNU4" id="tab-nPpsqWz"><label for="tab-nPpsqWz">CSS</label></div><div class="blocks"><div class="language-scss vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@use</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;sass:meta&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@mixin</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> syntax-colors</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$args</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">...) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  @debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> meta.keywords(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$args</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // (string: #080, comment: #800, variable: #60b)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  @each</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> $name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$color</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> in</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> meta</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">keywords</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$args</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    pre</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;"> span</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.stx-</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">#{$name}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@include</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> syntax-colors</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  $string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">#080</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  $comment</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">#800</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  $variable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">#60b</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">pre</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;"> span</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.stx-string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">#080</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">pre</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;"> span</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.stx-comment</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">#800</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">pre</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;"> span</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.stx-variable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">#60b</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></div></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">meta</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.mixin-exists(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$module</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: null)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">mixin-exists</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$module:</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//=&gt; boolean</span></span></code></pre></div><p>$nameという名前のミキシンが存在するかどうかを返します。</p><p>もし $module が null ならば、名前空間を持たない $name という名前の mixin が存在するかどうかを返します。それ以外の場合は、 $module は現在のファイル内の @use ルールの名前空間にマッチする文字列でなければなりません。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> meta.mixin-exists(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;shadow-none&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// false</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@mixin</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> shadow-none</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  box-shadow</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">none</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> meta.mixin-exists(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;shadow-none&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// true</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">meta</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.module-functions(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$module</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//=&gt; map</span></span></code></pre></div><p>互換性:</p><ul><li>Dart Sass: since 1.23.0</li><li>LibSass: ✗</li><li>Ruby Sass: ✗</li><li>▶</li></ul><p>あるモジュールで定義されているすべての関数を、関数名から関数値へのマップとして返します。</p><p>$moduleパラメータは、現在のファイル内の@useルールの名前空間と一致する文字列でなければなりません。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// _functions.scss</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@function</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> pow</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$base</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$exponent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  $result</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  @for</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> $_</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> from</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> through</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> $exponent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">    $result</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$result</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> $base</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  @return</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> $result</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@use</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;sass:map&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@use</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;sass:meta&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@use</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;functions&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> meta.module-functions(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;functions&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// (&quot;pow&quot;: get-function(&quot;pow&quot;))</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> meta.call(map.get(meta.module-functions(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;functions&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;pow&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), 3, 4); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 81</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">meta</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.module-variables(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$module</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//=&gt; map</span></span></code></pre></div><p>互換性:</p><ul><li>Dart Sass: since 1.23.0</li><li>LibSass: ✗</li><li>Ruby Sass: ✗</li><li>▶</li></ul><p>モジュールで定義されたすべての変数を、変数名（$なし）からそれらの変数の値へのマップとして返します。</p><p>$moduleパラメータは、現在のファイルの@useルールの名前空間と一致する文字列でなければなりません。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// _variables.scss</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$hopbush</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">#c69</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$midnight-blue</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">#036</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$wafer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">#e1d7d2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@use</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;sass:meta&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@use</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;variables&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> meta.module-variables(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;variables&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// (</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//   &quot;hopbush&quot;: #c69,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//   &quot;midnight-blue&quot;: #036,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//   &quot;wafer&quot;: #e1d7d2</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// )</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">meta</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.type-of(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$value</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">type-of(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$value</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//=&gt; unquoted string</span></span></code></pre></div><p>$valueの型を返します。</p><p>これは、以下の値を返すことができます。</p><ul><li>number</li><li>string</li><li>color</li><li>list</li><li>map</li><li>calculation</li><li>bool</li><li>null</li><li>function</li><li>arglist</li></ul><p>将来、新しい可能な値が追加されるかもしれない。また、()の場合は、map 関数から返されたものかどうかによって、list か map のどちらかを返すことがある。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> meta.type-of(10px); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// number</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> meta.type-of(10px 20px 30px); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// list</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> meta.type-of(()); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// list</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">meta</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.variable-exists(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">variable-exists(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//=&gt; boolean</span></span></code></pre></div><p>name ($ を含まない) という名前の変数が現在のスコープに存在するかどうかを返します。</p><p>meta.global-variable-exists()も参照ください。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> meta.variable-exists(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;var1&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// false</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$var1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: value;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> meta.variable-exists(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;var1&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// true</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">h1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // $var2 is local.</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  $var2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: value;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  @debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> meta.variable-exists(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;var2&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="sass-selector" tabindex="-1">sass:selector <a class="header-anchor" href="#sass-selector" aria-label="Permalink to &quot;sass:selector&quot;">​</a></h2><p>互換性:</p><ul><li>Dart Sass: since 1.23.0</li><li>LibSass: ✗</li><li>Ruby Sass: ✗</li><li>▶</li></ul><h3 id="selector-values" tabindex="-1">Selector Values <a class="header-anchor" href="#selector-values" aria-label="Permalink to &quot;Selector Values&quot;">​</a></h3><p>このモジュールの関数はセレクタを検査し、操作します。セレクタを返すときはいつも、引用符で囲まれていない文字列（複合セレクタ）を含むスペースで区切られたリスト（複合セレクタ）を含むカンマで区切られたリスト（セレクタリスト）であることが多いです。たとえば、セレクタ .main aside:hover, .sidebar p は、次のように返されます。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ((unquote(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;.main&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) unquote(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;aside:hover&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        (unquote(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;.sidebar&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) unquote(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;p&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)));</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// .main aside:hover, .sidebar p</span></span></code></pre></div><p>これらの関数へのセレクタ引数は、同じ形式であっても、通常の文字列（引用符で囲むか囲まないか）、またはその組み合わせであってもかまいません。例えば、&quot;.main aside:hover, .sidebar p&quot; は有効なセレクタ引数です。</p><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">selector.is-superselector(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$super</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$sub</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">is-superselector(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$super</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$sub</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//=&gt; boolean</span></span></code></pre></div><p>セレクタ $super が、セレクタ $sub がマッチするすべての要素にマッチするかどうかを返します。</p><p>たとえ $super が $sub よりも多くの要素にマッチしたとしても、真を返します。</p><p>$super と $sub セレクタは、プレースホルダセレクタを含むことができますが、 親セレクタを含むことはできません。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> selector.is-superselector(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;a&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;a.disabled&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// true</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> selector.is-superselector(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;a.disabled&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;a&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// false</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> selector.is-superselector(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;a&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;sidebar a&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// true</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> selector.is-superselector(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;sidebar a&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;a&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// false</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> selector.is-superselector(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;a&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;a&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// true</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">selector.append(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$selectors</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">...)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">selector-append(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$selectors</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">...) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//=&gt; selector</span></span></code></pre></div><p>$selectorsを、子孫の組紐を使わずに、つまり空白を使わずに組み合わせます。</p><p>$selectors のセレクタがセレクタリストの場合は、 それぞれのセレクタが個別に結合されます。</p><p>$selectorsにはプレースホルダセレクタを含めることができますが、 親セレクタは含められません。</p><p>selector.nest() も参照ください。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> selector.append(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;a&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;.disabled&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// a.disabled</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> selector.append(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;.accordion&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;__copy&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// .accordion__copy</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> selector.append(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;.accordion&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;__copy, __image&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// .accordion__copy, .accordion__image</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">selector.extend(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$selector</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$extendee</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$extender</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">selector-extend(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$selector</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$extendee</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$extender</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//=&gt; selector</span></span></code></pre></div><p>@extendルールと同様に$selectorを拡張します。</p><p>以下の @extend ルールで変更した $selector のコピーを返します。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">#{$extender}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  @extend</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> #{$extendee}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>言い換えると、$selector に含まれる $extendee のインスタンスをすべて $extendee, $extender に置き換えます。もし $selector が $extendee を含んでいない場合は、そのまま返します。</p>`,63),Ws=s("p",null,[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"s"),s("mi",null,"e"),s("mi",null,"l"),s("mi",null,"e"),s("mi",null,"c"),s("mi",null,"t"),s("mi",null,"o"),s("mi",null,"r"),s("mtext",null,"、")]),s("annotation",{encoding:"application/x-tex"},"selector、")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6944em"}}),s("span",{class:"mord mathnormal"},"se"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.01968em"}},"l"),s("span",{class:"mord mathnormal"},"ec"),s("span",{class:"mord mathnormal"},"t"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"or"),s("span",{class:"mord cjk_fallback"},"、")])])]),i("extendee、$extender セレクタは、プレースホルダセレクタを含むことができますが、親セレクタを含むことはできません。")],-1),zs=a(`<p>selector.replace()も参照ください。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> selector.extend(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;a.disabled&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;a&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;.link&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// a.disabled, .link.disabled</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> selector.extend(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;a.disabled&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;h1&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;h2&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// a.disabled</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> selector.extend(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;.guide .info&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;.info&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;.content nav.sidebar&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// .guide .info, .guide .content nav.sidebar, .content .guide nav.sidebar</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">selector.nest(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$selectors</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">...)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">selector-nest(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$selectors</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">...) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//=&gt; selector</span></span></code></pre></div><p>$selectorsを、スタイルシートの中で互いに入れ子になっているかのように結合します。</p><p>$selectorsは、プレースホルダセレクタを含むことができます。他のセレクタ関数と異なり、最初のセレクタを除くすべてのセレクタは親セレクタを含むことができます。</p><p>selector.append()も参照してください。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> selector.nest(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;ul&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;li&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// ul li</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> selector.nest(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;.alert, .warning&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;p&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// .alert p, .warning p</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> selector.nest(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;.alert&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&amp;:hover&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// .alert:hover</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> selector.nest(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;.accordion&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&amp;__copy&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// .accordion__copy</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">selector.parse(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$selector</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">selector-parse(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$selector</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//=&gt; selector</span></span></code></pre></div><p>セレクタの値のフォーマットで $selector を返します。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> selector.parse(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;.main aside:hover, .sidebar p&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// ((unquote(&quot;.main&quot;) unquote(&quot;aside:hover&quot;)),</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//  (unquote(&quot;.sidebar&quot;) unquote(&quot;p&quot;)))</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">selector.replace(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$selector</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$original</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$replacement</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">selector-replace(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$selector</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$original</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$replacement</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//=&gt; selector</span></span></code></pre></div><p>$original のすべてのインスタンスを $replacement で置き換えた $selector のコピーを返します。</p><p>これは、@extend ルールのインテリジェントな統合機能を使用して、 $replacement が $selector にシームレスに統合されることを確認します。selector が $original を含んでいない場合は、そのまま返します。</p>`,16),Us=s("p",null,[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"s"),s("mi",null,"e"),s("mi",null,"l"),s("mi",null,"e"),s("mi",null,"c"),s("mi",null,"t"),s("mi",null,"o"),s("mi",null,"r"),s("mtext",null,"、")]),s("annotation",{encoding:"application/x-tex"},"selector、")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6944em"}}),s("span",{class:"mord mathnormal"},"se"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.01968em"}},"l"),s("span",{class:"mord mathnormal"},"ec"),s("span",{class:"mord mathnormal"},"t"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"or"),s("span",{class:"mord cjk_fallback"},"、")])])]),i("original および $replacement セレクタはプレースホルダセレクタを含むことができますが、 親セレクタを含むことはできません。")],-1),Qs=a(`<p>selector.extend() も参照ください。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> selector.replace(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;a.disabled&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;a&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;.link&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// .link.disabled</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> selector.replace(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;a.disabled&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;h1&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;h2&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// a.disabled</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> selector.replace(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;.guide .info&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;.info&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;.content nav.sidebar&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// .guide .content nav.sidebar, .content .guide nav.sidebar</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">selector.unify(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$selector1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$selector2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">selector-unify(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$selector1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$selector2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//=&gt; selector | null</span></span></code></pre></div><p>$selector1 と $selector2 の両方にマッチする要素にのみマッチするセレクタを返します。</p><p>$selector1 と $selector2 が同じ要素にマッチしない場合、 あるいはそれらの重複を表すセレクタが存在しない場合は null を返します。</p><p>@extend 規則で生成されるセレクタと同様、返されるセレクタも、 $selector1 と $selector2 がともに複雑なセレクタの場合、 両方の要素にマッチすることは保証されません。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> selector.unify(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;a&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;.disabled&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// a.disabled</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> selector.unify(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;a.disabled&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;a.outgoing&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// a.disabled.outgoing</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> selector.unify(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;a&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;h1&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// null</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> selector.unify(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;.warning a&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;main a&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// .warning main a, main .warning a</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">selector.simple-selectors(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$selector</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">simple-selectors(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$selector</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//=&gt; list</span></span></code></pre></div><p>単純なセレクタの一覧を $selector で返します。</p><p>$selector は、複合セレクタを含む単一の文字列でなければなりません。つまり、コンバイネータ (空白を含む) やカンマを含んではいけないということです。</p><p>返されるリストはカンマ区切りで、単純なセレクタは引用符で囲まれていない文字列となります。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> selector.simple-selectors(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;a.disabled&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// a, .disabled</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> selector.simple-selectors(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;main.blog:after&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// main, .blog, :after</span></span></code></pre></div><h2 id="sass-string" tabindex="-1">sass:string <a class="header-anchor" href="#sass-string" aria-label="Permalink to &quot;sass:string&quot;">​</a></h2><p>互換性:</p><ul><li>Dart Sass: since 1.23.0</li><li>LibSass: ✗</li><li>Ruby Sass: ✗</li><li>▶</li></ul><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">string.quote(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">quote(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//=&gt; string</span></span></code></pre></div><p>引用符で囲まれた文字列として$stringを返します。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> string.quote(Helvetica); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// &quot;Helvetica&quot;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> string.quote(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Helvetica&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// &quot;Helvetica&quot;</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">string.index(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$substring</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">str-index(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$substring</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//=&gt; number</span></span></code></pre></div>`,22),Js=s("p",null,[i("文字列中の "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"s"),s("mi",null,"u"),s("mi",null,"b"),s("mi",null,"s"),s("mi",null,"t"),s("mi",null,"r"),s("mi",null,"i"),s("mi",null,"n"),s("mi",null,"g"),s("mtext",null,"の最初のインデックスを返します。")]),s("annotation",{encoding:"application/x-tex"},"substring の最初のインデックスを返します。")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8889em","vertical-align":"-0.1944em"}}),s("span",{class:"mord mathnormal"},"s"),s("span",{class:"mord mathnormal"},"u"),s("span",{class:"mord mathnormal"},"b"),s("span",{class:"mord mathnormal"},"s"),s("span",{class:"mord mathnormal"},"t"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"r"),s("span",{class:"mord mathnormal"},"in"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"g"),s("span",{class:"mord cjk_fallback"},"の最初のインデックスを返します。")])])]),i("string が $substring を含まない場合は null を返します。")],-1),Ks=a(`<div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> string.index(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Helvetica Neue&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Helvetica&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 1</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> string.index(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Helvetica Neue&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Neue&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 11</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">string.insert(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$insert</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$index</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">str-insert(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$insert</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$index</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//=&gt; string</span></span></code></pre></div>`,3),Os=s("p",null,[i("インデックスに"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"i"),s("mi",null,"n"),s("mi",null,"s"),s("mi",null,"e"),s("mi",null,"r"),s("mi",null,"t"),s("mtext",null,"を挿入した")]),s("annotation",{encoding:"application/x-tex"},"insertを挿入した")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6833em"}}),s("span",{class:"mord mathnormal"},"in"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"ser"),s("span",{class:"mord mathnormal"},"t"),s("span",{class:"mord cjk_fallback"},"を挿入した")])])]),i("stringのコピーを返します。")],-1),Ys=a(`<div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> string.insert(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Roboto Bold&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot; Mono&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, 7); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// &quot;Roboto Mono Bold&quot;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> string.insert(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Roboto Bold&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot; Mono&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, -6); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// &quot;Roboto Mono Bold&quot;</span></span></code></pre></div>`,1),Xs=s("p",null,[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"i"),s("mi",null,"n"),s("mi",null,"d"),s("mi",null,"e"),s("mi",null,"x"),s("mtext",null,"が")]),s("annotation",{encoding:"application/x-tex"},"indexが")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6944em"}}),s("span",{class:"mord mathnormal"},"in"),s("span",{class:"mord mathnormal"},"d"),s("span",{class:"mord mathnormal"},"e"),s("span",{class:"mord mathnormal"},"x"),s("span",{class:"mord cjk_fallback"},"が")])])]),i("stringの長さより大きい場合、"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"i"),s("mi",null,"n"),s("mi",null,"s"),s("mi",null,"e"),s("mi",null,"r"),s("mi",null,"t"),s("mtext",null,"は末尾に追加されます。もし")]),s("annotation",{encoding:"application/x-tex"},"insertは末尾に追加されます。もし")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6833em"}}),s("span",{class:"mord mathnormal"},"in"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"ser"),s("span",{class:"mord mathnormal"},"t"),s("span",{class:"mord cjk_fallback"},"は末尾に追加されます。もし")])])]),i("indexが文字列の負の長さより小さければ、$insertは先頭に追加されます。")],-1),Zs=a(`<div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> string.insert(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Roboto&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot; Bold&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, 100); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// &quot;Roboto Bold&quot;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> string.insert(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Bold&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Roboto &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, -100); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// &quot;Roboto Bold&quot;</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">string.length(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">str-length(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//=&gt; number</span></span></code></pre></div><p>$stringの文字数を返します。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> string.length(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Helvetica Neue&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 14</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> string.length(bold); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 4</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> string.length(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 0</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">string.slice(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$start-at</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$end-at</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">-1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">str-slice</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$start-at</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$end-at:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//=&gt; string</span></span></code></pre></div><p>インデックス $start-at で始まり、インデックス $end-at で終わる (両方を含む) $string のスライスを返します。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> string.slice(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Helvetica Neue&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, 11); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// &quot;Neue&quot;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> string.slice(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Helvetica Neue&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, 1, 3); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// &quot;Hel&quot;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> string.slice(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Helvetica Neue&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, 1, -6); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// &quot;Helvetica&quot;</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">string.to-upper-case(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">to-upper-case(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//=&gt; string</span></span></code></pre></div><p>ASCII文字を大文字に変換した$stringのコピーを返します。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> string.to-upper-case(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Bold&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// &quot;BOLD&quot;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> string.to-upper-case(sans-serif); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// SANS-SERIF</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">string.to-lower-case(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">to-lower-case(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//=&gt; string</span></span></code></pre></div><p>ASCII文字を小文字に変換した$stringのコピーを返します。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> string.to-lower-case(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Bold&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// &quot;bold&quot;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> string.to-lower-case(SANS-SERIF); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// sans-serif</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">string.unique-id()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">unique-id() </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//=&gt; string</span></span></code></pre></div><p>有効な CSS 識別子であり、現在の Sass コンパイル内で一意であることが保証されている、ランダムに生成される引用符なしの文字列を返します。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> string.unique-id(); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// uabtrnzug</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> string.unique-id(); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// u6w1b1def</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">string.unquote(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">unquote(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//=&gt; string</span></span></code></pre></div><p>$stringを引用符で囲まれていない文字列として返します。これは、有効なCSSでない文字列を生成する可能性があるので、注意して使用してください。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> string.unquote(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Helvetica&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Helvetica</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> string.unquote(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;.widget:hover&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// .widget:hover</span></span></code></pre></div>`,25),si=[p,e,k,r,d,E,g,c,o,m,u,y,F,b,A,v,D,C,x,B,_,$,q,w,f,S,T,M,L,j,R,I,N,P,H,V,G,W,z,U,Q,J,K,O,Y,X,Z,ss,is,as,ls,ns,ts,hs,ps,es,ks,rs,ds,Es,gs,cs,os,ms,us,ys,Fs,bs,As,vs,Ds,Cs,xs,Bs,_s,$s,qs,ws,fs,Ss,Ts,Ms,Ls,js,Rs,Is,Ns,Ps,Hs,Vs,Gs,Ws,zs,Us,Qs,Js,Ks,Os,Ys,Xs,Zs];function ii(ai,li,ni,ti,hi,pi){return t(),n("div",null,si)}const ri=l(h,[["render",ii]]);export{ki as __pageData,ri as default};
