import{_ as e,c as a,o as t,a as i}from"./app.e18c80f2.js";const k=JSON.parse('{"title":"ビルドのためのDuktapeを設定する","description":"","frontmatter":{},"headers":[{"level":2,"title":"Duktape 2.x","slug":"duktape-2-x","link":"#duktape-2-x","children":[]},{"level":2,"title":"Duktape 1.x","slug":"duktape-1-x","link":"#duktape-1-x","children":[]},{"level":2,"title":"特定の環境のためのオプション","slug":"特定の環境のためのオプション","link":"#特定の環境のためのオプション","children":[{"level":3,"title":"タイミングを考慮する","slug":"タイミングを考慮する","link":"#タイミングを考慮する","children":[]},{"level":3,"title":"メモリ制約あり","slug":"メモリ制約あり","link":"#メモリ制約あり","children":[]},{"level":3,"title":"パフォーマンスを重視する","slug":"パフォーマンスを重視する","link":"#パフォーマンスを重視する","children":[]}]}],"relativePath":"translation/duktape/wiki/congifuring_duktape_for_build.md","lastUpdated":1676126774000}'),l={name:"translation/duktape/wiki/congifuring_duktape_for_build.md"},r=i('<h1 id="ビルドのためのduktapeを設定する" tabindex="-1">ビルドのためのDuktapeを設定する <a class="header-anchor" href="#ビルドのためのduktapeを設定する" aria-hidden="true">#</a></h1><h2 id="duktape-2-x" tabindex="-1">Duktape 2.x <a class="header-anchor" href="#duktape-2-x" aria-hidden="true">#</a></h2><p>Duktape 2.xのビルドのための設定」を参照してください。</p><h2 id="duktape-1-x" tabindex="-1">Duktape 1.x <a class="header-anchor" href="#duktape-1-x" aria-hidden="true">#</a></h2><p>Duktape 1.xのビルドのための設定を参照してください。</p><h2 id="特定の環境のためのオプション" tabindex="-1">特定の環境のためのオプション <a class="header-anchor" href="#特定の環境のためのオプション" aria-hidden="true">#</a></h2><h3 id="タイミングを考慮する" tabindex="-1">タイミングを考慮する <a class="header-anchor" href="#タイミングを考慮する" aria-hidden="true">#</a></h3><p>タイミングを重視するアプリケーションには、例えばゲームなどがあります。このような環境では、安定した予測可能なパフォーマンスが重要であり、絶対的なパフォーマンスよりも重要であることがよくあります。例えば、自動マーク＆スイープを無効にして、ガベージコレクションを参照カウントと手動マーク＆スイープに依存することができます。</p><p>参照してください。</p><ul><li>タイミングセンシティブ(timing-sensitive).rst</li><li>タイミング_センシティブ.yaml</li></ul><h3 id="メモリ制約あり" tabindex="-1">メモリ制約あり <a class="header-anchor" href="#メモリ制約あり" aria-hidden="true">#</a></h3><p>Duktapeは192kBのフラッシュ・メモリ（コードのフットプリント）と64kBのシステムRAM（Duktapeと最小限のOSを含む）で動作し、メモリのフットプリントを最小限にするために多くの機能オプションを提供しています。これらの機能オプションは、256kB以下のシステムRAMを持つシステムでしばしば有用です。</p><p>ご覧ください。</p><ul><li>low-memory.rst</li><li>low_memory.yaml</li><li>low_memory_strip.yaml。</li></ul><h3 id="パフォーマンスを重視する" tabindex="-1">パフォーマンスを重視する <a class="header-anchor" href="#パフォーマンスを重視する" aria-hidden="true">#</a></h3><p>Duktapeのデフォルトビルドは、ほとんどの環境に対して妥当なパフォーマンス・オプションを備えています。それでも、例えば高速パスを有効にしたり、&quot;fastint &quot;サポートを有効にしたり、APIの安全性を性能と交換したりすることで、性能を向上させることができる機能オプションがいくつかあります。</p><p>参照してください。</p><ul><li>パフォーマンスセンシティブ.rst</li><li>パフォーマンスセンシティブ.yaml</li></ul>',18),d=[r];function n(u,p,h,s,o,c){return t(),a("div",null,d)}const x=e(l,[["render",n]]);export{k as __pageData,x as default};
