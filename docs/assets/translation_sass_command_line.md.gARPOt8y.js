import{_ as s,o as i,c as a,R as n}from"./chunks/framework.c2IVng1e.js";const o=JSON.parse('{"title":"コマンドライン","description":"","frontmatter":{},"headers":[],"relativePath":"translation/sass/command_line.md","filePath":"translation/sass/command_line.md","lastUpdated":1676974355000}'),h={name:"translation/sass/command_line.md"},l=n(`<h1 id="コマンドライン" tabindex="-1">コマンドライン <a class="header-anchor" href="#コマンドライン" aria-label="Permalink to &quot;コマンドライン&quot;">​</a></h1><nav class="table-of-contents"><ul><li><a href="#概要">概要</a></li><li><a href="#dart-sass">Dart Sass</a><ul><li><a href="#使用方法">使用方法</a></li><li><a href="#オプション">オプション</a></li></ul></li><li><a href="#ruby-sass">Ruby Sass</a><ul><li><a href="#usage">Usage</a></li><li><a href="#オプション-1">オプション</a></li></ul></li><li><a href="#migrator">Migrator</a><ul><li><a href="#使用方法-1">使用方法</a></li><li><a href="#インストール">インストール</a></li><li><a href="#グローバルオプション">グローバルオプション</a></li><li><a href="#migrations">Migrations</a></li></ul></li></ul></nav><h2 id="概要" tabindex="-1">概要 <a class="header-anchor" href="#概要" aria-label="Permalink to &quot;概要&quot;">​</a></h2><p>Sass の異なる実装は、コマンドラインからそれらを使用するときに異なるインターフェイスを持っています。</p><ul><li>Dart Sass はどのようにインストールしても同じコマンドラインインターフェースを持っています。</li><li>Ruby Sass は非推奨であり、他の実装に移行することを推奨します。</li></ul><h2 id="dart-sass" tabindex="-1">Dart Sass <a class="header-anchor" href="#dart-sass" aria-label="Permalink to &quot;Dart Sass&quot;">​</a></h2><h3 id="使用方法" tabindex="-1">使用方法 <a class="header-anchor" href="#使用方法" aria-label="Permalink to &quot;使用方法&quot;">​</a></h3><p>Dart Sass 実行ファイルは、2 つのモードのいずれかで呼び出すことができます。</p><h4 id="一対一モード" tabindex="-1">一対一モード <a class="header-anchor" href="#一対一モード" aria-label="Permalink to &quot;一対一モード&quot;">​</a></h4><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sass</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">input.scs</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">s</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [output.css]</span></span></code></pre></div><p>One-to-one モードは、一つの入力ファイル (input.scss) を一つの出力場所 (output.css) にコンパイルします。出力先が指定されない場合、コンパイルされたCSSは端末に出力されます。</p><p>入力ファイルは、拡張子が .scss の場合は SCSS として、拡張子が .sass の場合は字下げ構文として、拡張子が .css の場合はプレーンな CSS としてパースされます。拡張子が .scss でない場合、あるいは標準入力から入力された場合は、デフォルトで SCSS としてパースされます。これは --indented フラグで制御することができます。</p><p>入力ファイルの代わりに特殊文字列 - を渡すと、標準入力から入力ファイルを読み込むように Sass に指示することができます。Sass は、--indented フラグが渡されない限り、デフォルトで SCSS として解析されます。</p><h4 id="多対多モード" tabindex="-1">多対多モード <a class="header-anchor" href="#多対多モード" aria-label="Permalink to &quot;多対多モード&quot;">​</a></h4><p>互換性:</p><ul><li>Dart Sass: since 1.4.0</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sass</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [&lt;input.scss&gt;:&lt;output.css&gt;] [</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">input/</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">output/</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]...</span></span></code></pre></div><p>多対多モードは、1つまたは複数の入力ファイルを1つまたは複数の出力ファイルにコンパイルします。入力と出力はコロンで区切られます。また、あるディレクトリにあるすべての Sass ファイルを、別のディレクトリにある同じ名前の CSS ファイルにコンパイルすることもできます。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">​#</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Compiles</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> style.scss</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> to</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> style.css.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sass</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> style.scss:style.css</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">​#</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Compiles</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> light.scss</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> and</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dark.scss</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> to</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> light.css</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> and</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dark.css.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sass</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> light.scss:light.css</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dark.scss:dark.css</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">​#</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Compiles</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> all</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Sass</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> files</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> in</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> themes/</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> to</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> CSS</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> files</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> in</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> public/css/.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sass</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> themes:public/css</span></span></code></pre></div><p>ディレクトリ全体をコンパイルするとき、Sass は _ で始まる名前の部分ファイルを無視します。不要な出力ファイルを大量に作成することなく、スタイルシートを分離するために部分ファイルを使用することができます。</p><h3 id="オプション" tabindex="-1">オプション <a class="header-anchor" href="#オプション" aria-label="Permalink to &quot;オプション&quot;">​</a></h3><p>入出力パーマリンク入出力</p><p>これらのオプションは、Sass が入力ファイルをロードする方法と出力ファイルを生成する方法を制御します。</p><h4 id="–stdin" tabindex="-1">–stdin <a class="header-anchor" href="#–stdin" aria-label="Permalink to &quot;–stdin&quot;">​</a></h4><p>このフラグは、Sass に入力ファイルを標準入力から読み込むように指示する代替方法です。このフラグが渡された場合、入力ファイルは渡されないかもしれません。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;h1 {font-size: 40px}&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> sass</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --stdin</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> h1.css</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;h1 {font-size: 40px}&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> sass</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --stdin</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">h1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  font-size:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 40</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>多対多のモードでは --stdin フラグは使用できません。</p><h4 id="–indented" tabindex="-1">–indented <a class="header-anchor" href="#–indented" aria-label="Permalink to &quot;–indented&quot;">​</a></h4><p>このフラグは、入力ファイルをインデントされた構文でパースするように Sass に指示します。多対多モードで使用した場合、すべての入力ファイルはインデントされた構文として解析されますが、使用するファイルは通常通り構文が決定されます。その逆、--no-indented を使用すると、すべての入力ファイルを SCSS として解析するように強制することができます。</p><p>入力ファイルが標準入力であり、その構文が自動的に決定されない場合に --indented フラグが有用であることが多い。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> echo</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;h1\\n  font-size: 40px&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> sass</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --indented</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> -</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">h1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  font-size:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 40</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h4 id="–load-path" tabindex="-1">–load-path <a class="header-anchor" href="#–load-path" aria-label="Permalink to &quot;–load-path&quot;">​</a></h4><p>このオプション（短縮形 -I）は、Sass がスタイルシートを探すための追加のロードパスを追加します。これは、複数のロードパスを提供するために複数回渡すことができます。早いロードパスは遅いロードパスより優先されます。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sass</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --load-path=node_modules/bootstrap/dist/css</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> style.scss</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> style.css</span></span></code></pre></div><h4 id="–style" tabindex="-1">–style <a class="header-anchor" href="#–style" aria-label="Permalink to &quot;–style&quot;">​</a></h4><p>このオプション（略称：-s）は、生成されるCSSの出力スタイルを制御します。Dart Sassは2つの出力スタイルをサポートしています。</p><ul><li>expanded (デフォルト) は、各セレクタと宣言をそれ自身の行に記述します。</li><li>compressed は、可能な限り余分な文字を削除し、スタイルシート全体を1行で記述します。</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sass</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --style=expanded</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> style.scss</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">h1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  font-size:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 40</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sass</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --style=compressed</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> style.scss</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">h1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{font-size:40px}</span></span></code></pre></div><h4 id="–no-charset" tabindex="-1">–no-charset <a class="header-anchor" href="#–no-charset" aria-label="Permalink to &quot;–no-charset&quot;">​</a></h4><p>互換性:</p><ul><li>Dart Sass: since 1.19.0</li></ul><p>このフラグは、@charset 宣言または UTF-8 バイトオーダーマークを決して発行しないように Sass に指示します。デフォルト、または --charset が渡された場合、スタイルシートに非 ASCII 文字が含まれていると、Sass は @charset 宣言 (expanded output モード) または byte-order mark (compressed output モード) のいずれかを挿入します。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$ echo &#39;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">h1</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">::before</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">content</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;👭&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}&#39; | sass </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">--no-charset</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">h1</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">::before</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  content</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;👭&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$ echo &#39;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">h1</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">::before</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">content</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;👭&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}&#39; | sass </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">--charset</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@charset</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;UTF-8&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">h1</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">::before</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  content</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;👭&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h4 id="–error-css" tabindex="-1">–error-css <a class="header-anchor" href="#–error-css" aria-label="Permalink to &quot;–error-css&quot;">​</a></h4><p>互換性:</p><ul><li>Dart Sass: since 1.20.0</li></ul><p>このフラグは、コンパイル中にエラーが発生したときに CSS ファイルを出力するかどうかを Sass に指示します。この CSS ファイルはコメントと body::before の content プロパティにエラーを記述し、ターミナルに戻ることなくブラウザでエラーメッセージを確認できるようにします。</p><p>デフォルトでは、（標準出力ではなく）ディスク上の少なくとも1つのファイルにコンパイルしている場合、エラーCSSが有効になります。明示的に --error-css を渡すと、標準出力にコンパイルしているときでも有効になり、 --no-error-css を渡すと、すべての場所で無効になります。無効にした場合、--updateフラグと--watchフラグは、エラーが発生したときに代わりにCSSファイルを削除します。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sass</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --error-css</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> style.scss</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> style.css</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">/*</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Error:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Incompatible</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> units</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> em</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> and</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> px.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> *</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   ,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> *</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $width: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">15</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">px</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> +</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">em</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> *</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">   |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">         ^^^^^^^^^^</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> *</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   &#39;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> *   test.scss 1:9  root stylesheet */</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">body::before {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  font-family: &quot;Source Code Pro&quot;, &quot;SF Mono&quot;, Monaco, Inconsolata, &quot;Fira Mono&quot;,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      &quot;Droid Sans Mono&quot;, monospace, monospace;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  white-space: pre;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  display: block;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  padding: 1em;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  margin-bottom: 1em;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  border-bottom: 2px solid black;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  content: &quot;Error: Incompatible units em and px.\\a   \\2577 \\a 1 \\2502  $width: 15px + 2em;\\a   \\2502          ^^^^^^^^^^\\a   \\2575 \\a   test.scss 1:9  root stylesheet&quot;;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Error: Incompatible units em and px.</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  ╷</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">1 │ $width: 15px + 2em;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  │         ^^^^^^^^^^</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  ╵</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  test.scss 1:9  root stylesheet</span></span></code></pre></div><h4 id="–update" tabindex="-1">–update <a class="header-anchor" href="#–update" aria-label="Permalink to &quot;–update&quot;">​</a></h4><p>互換性:</p><ul><li>Dart Sass: since 1.4.0</li></ul><p>update フラグが渡された場合、Sass は対応する CSS ファイルが生成されたよりも最近に依存関係が変更されたスタイルシートのみをコンパイルします。また、スタイルシートを更新する際にステータス・メッセージを表示します。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sass</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --update</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> themes:public/css</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Compiled</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> themes/light.scss</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> to</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> public/css/light.css.</span></span></code></pre></div><h4 id="source-maps" tabindex="-1">Source Maps <a class="header-anchor" href="#source-maps" aria-label="Permalink to &quot;Source Maps&quot;">​</a></h4><p>互換性:</p><ul><li>Dart Sass: since 1.3.0</li></ul><p>ソースマップは、CSS を消費するブラウザやその他のツールに、その CSS が生成された Sass ファイルとどのように対応しているかを伝えるためのファイルです。これにより、ブラウザで Sass ファイルを確認したり、編集したりすることが可能になります。Chrome と Firefox でソースマップを使用する手順を参照してください。</p><p>Dart Sass はデフォルトで、生成するすべての CSS ファイルに対してソースマップを生成します。</p><h4 id="–no-source-map" tabindex="-1">–no-source-map <a class="header-anchor" href="#–no-source-map" aria-label="Permalink to &quot;–no-source-map&quot;">​</a></h4><p>no-source-map フラグが渡された場合、Sass はソースマップを生成しません。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sass</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --no-source-map</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> style.scss</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> style.css</span></span></code></pre></div><h4 id="–source-map-urls" tabindex="-1">–source-map-urls <a class="header-anchor" href="#–source-map-urls" aria-label="Permalink to &quot;–source-map-urls&quot;">​</a></h4><p>このオプションは、Sass が生成するソースマップが、生成された CSS に貢献した Sass ファイルにリンクバックする方法を制御します。Dart Sass は 2 種類の URL をサポートしています。</p><ul><li>relative（デフォルト）は、ソースマップファイルの位置から Sass ソースファイルの位置への相対 URL を使用します。</li><li>absolute は、絶対的なファイルを使用します。Sass ソースファイルの URL を使用します。絶対 URL は、CSS がコンパイルされたのと同じコンピュータ上でのみ動作することに注意してください。</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">​#</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Generates</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> a</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> URL</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> like</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;../sass/style.scss&quot;.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sass</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --source-map-urls=relative</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sass/style.scss</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> css/style.css</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">​#</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Generates</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> a</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> URL</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> like</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;file:///home/style-wiz/sassy-app/sass/style.scss&quot;.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sass</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --source-map-urls=absolute</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sass/style.scss</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> css/style.css</span></span></code></pre></div><h4 id="–embed-sources" tabindex="-1">–embed-sources <a class="header-anchor" href="#–embed-sources" aria-label="Permalink to &quot;–embed-sources&quot;">​</a></h4><p>このフラグは、生成された CSS に貢献した Sass ファイルのコンテンツ全体をソースマップに埋め込むように Sass に指示します。これにより、非常に大きなソースマップが生成される可能性がありますが、CSS がどのように提供されるかに関係なく、どのコンピュータでもソースが利用できるようになることが保証されます。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sass</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --embed-sources</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sass/style.scss</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> css.style.css</span></span></code></pre></div><h4 id="–embed-source-map" tabindex="-1">–embed-source-map <a class="header-anchor" href="#–embed-source-map" aria-label="Permalink to &quot;–embed-source-map&quot;">​</a></h4><p>このフラグは、別個のファイルを作成してCSSからリンクするのではなく、生成されたCSSにソースマップファイルの内容を埋め込むようにSassに指示します。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sass</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --embed-source-map</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sass/style.scss</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> css.style.css</span></span></code></pre></div><h4 id="その他のオプション" tabindex="-1">その他のオプション <a class="header-anchor" href="#その他のオプション" aria-label="Permalink to &quot;その他のオプション&quot;">​</a></h4><h4 id="–watch" tabindex="-1">–watch <a class="header-anchor" href="#–watch" aria-label="Permalink to &quot;–watch&quot;">​</a></h4><p>互換性:</p><ul><li>Dart Sass: since 1.6.0</li></ul><p>このフラグ（短縮形 -w）は --update フラグのように動作しますが、最初のコンパイルが完了した後、Sass はオープンな状態を維持し、スタイルシートやその依存関係が変更されるたびにコンパイルを続行します。</p><p>Sassは、コマンドラインでそのまま渡したディレクトリ、コマンドラインで渡したファイル名の親ディレクトリ、およびロードパスのみを監視します。ファイルの @import/@use/@forward 規則に基づく追加のディレクトリは監視しません。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sass</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --watch</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> themes:public/css</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Compiled</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> themes/light.scss</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> to</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> public/css/light.css.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">​#</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Then</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> when</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> you</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> edit</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> themes/dark.scss...</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Compiled</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> themes/dark.scss</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> to</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> public/css/dark.css.</span></span></code></pre></div><h4 id="–poll" tabindex="-1">–poll <a class="header-anchor" href="#–poll" aria-label="Permalink to &quot;–poll&quot;">​</a></h4><p>互換性:</p><ul><li>Dart Sass: since 1.8.0</li></ul><p>このフラグは --watch と一緒に渡すことで、Sass にソースファイルの変更をオペレーティングシステムからの通知に頼らず、手動で頻繁に確認するように指示します。これは、オペレーティングシステムの通知システムが機能しないリモートドライブで Sass を編集している場合に必要な場合があります。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sass</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --watch</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --poll</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> themes:public/css</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Compiled</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> themes/light.scss</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> to</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> public/css/light.css.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">​#</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Then</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> when</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> you</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> edit</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> themes/dark.scss...</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Compiled</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> themes/dark.scss</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> to</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> public/css/dark.css.</span></span></code></pre></div><h4 id="–stop-on-error" tabindex="-1">–stop-on-error <a class="header-anchor" href="#–stop-on-error" aria-label="Permalink to &quot;–stop-on-error&quot;">​</a></h4><p>互換性:</p><ul><li>Dart Sass: since 1.8.0</li></ul><p>このフラグは、エラーが検出されたときに、エラーを含まない他の Sass ファイルのコンパイルを試みるのではなく、直ちにコンパイルを停止するように Sass に指示します。これは主に多対多モードで有用です。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sass</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --stop-on-error</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> themes:public/css</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Error:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Expected</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> expression.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">   ╷</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">42</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> │</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> h1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> {font-face:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> }</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">   │</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                ^</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">   ╵</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  themes/light.scss</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 42</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">:16</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  root</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> stylesheet</span></span></code></pre></div><h4 id="–interactive" tabindex="-1">–interactive <a class="header-anchor" href="#–interactive" aria-label="Permalink to &quot;–interactive&quot;">​</a></h4><p>互換性:</p><ul><li>Dart Sass: since 1.5.0</li></ul><p>このフラグ (略称 -i) は、SassScript 式を記述してその結果を確認できるインタラクティブ モードで実行するように Sass に指示します。インタラクティブモードは、変数と @use ルールもサポートしています。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$ sass </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">--interactive</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&gt; 1px + 1in</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">97px</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&gt; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@use</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;sass:map&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&gt; $</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">map</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: (</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;width&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;height&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">70</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;width&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;height&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">70</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&gt; </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">map</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$map</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;width&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">100px</span></span></code></pre></div><h4 id="–color" tabindex="-1">–color <a class="header-anchor" href="#–color" aria-label="Permalink to &quot;–color&quot;">​</a></h4><p>このフラグ (短縮形 -c) は Sass にターミナルの色を表示するように指示し、その逆の --no-color は色を表示しないように指示します。デフォルトでは、色をサポートするターミナル上で実行されているように見える場合、色を表示します。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$ sass </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">--color</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;"> style</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.scss</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;"> style</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.css</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Error: Incompatible units </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">em</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> and px.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ╷</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">1 │ </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$width</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">15</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> +</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">em</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  │         ^^^^^^^^^^</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ╵</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  style</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.scss </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">9</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  root stylesheet</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$ sass </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">--no-color</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> style</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.scss </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">style</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.css</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Error: Incompatible units em and px.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ╷</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> │ </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$width</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">15</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> +</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">em</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  │         ^^^^^^^^^^</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ╵</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  style</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.scss </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">9</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  root stylesheet</span></span></code></pre></div><h4 id="–no-unicode" tabindex="-1">–no-unicode <a class="header-anchor" href="#–no-unicode" aria-label="Permalink to &quot;–no-unicode&quot;">​</a></h4><p>互換性:</p><ul><li>Dart Sass: since 1.17.0</li></ul><p>このフラグは、エラーメッセージの一部として ASCII 文字のみを端末に出力するよう Sass に指示します。デフォルト、または --unicode が渡された場合、Sass はこれらのメッセージのために非 ASCII 文字を出力します。このフラグは CSS 出力には影響を与えません。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$ sass </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">--no-unicode</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;"> style</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.scss</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;"> style</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.css</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Error: Incompatible units </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">em</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> and px.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">1 | </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$width</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">15</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> +</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">em</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  |         ^^^^^^^^^^</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  test</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.scss</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 1:9  root stylesheet</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$ sass </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">--unicode</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;"> style</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.scss</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;"> style</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.css</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Error: Incompatible units </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">em</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> and px.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ╷</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">1 │ </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$width</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">15</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> +</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">em</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  │         ^^^^^^^^^^</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ╵</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  test</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.scss</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 1:9  root stylesheet</span></span></code></pre></div><h4 id="–quiet" tabindex="-1">–quiet <a class="header-anchor" href="#–quiet" aria-label="Permalink to &quot;–quiet&quot;">​</a></h4><p>このフラグ（短縮形 -q）は、コンパイル時に警告を出さないように Sass に指示します。デフォルトでは、Sass は非推奨の機能が使用されたとき、または @warn ルールに遭遇したときに警告を出します。また、@debug ルールも無効になります。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sass</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --quiet</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> style.scss</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> style.css</span></span></code></pre></div><h4 id="–quiet-deps" tabindex="-1">–quiet-deps <a class="header-anchor" href="#–quiet-deps" aria-label="Permalink to &quot;–quiet-deps&quot;">​</a></h4><p>このフラグは、依存関係から来る非推奨の警告を発しないように Sass に指示します。ロードパスを通して過渡的にインポートされるすべてのファイルを「依存関係」と見なします。このフラグは @warn ルールや @debug ルールには影響を与えません。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sass</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --load-path=node_modules</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --quiet-deps</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> style.scss</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> style.css</span></span></code></pre></div><h4 id="–trace" tabindex="-1">–trace <a class="header-anchor" href="#–trace" aria-label="Permalink to &quot;–trace&quot;">​</a></h4><p>このフラグは、エラーが発生したときに、Dart または JavaScript の完全なスタックトレースを表示するように Sass に指示します。これは、Sass チームがエラーのデバッグを行う際に使用します。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$ sass </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">--trace</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;"> style</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.scss</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;"> style</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.css</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Error: Expected expression.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   ╷</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">42 │ </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">h1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">font-face</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   │                ^</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   ╵</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  themes/light</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.scss</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 42:16  root stylesheet</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">package:sass/src/visitor/evaluate</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.dart</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 1846:7                        _EvaluateVisitor</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">._addExceptionSpan</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">package:sass/src/visitor/evaluate</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.dart</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 1128:12                       _EvaluateVisitor</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.visitBinaryOperationExpression</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">package:sass/src/ast/sass/expression/binary_operation</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.dart</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 39:15     BinaryOperationExpression</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.accept</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">package:sass/src/visitor/evaluate</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.dart</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 1097:25                       _EvaluateVisitor</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.visitVariableDeclaration</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">package:sass/src/ast/sass/statement/variable_declaration</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.dart</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 50:15  VariableDeclaration</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.accept</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">package:sass/src/visitor/evaluate</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.dart</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 335:13                        _EvaluateVisitor</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.visitStylesheet</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">package:sass/src/visitor/evaluate</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.dart</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 323:5                         _EvaluateVisitor</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.run</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">package:sass/src/visitor/evaluate</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.dart</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 81:10                         evaluate</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">package:sass/src/executable/compile_stylesheet</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.dart</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 59:9             compileStylesheet</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">package:sass/src/executable</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.dart</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 62:15                               </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">main</span></span></code></pre></div><h4 id="–help" tabindex="-1">–help <a class="header-anchor" href="#–help" aria-label="Permalink to &quot;–help&quot;">​</a></h4><p>このフラグ(短縮形 -h)は、このドキュメントの要約を表示します。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$ sass </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">--help</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Compile Sass to CSS.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Usage: sass &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">input</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.scss</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; [</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">output</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.css]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">       sass &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">input</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.scss</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;:&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">output</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.css</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; &lt;input/&gt;:&lt;output/&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">...</span></span></code></pre></div><h4 id="–version" tabindex="-1">–version <a class="header-anchor" href="#–version" aria-label="Permalink to &quot;–version&quot;">​</a></h4><p>このフラグは、Sass の現在のバージョンを表示します。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$ sass </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">--version</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">1</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.58.3</span></span></code></pre></div><h2 id="ruby-sass" tabindex="-1">Ruby Sass <a class="header-anchor" href="#ruby-sass" aria-label="Permalink to &quot;Ruby Sass&quot;">​</a></h2><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>⚠️ Heads up!</p><p>Ruby Sassは寿命が尽き、現在は全くメンテナンスされていません。Dart Sass または LibSass に切り替えてください。</p></div><h3 id="usage" tabindex="-1">Usage <a class="header-anchor" href="#usage" aria-label="Permalink to &quot;Usage&quot;">​</a></h3><p>Ruby Sassの実行ファイルは、2つのモードのいずれかで呼び出すことができます。</p><h4 id="one-to-oneモード" tabindex="-1">One-to-Oneモード <a class="header-anchor" href="#one-to-oneモード" aria-label="Permalink to &quot;One-to-Oneモード&quot;">​</a></h4><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sass</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [input.scss] [output.css]</span></span></code></pre></div><p>One-to-one モードは、一つの入力ファイル (input.scss) を一つの出力場所 (output.css) にコンパイルします。出力場所が渡されない場合、コンパイルされたCSSは端末に出力されます。入力も出力も渡されない場合、CSS は標準入力から読み込まれ、端末に出力されます。</p><p>入力ファイルは、拡張子が .scss の場合は SCSS として、拡張子が .sass の場合はインデントされた構文として解析されます。拡張子が .scss でない場合、あるいは標準入力から読み込まれた場合は、デフォルトでインデントされた構文として解析されます。これは、-scss フラグで制御することができます。</p><h4 id="多対多モード-1" tabindex="-1">多対多モード <a class="header-anchor" href="#多対多モード-1" aria-label="Permalink to &quot;多対多モード&quot;">​</a></h4><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sass</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [&lt;input.css&gt;:&lt;output.css&gt;] [</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">input/</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">output/</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] [input.css] [input/]...</span></span></code></pre></div><p>多対多モードは、1つまたは複数の入力ファイルを1つまたは複数の出力ファイルにコンパイルします。入力と出力はコロンで区切られます。また、ディレクトリ内のすべての Sass ファイルを、別のディレクトリにある同じ名前の CSS ファイルにコンパイルすることもできます。多対多モードは、いずれかの引数にコロンが含まれている場合、または --update フラグや --watch フラグが渡された場合に有効になります。</p><p>入力ファイルが対応する出力ファイルなしで渡された場合、入力ファイルと同じ名前の CSS ファイルにコンパイルされますが、拡張子は .css に置き換えられます。入力ディレクトリが対応する出力ディレクトリなしで渡された場合、その中のすべての Sass ファイルは同じディレクトリの CSS ファイルにコンパイルされます。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$ sass </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">style</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.scss</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:style</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.css</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      write </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">style</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.css</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      write </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">style</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.css.map</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$ sass light</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.scss</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:light</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.css</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> dark</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.scss</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:dark</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.css</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      write light</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.css</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      write light</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.css.map</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      write dark</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.css</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      write dark</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.css.map</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$ sass themes:public/css</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      write public/css/light</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.css</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      write public/css/light</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.css.map</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      write public/css/dark</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.css</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      write public/css/dark</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.css.map</span></span></code></pre></div><p>ディレクトリ全体をコンパイルするとき、Sass は _ で始まる名前の部分ファイルを無視します。不必要な出力ファイルを大量に作成することなく、スタイルシートを分離するために部分ファイルを使用することができます。</p><p>多対多モードでは、対応する CSS ファイルが生成されたよりも最近に依存関係が変更されたスタイルシートのみをコンパイルします。また、スタイルシートを更新する際にステータスメッセージを表示する。</p><h3 id="オプション-1" tabindex="-1">オプション <a class="header-anchor" href="#オプション-1" aria-label="Permalink to &quot;オプション&quot;">​</a></h3><h4 id="共通" tabindex="-1">共通 <a class="header-anchor" href="#共通" aria-label="Permalink to &quot;共通&quot;">​</a></h4><h5 id="–load-path-1" tabindex="-1">–load-path <a class="header-anchor" href="#–load-path-1" aria-label="Permalink to &quot;–load-path&quot;">​</a></h5><p>このオプション（短縮形 -I）は、Sass がスタイルシートを探すための追加のロードパスを追加します。これは、複数のロードパスを提供するために複数回渡すことができます。早いロードパスは遅いロードパスより優先されます。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sass</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --load-path=node_modules/bootstrap/dist/css</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> style.scss</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> style.css</span></span></code></pre></div><p>ロードパスは、SASS_PATH環境変数が設定されている場合、その変数からも読み込まれます。この変数は ; (Windows) または : (その他のオペレーティングシステム) で区切られたパスのリストである必要があります。SASS_PATH にあるロードパスは、コマンドラインで渡されたロードパスより優先されます。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> SASS_PATH=node_modules/bootstrap/dist/css</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sass</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> style.scss</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> style.css</span></span></code></pre></div><h5 id="–require" tabindex="-1">–require <a class="header-anchor" href="#–require" aria-label="Permalink to &quot;–require&quot;">​</a></h5><p>このオプション（略称：-r）は、Sassを実行する前にRuby gemをロードします。Ruby で定義された関数を Sass 環境にロードするために使用できます。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sass</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --require=rails-sass-images</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> style.scss</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> style.css</span></span></code></pre></div><h6 id="–compass" tabindex="-1">–compass <a class="header-anchor" href="#–compass" aria-label="Permalink to &quot;–compass&quot;">​</a></h6><p>このフラグは、Compassフレームワークをロードし、そのミキシンと関数をSassで使用できるようにします。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sass</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --compass</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> style.scss</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> style.css</span></span></code></pre></div><h6 id="–style-1" tabindex="-1">–style <a class="header-anchor" href="#–style-1" aria-label="Permalink to &quot;–style&quot;">​</a></h6><p>このオプション (略称 -t) は、生成される CSS の出力スタイルを制御します。Ruby Sassは4つの出力スタイルをサポートしています。</p><ul><li>nested (デフォルト) は、Sass ソースの入れ子に一致するように CSS 規則をインデントします。</li><li>expanded は、各セレクタと宣言をそれぞれの行に記述します。</li><li>compact は、各 CSS ルールを 1 行にまとめます。</li><li>compressed は、余分な文字を可能な限り削除し、スタイルシート全体を1行で記述します。</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sass</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --style=nested</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">h1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  font-size:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 40</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; }</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  h1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> code</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    font-face:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Roboto</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Mono</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sass</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --style=expanded</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> style.scss</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">h1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  font-size:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 40</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">h1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> code</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  font-face:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Roboto</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Mono</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sass</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --style=compact</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> style.scss</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">h1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> {</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> font-size:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 40</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; }</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">h1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> code</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> {</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> font-face:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Roboto</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Mono</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sass</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --style=compressed</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> style.scss</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">h1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{font-size:40px}</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">h1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> code{font-face:Roboto</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Mono}</span></span></code></pre></div><h5 id="–help-1" tabindex="-1">–help <a class="header-anchor" href="#–help-1" aria-label="Permalink to &quot;–help&quot;">​</a></h5><p>このフラグ(短縮形は-hと-?)は、このドキュメントの要約を表示します。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sass</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --help</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Usage:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sass</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [options] [INPUT] [OUTPUT]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Description:</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  Converts</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> SCSS</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> or</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Sass</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> files</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> to</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> CSS.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">...</span></span></code></pre></div><h5 id="–version-1" tabindex="-1">–version <a class="header-anchor" href="#–version-1" aria-label="Permalink to &quot;–version&quot;">​</a></h5><p>このフラグは、Sass の現在のバージョンを表示します。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sass</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --version</span></span></code></pre></div><h4 id="watching-and-updating" tabindex="-1">Watching and Updating <a class="header-anchor" href="#watching-and-updating" aria-label="Permalink to &quot;Watching and Updating&quot;">​</a></h4><p>これらのオプションは多対多モードに影響します。</p><h5 id="–watch-1" tabindex="-1">–watch <a class="header-anchor" href="#–watch-1" aria-label="Permalink to &quot;–watch&quot;">​</a></h5><p>多対多モードを有効にし、スタイルシートやその依存関係が変更されるたびに、Sass を開いたままにしてコンパイルを続行します。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sass</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --watch</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> themes:public/css</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      write</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> public/css/light.css</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      write</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> public/css/light.css.map</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">​#</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Then</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> when</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> you</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> edit</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> themes/dark.scss...</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      write</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> public/css/dark.css</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      write</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> public/css/dark.css.map</span></span></code></pre></div><h6 id="–poll-1" tabindex="-1">–poll <a class="header-anchor" href="#–poll-1" aria-label="Permalink to &quot;–poll&quot;">​</a></h6><p>このフラグは --watch と一緒に渡すことで、Sass にソースファイルの変更をオペレーティングシステムからの通知に頼らず、手動で頻繁に確認するように指示します。これは、オペレーティングシステムの通知システムが機能しないリモートドライブで Sass を編集している場合に必要な場合があります。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sass</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --watch</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --poll</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> themes:public/css</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      write</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> public/css/light.css</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      write</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> public/css/light.css.map</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">​#</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Then</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> when</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> you</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> edit</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> themes/dark.scss...</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      write</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> public/css/dark.css</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      write</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> public/css/dark.css.map</span></span></code></pre></div><h5 id="–update-1" tabindex="-1">–update <a class="header-anchor" href="#–update-1" aria-label="Permalink to &quot;–update&quot;">​</a></h5><p>このフラグは、引数がコロンで区切られたペアでない場合でも、多対多のモードを有効にします。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sass</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --update</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> style.scss</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      write</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> style.css</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      write</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> style.css.map</span></span></code></pre></div><h5 id="–force" tabindex="-1">–force <a class="header-anchor" href="#–force" aria-label="Permalink to &quot;–force&quot;">​</a></h5><p>このフラグ (短縮形 -f) は多対多モードでのみ渡すことができます。このフラグを指定すると、ソースファイルが出力ファイルよりも最新である場合にのみコンパイルされるのではなく、Sass ファイルが常に CSS ファイルにコンパイルされるようになります。</p><p>--force フラグは --watch フラグと一緒に渡すことはできません。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sass</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --force</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> style.scss:style.css</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      write</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> style.css</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      write</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> style.css.map</span></span></code></pre></div><h5 id="–stop-on-error-1" tabindex="-1">–stop-on-error <a class="header-anchor" href="#–stop-on-error-1" aria-label="Permalink to &quot;–stop-on-error&quot;">​</a></h5><p>このフラグは多対多のモードでのみ渡すことができます。エラーが検出された場合、エラーが含まれていない他の Sass ファイルのコンパイルを試みるのではなく、直ちにコンパイルを停止するように Sass に指示します。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sass</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --stop-on-error</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> themes:public/css</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Error:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Invalid</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> CSS</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> after</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;h1 {font-size: &quot;:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> expected</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> expression</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (e.g. </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">px,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> bold</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), was </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;}&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        on</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> line</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> of</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> test.scss</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  Use</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --trace</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> for</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> backtrace.</span></span></code></pre></div><h4 id="input-and-output" tabindex="-1">Input and Output <a class="header-anchor" href="#input-and-output" aria-label="Permalink to &quot;Input and Output&quot;">​</a></h4><p>これらのオプションは、Sassが入力ファイルを読み込む方法と出力ファイルを作成する方法を制御します。</p><h5 id="–scss" tabindex="-1">–scss <a class="header-anchor" href="#–scss" aria-label="Permalink to &quot;–scss&quot;">​</a></h5><p>このフラグは、Sass に標準入力を SCSS としてパースするように指示します。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;h1 {font-size: 40px}&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> sass</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --scss</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">h1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  font-size:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 40</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h5 id="–sourcemap" tabindex="-1">–sourcemap <a class="header-anchor" href="#–sourcemap" aria-label="Permalink to &quot;–sourcemap&quot;">​</a></h5><p>このオプションは、Sass がソースマップを生成する方法を制御します。ソースマップは、CSS を消費するブラウザやその他のツールに、その CSS が生成元の Sass ファイルにどのように対応するかを伝えるためのファイルです。これにより、ブラウザで Sass ファイルを確認したり、編集したりすることが可能になります。Chrome と Firefox でソースマップを使用する手順を参照してください。4つの値があります。</p><ul><li>auto（デフォルト）は、可能な限りソースマップから Sass スタイルシートへのリンクに相対 URL を使用し、それ以外は絶対ファイルです。URL を使用します。</li><li>file は常に絶対的なファイルを使用します。URL を使用して、ソースマップから Sass スタイルシートへリンクします。</li><li>inline は Sass スタイルシートのテキストをソースマップに直接含めます。</li><li>none はソースマップを全く生成しません。</li></ul><div class="language-bash​ vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash​</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span># Generates a URL like &quot;../sass/style.scss&quot;.</span></span>
<span class="line"><span>$ sass --sourcemap=auto sass/style.scss css/style.css</span></span>
<span class="line"><span></span></span>
<span class="line"><span>​# Generates a URL like &quot;file:///home/style-wiz/sassy-app/sass/style.scss&quot;.</span></span>
<span class="line"><span>$ sass --sourcemap=file sass/style.scss css/style.css</span></span>
<span class="line"><span></span></span>
<span class="line"><span>​# Includes the full text of sass/style.scss in the source map.</span></span>
<span class="line"><span>$ sass --sourcemap=inline sass/style.scss css/style.css</span></span>
<span class="line"><span></span></span>
<span class="line"><span>​# Doesn&#39;t generate a source map.</span></span>
<span class="line"><span>$ sass --sourcemap=none sass/style.scss css/style.css</span></span></code></pre></div><h5 id="–stdin-1" tabindex="-1">–stdin <a class="header-anchor" href="#–stdin-1" aria-label="Permalink to &quot;–stdin&quot;">​</a></h5><p>このフラグ (短縮形 -s) は、Sass に入力ファイルを標準入力から読み込むように指示します。このフラグが渡された場合、入力ファイルは渡されないかもしれません。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> echo</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;h1\\n  font-size: 40px&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> sass</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --stdin</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">h1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  font-size:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 40</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>多対多のモードでは --stdin フラグは使用できません。</p><h5 id="–default-encoding" tabindex="-1">–default-encoding <a class="header-anchor" href="#–default-encoding" aria-label="Permalink to &quot;–default-encoding&quot;">​</a></h5><p>このオプション (省略形 -E) は、文字エンコーディングを明示的に指定しないソース・ファイルを読み込む際に Sass が使用するデフォルトの文字エンコーディングを制御します。デフォルトは、オペレーティング・システムのデフォルト・エンコーディングです。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sass</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --default-encoding=Shift-JIS</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> style.scss</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> style.css</span></span></code></pre></div><h5 id="–unix-newlines" tabindex="-1">–unix-newlines <a class="header-anchor" href="#–unix-newlines" aria-label="Permalink to &quot;–unix-newlines&quot;">​</a></h5><p>このフラグは、オペレーティングシステムのデフォルト（Windows では、U+000D CARRIAGE RETURN と U+000A LINE FEED）とは対照的に、U+000A LINE FEED 文字で行を区切る出力ファイルを生成するように Sass に指示します。Unixスタイルの改行がデフォルトのシステムでは常にそうである。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sass</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --unix-newlines</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> style.scss</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> style.css</span></span></code></pre></div><h5 id="–debug-info" tabindex="-1">–debug-info <a class="header-anchor" href="#–debug-info" aria-label="Permalink to &quot;–debug-info&quot;">​</a></h5><p>このフラグ (短縮形 -g) を指定すると、Sass は各スタイル規則がソース stylehseet のどこで定義されたかを示すダミーの @media クエリーを出力します。</p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>⚠️ Heads up!</p><p>このフラグは後方互換性のためにのみ存在します。ソースマップは、CSS を生成した Sass にマッピングするための推奨方法となりました。</p></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sass</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --debug-info</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> style.scss</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">@media</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -sass-debug-info</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">filename</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{font-family:file\\</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">\\/\\/\\/home\\/style-wiz\\/sassy-app\\/style\\.scss}</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">line</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{font-family:\\000031}</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">}</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">h1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  font-size:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 40</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; }</span></span></code></pre></div><h5 id="–line-comments" tabindex="-1">–line-comments <a class="header-anchor" href="#–line-comments" aria-label="Permalink to &quot;–line-comments&quot;">​</a></h5><p>このフラグ（--line-numbers、略称：-lとしても使用可能）を使用すると、Sassは各スタイル・ルールがソース・スタイルシートのどこで定義されたかを示すコメントを出力するようになります。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sass</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --line-numbers</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> style.scss</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">/*</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> line</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> style.scss</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> *</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">h1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  font-size:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 40</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; }</span></span></code></pre></div><h4 id="その他のオプション-1" tabindex="-1">その他のオプション <a class="header-anchor" href="#その他のオプション-1" aria-label="Permalink to &quot;その他のオプション&quot;">​</a></h4><h5 id="–interactive-1" tabindex="-1">–interactive <a class="header-anchor" href="#–interactive-1" aria-label="Permalink to &quot;–interactive&quot;">​</a></h5><p>このフラグ (略称 -i) は、SassScript 式を記述してその結果を確認できるインタラクティブ モードで実行するように Sass に指示します。インタラクティブ・モードは変数もサポートしています。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sass</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --interactive</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 1px + 1in</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">97px</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $map: (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&quot;width&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 100</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">px,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;height&quot;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 70</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&quot;width&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 100</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">px,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;height&quot;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 70</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> map-get($map, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;width&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">100px</span></span></code></pre></div><h5 id="–check" tabindex="-1">–check <a class="header-anchor" href="#–check" aria-label="Permalink to &quot;–check&quot;">​</a></h5><p>このフラグ（-c）は、入力ファイルの構文が有効であるかどうかを、そのファイルを実行せずに確認するように Sass に指示します。シンタックスが有効な場合、ステータス 0 で終了します。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sass</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --check</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> style.scss</span></span></code></pre></div><h5 id="–precision" tabindex="-1">–precision <a class="header-anchor" href="#–precision" aria-label="Permalink to &quot;–precision&quot;">​</a></h5><p>このオプションは、Sassが小数点を表示する際に何桁の精度を使用するかを指定します。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> echo</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;h1\\n  font-size: (100px / 3)&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> sass</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --precision=20</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">h1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  font-size:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 33.333333333333336</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; }</span></span></code></pre></div><h5 id="–cache-location" tabindex="-1">–cache-location <a class="header-anchor" href="#–cache-location" aria-label="Permalink to &quot;–cache-location&quot;">​</a></h5><p>このオプションは、Sassがパースしたファイルのキャッシュをどこに保存するかを指定します。デフォルトは .sass-cache です。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sass</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --cache-location=/tmp/sass-cache</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> style.scss</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> style.css</span></span></code></pre></div><h5 id="–no-cache" tabindex="-1">–no-cache <a class="header-anchor" href="#–no-cache" aria-label="Permalink to &quot;–no-cache&quot;">​</a></h5><p>このフラグ (短縮形 -C) は、パースされたファイルをまったくキャッシュしないように Sass に指示します。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sass</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --no-cache</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> style.scss</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> style.css</span></span></code></pre></div><h5 id="–trace-1" tabindex="-1">–trace <a class="header-anchor" href="#–trace-1" aria-label="Permalink to &quot;–trace&quot;">​</a></h5><p>このフラグは、エラーが発生したときに Ruby の完全なスタックトレースを表示するように Sass に指示します。これは、Sass チームがエラーのデバッグを行う際に使用します。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Traceback</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (most </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">recent</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> call</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> last</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">):</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        25:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /usr/share/gems/sass/bin/sass:13:in</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> \`</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">main</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        24: from /usr/share/gems/sass/lib/sass/exec/base.rb:18:in \`parse!&#39;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        23:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> from /usr/share/gems/sass/lib/sass/exec/base.rb:50:in \`</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">parse</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&#39;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        22: from /usr/share/gems/sass/lib/sass/exec/sass_scss.rb:63:in \`process_result&#39;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        21:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /usr/share/gems/sass/lib/sass/exec/sass_scss.rb:396:in</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> \`</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">run&#39;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        20: from /usr/share/gems/sass/lib/sass/engine.rb:290:in \`render&#39;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        19:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> from /usr/share/gems/sass/lib/sass/engine.rb:414:in \`</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">_to_tree</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&#39;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        18: from /usr/share/gems/sass/lib/sass/scss/parser.rb:41:in \`parse&#39;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        17:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /usr/share/gems/sass/lib/sass/scss/parser.rb:137:in</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> \`</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">stylesheet&#39;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        16: from /usr/share/gems/sass/lib/sass/scss/parser.rb:697:in \`block_contents&#39;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        15:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> from /usr/share/gems/sass/lib/sass/scss/parser.rb:707:in \`</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">block_child</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&#39;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        14: from /usr/share/gems/sass/lib/sass/scss/parser.rb:681:in \`ruleset&#39;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        13:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /usr/share/gems/sass/lib/sass/scss/parser.rb:689:in</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> \`</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">block&#39;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        12: from /usr/share/gems/sass/lib/sass/scss/parser.rb:697:in \`block_contents&#39;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        11:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> from /usr/share/gems/sass/lib/sass/scss/parser.rb:708:in \`</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">block_child</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&#39;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        10: from /usr/share/gems/sass/lib/sass/scss/parser.rb:743:in \`declaration_or_ruleset&#39;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">         9:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /usr/share/gems/sass/lib/sass/scss/parser.rb:820:in</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> \`</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">try_declaration&#39;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">         8: from /usr/share/gems/sass/lib/sass/scss/parser.rb:1281:in \`rethrow&#39;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">         7:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> from /usr/share/gems/sass/lib/sass/scss/parser.rb:807:in \`</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">block</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> in</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> try_declaration&#39;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">         6: from /usr/share/gems/sass/lib/sass/scss/parser.rb:999:in \`value!&#39;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">         5:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /usr/share/gems/sass/lib/sass/scss/parser.rb:1161:in</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> \`</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sass_script&#39;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">         4: from /usr/share/gems/sass/lib/sass/script/parser.rb:68:in \`parse&#39;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">         3:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> from /usr/share/gems/sass/lib/sass/script/parser.rb:855:in \`</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">assert_expr</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&#39;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">         2: from /usr/share/gems/sass/lib/sass/script/lexer.rb:240:in \`expected!&#39;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">         1:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /usr/share/gems/sass/lib/sass/scss/parser.rb:1305:in</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> \`</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">expected&#39;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">test.scss:1: Invalid CSS after &quot;h1 {font-size: &quot;: expected expression (e.g. 1px, bold), was &quot;}&quot; (Sass::SyntaxError)</span></span></code></pre></div><h5 id="–quiet-1" tabindex="-1">–quiet <a class="header-anchor" href="#–quiet-1" aria-label="Permalink to &quot;–quiet&quot;">​</a></h5><p>このフラグ（短縮形 -q）は、コンパイル時に警告を出さないように Sass に指示します。デフォルトでは、Sass は非推奨の機能が使用されたとき、または @warn ルールに遭遇したときに警告を出します。また、@debug ルールも無効になります。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sass</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --quiet</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> style.scss</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> style.css</span></span></code></pre></div><h2 id="migrator" tabindex="-1">Migrator <a class="header-anchor" href="#migrator" aria-label="Permalink to &quot;Migrator&quot;">​</a></h2><p>Sass migrator は Sass ファイルを自動的に更新し、最新かつ最高のバージョンの言語への移行を支援します。各コマンドは単一の機能を移行するため、いつ何を更新するかについて可能な限り制御することができます。</p><h3 id="使用方法-1" tabindex="-1">使用方法 <a class="header-anchor" href="#使用方法-1" aria-label="Permalink to &quot;使用方法&quot;">​</a></h3><p>Sass migrator を使用するには、どのマイグレーションを実行したいか、どの Sass ファイルをマイグレーションしたいかを指定します。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sass-migrator</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">migratio</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">n</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">entrypoint.scss..</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><p>デフォルトでは、migrator はコマンドラインで明示的に渡したファイルのみを変更します。migrate-deps オプションを渡すと、@use ルール、@forward ルール、または @import ルールを使って読み込まれたすべてのスタイルシートも変更するよう migrator に指示します。また、実際に保存することなく、どのような変更が行われるかをテスト実行したい場合は、-dry-run --verbose (略して -nv) を渡すことができます。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cat</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> style.scss</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$body-bg: </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#000;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$body-color: </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#111;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">@import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;bootstrap&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">@include</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> media-breakpoint-up</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sm</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">{</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  .navbar</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    display:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> block</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sass-migrator</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --migrate-deps</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> module</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> style.scss</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cat</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> style.scss</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">@use</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;bootstrap&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> with</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  $body-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">bg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#000,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  $body-color: </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#111</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">@include</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> bootstrap.media-breakpoint-up</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sm</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">{</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  .navbar</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    display:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> block</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="インストール" tabindex="-1">インストール <a class="header-anchor" href="#インストール" aria-label="Permalink to &quot;インストール&quot;">​</a></h3><p>Sass migrator は、Dart Sass と同じ場所からインストールすることができます。</p><h4 id="スタンドアロン" tabindex="-1">スタンドアロン <a class="header-anchor" href="#スタンドアロン" aria-label="Permalink to &quot;スタンドアロン&quot;">​</a></h4><p>Windows、Mac、Linux に Sass migrator をインストールするには、GitHub からあなたのオペレーティングシステム用のパッケージをダウンロードし、PATH に追加します。</p><h4 id="npm" tabindex="-1">npm <a class="header-anchor" href="#npm" aria-label="Permalink to &quot;npm&quot;">​</a></h4><p>Node.js を使用している場合、npm を使用して Sass migrator をインストールすることもできます。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -g</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sass-migrator</span></span></code></pre></div><h4 id="chocolatey" tabindex="-1">Chocolatey <a class="header-anchor" href="#chocolatey" aria-label="Permalink to &quot;Chocolatey&quot;">​</a></h4><p>Windows 用の Chocolatey パッケージマネージャを使用している場合、Sass migrator をインストールするには、次のように実行します。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">choco</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sass-migrator</span></span></code></pre></div><h4 id="homebrew" tabindex="-1">Homebrew <a class="header-anchor" href="#homebrew" aria-label="Permalink to &quot;Homebrew&quot;">​</a></h4><p>Mac OS X 用の Homebrew パッケージ・マネージャを使用している場合、Dart Sass をインストールするには、次のように実行します。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">brew</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sass/sass/migrator</span></span></code></pre></div><h3 id="グローバルオプション" tabindex="-1">グローバルオプション <a class="header-anchor" href="#グローバルオプション" aria-label="Permalink to &quot;グローバルオプション&quot;">​</a></h3><p>これらのオプションは、すべてのマイグレーターで利用可能です。</p><h4 id="–migrate-deps" tabindex="-1">–migrate-deps <a class="header-anchor" href="#–migrate-deps" aria-label="Permalink to &quot;–migrate-deps&quot;">​</a></h4><p>このオプション (短縮形 -d) は、コマンドラインで明示的に渡されたスタイルシートだけでなく、@use ルール、@forward ルール、または @import ルールによって依存するすべてのスタイルシートも変更するよう migrator に指示します。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sass-migrator</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> module</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --verbose</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> style.scss</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Migrating</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> style.scss</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sass-migrator</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> module</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --verbose</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --migrate-deps</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> style.scss</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Migrating</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> style.scss</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Migrating</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> _theme.scss</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Migrating</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> _fonts.scss</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Migrating</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> _grid.scss</span></span></code></pre></div><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>⚠️ Heads up!</p><p>モジュール migrator は @use ルールや @forward ルールを使って依存しているスタイルシートはすでにモジュールシステムに移行されていると仮定して、--migrate-deps オプションが渡された場合でも移行を試みない。</p></div><h4 id="–load-path-2" tabindex="-1">–load-path <a class="header-anchor" href="#–load-path-2" aria-label="Permalink to &quot;–load-path&quot;">​</a></h4><p>このオプション (短縮形 -I) は migrator がスタイルシートを探すロードパスを指定します。複数のロードパスを指定するために、このオプションを複数回渡すことができる。先に指定したロードパスが後に指定したロードパスより優先される。</p><p>ロードパスから読み込まれる依存関係はサードパーティライブラリと見なされるため、--migrate-deps オプションが渡された場合でも migrator はそれらを移行しない。</p><h4 id="–dry-run" tabindex="-1">–dry-run <a class="header-anchor" href="#–dry-run" aria-label="Permalink to &quot;–dry-run&quot;">​</a></h4><p>このフラグ (短縮形 -n) は、migrator に変更をディスクに保存しないように指示します。その代わり、変更したであろうファイルのリストを表示する。これは、一般に --verbose オプションと組み合わせて、同様に変更されたであろう内容を表示するために使われる。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$ </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">sass-migrator</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> module </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">--dry-run</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> --migrate-deps</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;"> style</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.scss</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Dry run. Logging migrated files instead of overwriting...</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">style</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.scss</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">_theme</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.scss</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">_fonts</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.scss</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">_grid</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.scss</span></span></code></pre></div><h4 id="–no-unicode-1" tabindex="-1">–no-unicode <a class="header-anchor" href="#–no-unicode-1" aria-label="Permalink to &quot;–no-unicode&quot;">​</a></h4><p>このフラグは、Sass migrator がエラーメッセージの一部として ASCII 文字を端末に出力することのみを指示します。デフォルト、または --unicode が渡された場合、migrator はこれらのメッセージに対して非 ASCII 文字を出力します。このフラグは CSS 出力に影響を与えません。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sass-migrator</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --no-unicode</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> module</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> style.scss</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">line</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> column</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 9</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> of</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> style.scss:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Error:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Could</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> not</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> find</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Sass</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> file</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> at</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;typography&#39;.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  ,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> @import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;typography&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">         ^^^^^^^^^^^^</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  &#39;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Migration failed!</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$ sass-migrator --unicode module style.scss</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">line 1, column 9 of style.scss: Error: Could not find Sass file at &#39;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">typography</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&#39;.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  ╷</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">1 │ @import &quot;typography&quot;;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  │         ^^^^^^^^^^^^</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  ╵</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Migration failed!</span></span></code></pre></div><h4 id="–verbose" tabindex="-1">–verbose <a class="header-anchor" href="#–verbose" aria-label="Permalink to &quot;–verbose&quot;">​</a></h4><p>このフラグ (短縮形 -v) は、migrator に追加情報をコンソールに表示するように指示します。デフォルトでは、変更されたファイルの名前を表示するだけですが、 --dry-run オプションと組み合わせると、それらのファイルの新しい内容も表示します。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sass-migrator</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> module</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --verbose</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --dry-run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> style.scss</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Dry</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run.</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Logging</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> migrated</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> files</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> instead</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> of</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> overwriting...</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">==</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> style.scss</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">@use</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;bootstrap&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> with</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  $body-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">bg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#000,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  $body-color: </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#111</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">@include</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> bootstrap.media-breakpoint-up</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sm</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">{</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  .navbar</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    display:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> block</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sass-migrator</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> module</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --verbose</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> style.scss</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Migrating</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> style.scss</span></span></code></pre></div><h3 id="migrations" tabindex="-1">Migrations <a class="header-anchor" href="#migrations" aria-label="Permalink to &quot;Migrations&quot;">​</a></h3><h4 id="division" tabindex="-1">Division <a class="header-anchor" href="#division" aria-label="Permalink to &quot;Division&quot;">​</a></h4><p>この移行は、/ を除算として使用しているスタイルシートを、代わりに組み込みの math.div 関数を使用するように変換します。</p><h4 id="–pessimistic" tabindex="-1">–pessimistic <a class="header-anchor" href="#–pessimistic" aria-label="Permalink to &quot;–pessimistic&quot;">​</a></h4><p>デフォルトでは、migrator は / 操作が評価されたときに除算になるかどうかがわからない場合でも math.div に変換します。他のことを行っていると静的に判断できる場合のみ、そのままにします（SassScript が関与していない場合や、オペランドの 1 つが文字列である場合など）。math.div 関数は現在 / 演算子と同じように機能するので、これは安全ですが、実行時に math.div への引数の 1 つが数値でない場合、新しい警告が発生する可能性があります。</p><p>この動作を回避したい場合は、-pessimistic フラグを渡すことができます。このフラグを指定すると、migrator は確実に除算を行うことが分かっている / 操作のみを変換します。これにより、不必要な math.div の変換を防ぐことができますが、静的に判断できない除算は移行されないまま放置される可能性があります。</p><h4 id="モジュール" tabindex="-1">モジュール <a class="header-anchor" href="#モジュール" aria-label="Permalink to &quot;モジュール&quot;">​</a></h4><p>このマイグレーションは、依存関係をロードするために古い @import ルールを使用しているスタイルシートを変換し、代わりに @use ルールを介して Sass モジュールシステムを使用するようにします。単純に @import を @uses に変更するだけでなく、スタイルシートが以前と同じように動作するよう、インテリジェントに更新します。</p><ul><li>他のモジュールのメンバ（変数、ミキシン、関数）の使用に名前空間を追加する。</li><li>メンバーをインポートせずに使用していたスタイルシートに、新しい @use 規則を追加します。</li><li>オーバーライドされたデフォルト変数をwith句に変換します。</li><li>他のファイルから使用されているメンバーから自動的に - と _ 接頭辞を削除します（そうしないとプライベートと見なされ、宣言されたモジュールでのみ使用できるため）。</li><li>ネストされたインポートを、代わりに meta.load-css() ミキシンを使用するように変換します。</li></ul><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>⚠️ Heads up!</p><p>モジュール migrator はメンバー定義とメンバー名の両方を変更する必要があるため、 --migrate-deps オプションを付けて実行するか、パッケージまたはアプリケーション内のすべてのスタイルシートを渡すようにすることが重要です。</p></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cat</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> style.scss</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$body-bg: </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#000;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$body-color: </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#111;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">@import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;bootstrap&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">@include</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> media-breakpoint-up</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sm</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">{</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  .navbar</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    display:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> block</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sass-migrator</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --migrate-deps</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> module</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> style.scss</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cat</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> style.scss</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">@use</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;bootstrap&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> with</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  $body-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">bg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#000,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  $body-color: </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#111</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">@include</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> bootstrap.media-breakpoint-up</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sm</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">{</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  .navbar</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    display:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> block</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h4 id="依存関係の読み込み" tabindex="-1">依存関係の読み込み <a class="header-anchor" href="#依存関係の読み込み" aria-label="Permalink to &quot;依存関係の読み込み&quot;">​</a></h4><p>モジュール migrator は、--migrate-deps オプションが渡されなくても、移行先のスタイルシートが依存しているものをすべて読み込むことができる必要があります。migrator が依存関係を見つけるのに失敗すると、エラーが発生します。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ls</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">style.scss</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  node_modules</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sass-migrator</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> module</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> style.scss</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Error:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Could</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> not</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> find</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Sass</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> file</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> at</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;dependency&#39;.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  ,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> @import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;dependency&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">         ^^^^^^^^^^^^</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  &#39;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  style.scss 1:9  root stylesheet</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Migration failed!</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$ sass-migrator --load-path node_modules module style.scss</span></span></code></pre></div><p>スタイルシートをコンパイルする際にロードパスを使用する場合は、 --load-path オプションを使用して migrator にそれを渡すことを確認してください。</p><p>残念ながら、migrator はカスタムインポーターをサポートしていませんが、Webpack がサポートしているのと同じように、node_modules で検索して ~ で始まる URL を解決するための組み込みサポートがあります。</p><h4 id="–remove-prefix" tabindex="-1">–remove-prefix <a class="header-anchor" href="#–remove-prefix" aria-label="Permalink to &quot;–remove-prefix&quot;">​</a></h4><p>このオプション (短縮形 -p) は、変数名、ミキシン、関数名を移行する際に、それらの名前の先頭から削除する識別子の接頭辞を取ります。このプレフィックスで始まらないメンバは変更されないままです。</p><p>@import ルールはすべてのトップレベルメンバーをひとつのグローバルスコープに置くため、スタイルシートを読み込む標準的な方法であったときは、他のスタイルシートのものを誤って再定義しないように、すべてのメンバー名にプレフィックスを追加する動機付けがありました。モジュールシステムはこの問題を解決してくれるので、不要になった古い接頭辞を自動的に取り除くのに便利です。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cat</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> style.scss</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">@import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;theme&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">@mixin</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> app-inverted</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  color:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $app</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">-bg-color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  background-color:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $app</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">-color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sass-migrator</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --migrate-deps</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> module</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --remove-prefix=app-</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> style.scss</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cat</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> style.scss</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">@import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;theme&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">@mixin</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> inverted</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  color:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> theme.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$bg</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">-color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  background-color:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> theme.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$color;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>このオプションを渡すと、ライブラリをインポートしていたユーザーの後方互換性を維持するために、マイグレータは接頭辞を追加したすべてのメンバーを転送するインポート専用のスタイルシートも生成します。</p><p>このオプションは複数回、あるいはカンマで区切った複数の値で指定することができます。各プレフィックスは、それを持つすべてのメンバーから削除されます。ひとつのメンバーが複数のプレフィックスにマッチする場合は、 いちばん長いプレフィックスが削除されます。</p><h4 id="–forward" tabindex="-1">–forward <a class="header-anchor" href="#–forward" aria-label="Permalink to &quot;–forward&quot;">​</a></h4><p>このオプションは、@forward ルールを使用して転送するメンバーを migrator に指示します。以下の設定をサポートしています。</p><ul><li>none (既定) は、どのメンバーも転送しません。</li><li>all は、オリジナルのスタイルシートで - または _ で始まるメンバーを除くすべてのメンバーを転送します。</li><li>prefixed は、--remove-prefix オプションに渡されたプレフィックスで始まるメンバーのみを 転送します。このオプションは --remove-prefix オプションと一緒に使うことだけが可能である。</li></ul><p>コマンドラインで明示的に渡されたファイルはすべて、そのファイルから@importルールで過渡的にロードされたメンバーを転送します。migrate-deps オプションを使用してロードされたファイルは、新しいメンバーを転送しません。このオプションは、Sass ライブラリを移行する際に特に有用で、そのライブラリのユーザーは、そのライブラリが定義するすべてのメンバーに引き続きアクセスできることが保証されるためです。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cat</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> _index.scss</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">@import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;theme&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">@import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;typography&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">@import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;components&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sass-migrator</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --migrate-deps</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> module</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --forward=all</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> style.scss</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cat</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> _index.scss</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">@forward</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;theme&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">@forward</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;typography&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">@forward</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;components&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><h4 id="名前空間" tabindex="-1">名前空間 <a class="header-anchor" href="#名前空間" aria-label="Permalink to &quot;名前空間&quot;">​</a></h4><p>このマイグレーションにより、スタイルシートの @use ルールの名前空間を簡単に変更することができます。モジュール migrator が競合を解決するために生成する名前空間が理想的でない場合、またはルールの URL に基づいて Sass が決定するデフォルトの名前空間を使用したくない場合に便利です。</p><h5 id="–rename" tabindex="-1">–rename <a class="header-anchor" href="#–rename" aria-label="Permalink to &quot;–rename&quot;">​</a></h5><p>どの名前空間を変更させたいかは、--rename オプションに式を渡すことで指定できます。</p><p>これらの式は <code>&lt;old-namespace&gt;</code> から <code>&lt;new-namespace&gt;</code> または url <code>&lt;rule-url&gt;</code> から <code>&lt;new-namespace&gt;</code> という形式をとります。これらの式において、 <code>&lt;old-namespace&gt;</code> と <code>&lt;rule-url&gt;</code> はそれぞれ既存の名前空間または @use ルールの URL 全体に対してマッチする正規表現です。</p><p>単純な使用例では、これは --rename &#39;old to new&#39; のように見えるだけで、名前空間が old の @use ルールの名前を、代わりに new に変更するものです。</p><p>しかし、より複雑な名前の変更もこの方法で行うことができます。例えば、以前は次のようなスタイルシートがあったとします。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;components/button/lib/mixins&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;components/input/lib/mixins&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;components/table/lib/mixins&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// ...</span></span></code></pre></div><p>これらの URL はすべて @use ルールに移行されるとデフォルトの名前空間ミキシンを持つことになるので、モジュールマイグレータは次のようなものを生成してしまうかもしれません。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@use</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;components/button/lib/mixins&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> as</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> button-lib-mixins</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@use</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;components/input/lib/mixins&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> as</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> input-lib-mixins</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@use</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;components/table/lib/mixins&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> as</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> table-lib-mixins</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// ...</span></span></code></pre></div><p>名前空間が衝突しないのでこれは有効なコードですが、必要以上に複雑になっています。URLの関連する部分はコンポーネント名なので、その部分を抽出するために名前空間マイグレータを使用することができます。</p><p>namespace migrator を --rename &#39;url components/(\\w+)/lib/mixins to \\1&#39; で実行すると、以下のようになります。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@use</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;components/button/lib/mixins&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> as</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> button</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@use</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;components/input/lib/mixins&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> as</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> input</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@use</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;components/table/lib/mixins&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> as</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> table</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// ...</span></span></code></pre></div><p>このリネームスクリプトでは、URL が components/(\\w+)/lib/mixins のような @use ルールをすべて検索します（正規表現での \\w+ は、1 文字以上の任意の単語にマッチすることを意味します）。出力節にある \\1 は、正規表現の最初の括弧の中身を代入することを意味します（グループと呼びます）。</p><p>複数のリネームを適用したい場合は、--rename オプションを複数回渡すか、セミコロンまたは改行で区切ります。与えられたルールに適用される最初のリネームのみが使用されるので、 --rename &#39;a to b; b to a&#39; のように渡すと、名前空間 a と b を入れ替えることができる。</p><h5 id="–force-1" tabindex="-1">–force <a class="header-anchor" href="#–force-1" aria-label="Permalink to &quot;–force&quot;">​</a></h5><p>デフォルトでは、マイグレーション後に2つ以上の@useルールが同じ名前空間を持つ場合、マイグレータは失敗し、変更は行われません。</p><p>この場合、通常は --rename スクリプトを調整して衝突が起こらないようにしたいところですが、強制的に移行させたい場合は、代わりに --force を渡すとよいでしょう。</p><p>--force を指定すると、競合が発生した場合、最初の @use ルールに優先名前空間が付与され、同じ優先名前空間を持つ後続の @use ルールには数値サフィックスが付与されます。</p>`,305),t=[l];function p(e,k,r,d,F,g){return i(),a("div",null,t)}const y=s(h,[["render",p]]);export{o as __pageData,y as default};
