import{_ as a,c as t,o as e,a as s}from"./app.1650bd79.js";const g=JSON.parse('{"title":"Natural Docsによるドキュメントの作成（日本語訳）","description":"","frontmatter":{},"headers":[{"level":2,"title":"更新を続ける","slug":"更新を続ける","link":"#更新を続ける","children":[]}],"relativePath":"translation/natural-docs/getting_started/building_the_documentation.md","lastUpdated":1676126774000}'),n={name:"translation/natural-docs/getting_started/building_the_documentation.md"},o=s(`<h1 id="natural-docsによるドキュメントの作成-日本語訳" tabindex="-1">Natural Docsによるドキュメントの作成（日本語訳） <a class="header-anchor" href="#natural-docsによるドキュメントの作成-日本語訳" aria-hidden="true">#</a></h1><p><a href="https://www.naturaldocs.org/getting_started/building_the_documentation/" target="_blank" rel="noreferrer">原文</a></p><p>これですべての設定が完了し、コードをコメントしたので、Natural Docsを実行する必要があります。ドキュメントを構築するコマンドは、NaturalDocs.exeとプロジェクト構成フォルダの組み合わせだけです。</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">NaturalDocs.exe C:\\My Project\\ND Config</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>完成したら、Project.txtに入れた出力フォルダに移動してindex.htmlを開いてください。これでドキュメントの完成です。</p><h2 id="更新を続ける" tabindex="-1">更新を続ける <a class="header-anchor" href="#更新を続ける" aria-hidden="true">#</a></h2><p>ドキュメントを更新したいときは、いつでも同じコマンドを再実行すればよいのです。</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">NaturalDocs.exe C:\\My Project\\ND Config</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>すでにブラウザーのウィンドウで開いていた場合は、ページを再読み込みすれば変更が反映されます。</p><p>Natural Docsのビルドプロセスは差分処理で、実行するたびに前回の実行以降に変更されたものを探し、ドキュメントのその部分のみを更新します。これは最初の実行よりも後の実行がはるかに高速であることを意味するので、作業中に頻繁に実行することができます。</p><p>Natural Docsはコマンドラインツールであるため、ほとんどの開発環境に統合することができます。ビルドプロセスのビルド前またはビルド後のイベントとして追加できますが、個人的にはVisual Studioの外部ツールとして構成して、ビルドの間でもキーボードショートカットで好きなときに実行できるようにしています。他のほとんどの開発環境にも同様の機能があるはずです。</p><p>Natural Docsはコンソールに書き込むため、ほとんどの開発環境はそのステータスメッセージをキャプチャして、自分自身で表示することができます。しかし、ポップアップコンソールウィンドウで実行する場合、いくつかのコマンドラインオプションについて知っておく必要があります。-pause-before-exitはNatural Docsにキーが押されるのを待ってから終了するように指示し、ウィンドウが消える前にステータスメッセージを表示する時間を確保します。--pause-on-errorもこれを行いますが、問題がある場合のみです。ウィンドウは開いたままなのでエラーメッセージを見ることができますが、すべてが正常に終了すると自動的に閉じます。</p>`,12),l=[o];function r(c,i,p,d,u,_){return e(),t("div",null,l)}const C=a(n,[["render",r]]);export{g as __pageData,C as default};
