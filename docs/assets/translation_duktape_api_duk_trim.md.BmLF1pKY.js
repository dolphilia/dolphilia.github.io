import{_ as a,c as i,o as t,a4 as s}from"./chunks/framework.C5O6QHj3.js";const _=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"translation/duktape/api/duk_trim.md","filePath":"translation/duktape/api/duk_trim.md","lastUpdated":1676126774000}'),e={name:"translation/duktape/api/duk_trim.md"},n=s('<h2 id="duk-trim" tabindex="-1">duk_trim() <a class="header-anchor" href="#duk-trim" aria-label="Permalink to &quot;duk_trim()&quot;">​</a></h2><p>1.0.0 string stack</p><h3 id="プロトタイプ" tabindex="-1">プロトタイプ <a class="header-anchor" href="#プロトタイプ" aria-label="Permalink to &quot;プロトタイプ&quot;">​</a></h3><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> duk_trim</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(duk_context </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">ctx</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">duk_idx_t</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> idx</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h3 id="スタック" tabindex="-1">スタック <a class="header-anchor" href="#スタック" aria-label="Permalink to &quot;スタック&quot;">​</a></h3><p>| ... | str | ... | -&gt; | ... | trimmed_str | ... |</p><h3 id="要約" tabindex="-1">要約 <a class="header-anchor" href="#要約" aria-label="Permalink to &quot;要約&quot;">​</a></h3><p>idxの文字列をトリミングします。idx の値が文字列でない場合、またはインデックスが無効な場合は、エラーを投げます。。</p><p>トリミングは、文字列の先頭と末尾の空白文字を削除します。文字列がすべて空白文字で構成されている場合、結果は空文字列となります。ホワイトスペースとみなされる文字のセットは、WhiteSpaceとLineTerminatorの両方を含むStrWhiteSpaceプロダクションによって定義されます。トリミングの動作は String.prototype.trim(), parseInt(), parseFloat() の動作と一致します。</p><h3 id="例" tabindex="-1">例 <a class="header-anchor" href="#例" aria-label="Permalink to &quot;例&quot;">​</a></h3><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">duk_trim</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ctx, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div>',11),h=[n];function r(l,p,d,k,o,c){return t(),i("div",null,h)}const m=a(e,[["render",r]]);export{_ as __pageData,m as default};
