import{_ as t,o as d,c as e,U as r}from"./chunks/framework.a0f12ab5.js";const c=JSON.parse('{"title":"pygameリファレンス","description":"","frontmatter":{},"headers":[],"relativePath":"translation/pygame/reference/index.md","filePath":"translation/pygame/reference/index.md","lastUpdated":1676126774000}'),a={name:"translation/pygame/reference/index.md"},m=r('<h1 id="pygameリファレンス" tabindex="-1">pygameリファレンス <a class="header-anchor" href="#pygameリファレンス" aria-label="Permalink to &quot;pygameリファレンス&quot;">​</a></h1><h2 id="ショートカット" tabindex="-1">ショートカット <a class="header-anchor" href="#ショートカット" aria-label="Permalink to &quot;ショートカット&quot;">​</a></h2><ul><li>よく使うもの: <ul><li>Color</li><li>display</li><li>draw</li><li>event</li><li>font</li><li>image</li><li>key</li><li>locals</li><li>mixer</li><li>mouse</li><li>Rect</li><li>Surface</li><li>time</li><li>music</li><li>pygame</li></ul></li><li>高度なもの: <ul><li>cursors</li><li>joystick</li><li>mask</li><li>sprite</li><li>transform</li><li>BufferProxy</li><li>freetype</li><li>gfxdraw</li><li>midi</li><li>PixelArray</li><li>pixelcopy</li><li>sndarray</li><li>surfarray</li><li>math</li></ul></li><li>その他: <ul><li>camera</li><li>context</li><li>controller</li><li>examples</li><li>fastevent</li><li>scrap</li><li>tests</li><li>touch</li><li>version</li></ul></li></ul><h2 id="よく使うもの" tabindex="-1">よく使うもの: <a class="header-anchor" href="#よく使うもの" aria-label="Permalink to &quot;よく使うもの:&quot;">​</a></h2><h3 id="color" tabindex="-1">Color <a class="header-anchor" href="#color" aria-label="Permalink to &quot;Color&quot;">​</a></h3><p>色表現オブジェクト</p><table><thead><tr><th>API</th><th>説明</th></tr></thead><tbody><tr><td>pygame.Color.r</td><td>Color の赤の値を取得または設定する。</td></tr><tr><td>pygame.Color.g</td><td>Color の緑の値を取得または設定する。</td></tr><tr><td>pygame.Color.b</td><td>Color の青色の値を取得または設定する。</td></tr><tr><td>pygame.Color.a</td><td>Color のアルファ値を取得または設定する。</td></tr><tr><td>pygame.Color.cmy</td><td>Color の CMY 表現を取得または設定する。</td></tr><tr><td>pygame.Color.hsva</td><td>Color の HSVA 表現を取得または設定します。</td></tr><tr><td>pygame.Color.hsla</td><td>Color の HSLA 表現を取得または設定する。</td></tr><tr><td>pygame.Color.i1i2i3</td><td>Color の I1I2I3 表現を取得または設定する。</td></tr><tr><td>pygame.Color.normalize</td><td>Color の正規化された RGBA 値を返します。</td></tr><tr><td>pygame.Color.correct_gamma</td><td>カラーに特定のガンマ値を適用します。</td></tr><tr><td>pygame.Color.set_length</td><td>Colorの要素数を1,2,3,4で設定します。</td></tr><tr><td>pygame.Color.lerp</td><td>指定されたColorへの線形補間を返します。</td></tr><tr><td>pygame.Color.premul_alpha</td><td>r,g,b 成分にアルファ値を乗じた色を返します。</td></tr><tr><td>pygame.Color.update</td><td>色の要素を設定する</td></tr></tbody></table><h3 id="display" tabindex="-1">display <a class="header-anchor" href="#display" aria-label="Permalink to &quot;display&quot;">​</a></h3><p>ディスプレイウィンドウとスクリーンを制御する</p><table><thead><tr><th>API</th><th>説明</th></tr></thead><tbody><tr><td>pygame.display.init</td><td>ディスプレイモジュールの初期化</td></tr><tr><td>pygame.display.quit</td><td>ディスプレイモジュールの初期化を解除する</td></tr><tr><td>pygame.display.get_init</td><td>表示モジュールが初期化された場合、True を返します。</td></tr><tr><td>pygame.display.set_mode</td><td>表示用のウィンドウや画面を初期化する</td></tr><tr><td>pygame.display.get_surface</td><td>現在設定されている表示面への参照を取得する</td></tr><tr><td>pygame.display.flip</td><td>フルディスプレイのSurfaceをスクリーンにアップデート</td></tr><tr><td>pygame.display.update</td><td>ソフトウェア表示用画面の一部を更新</td></tr><tr><td>pygame.display.get_driver</td><td>pygameディスプレイバックエンドの名前を取得します。</td></tr><tr><td>pygame.display.Info</td><td>映像表示情報オブジェクトの作成</td></tr><tr><td>pygame.display.get_wm_info</td><td>現在のウィンドウシステムに関する情報を取得する</td></tr><tr><td>pygame.display.get_desktop_sizes</td><td>アクティブなデスクトップのサイズを取得</td></tr><tr><td>pygame.display.list_modes</td><td>利用可能なフルスクリーンモードの一覧を取得する</td></tr><tr><td>pygame.display.mode_ok</td><td>ディスプレイモードに最適な色深度を選ぶ</td></tr><tr><td>pygame.display.gl_get_attribute</td><td>現在のディスプレイのOpenGLフラグの値を取得します。</td></tr><tr><td>pygame.display.gl_set_attribute</td><td>表示モードのOpenGL表示属性を要求する</td></tr><tr><td>pygame.display.get_active</td><td>画面上に表示されているとき、True を返す。</td></tr><tr><td>pygame.display.iconify</td><td>表示面のアイコン化</td></tr><tr><td>pygame.display.toggle_fullscreen</td><td>フルスクリーン表示とウィンドウ表示の切り替え</td></tr><tr><td>pygame.display.set_gamma</td><td>ハードウェアガンマランプの変更</td></tr><tr><td>pygame.display.set_gamma_ramp</td><td>カスタムルックアップによるハードウェアガンマランプの変更</td></tr><tr><td>pygame.display.set_icon</td><td>表示ウィンドウのシステムイメージを変更する</td></tr><tr><td>pygame.display.set_caption</td><td>現在のウィンドウのキャプションを設定する</td></tr><tr><td>pygame.display.get_caption</td><td>現在のウィンドウのキャプションを取得する</td></tr><tr><td>pygame.display.set_palette</td><td>インデックス表示用カラーパレットの設定</td></tr><tr><td>pygame.display.get_num_displays</td><td>表示件数を返す</td></tr><tr><td>pygame.display.get_window_size</td><td>ウィンドウまたは画面の大きさを返す</td></tr><tr><td>pygame.display.get_allow_screensaver</td><td>スクリーンセーバーの実行を許可するかどうかを返す。</td></tr><tr><td>pygame.display.set_allow_screensaver</td><td>スクリーンセーバーの実行可否を設定する</td></tr></tbody></table><h3 id="draw" tabindex="-1">draw <a class="header-anchor" href="#draw" aria-label="Permalink to &quot;draw&quot;">​</a></h3><p>図形を描く</p><table><thead><tr><th>API</th><th>説明</th></tr></thead><tbody><tr><td>pygame.draw.rect</td><td>矩形を描く</td></tr><tr><td>pygame.draw.polygon</td><td>多角形を描く</td></tr><tr><td>pygame.draw.circle</td><td>円を描く</td></tr><tr><td>pygame.draw.ellipse</td><td>だ円を描く</td></tr><tr><td>pygame.draw.arc</td><td>えんちょうせんをひく</td></tr><tr><td>pygame.draw.line</td><td>直線を引く</td></tr><tr><td>pygame.draw.lines</td><td>複数の連続した直線を引く</td></tr><tr><td>pygame.draw.aaline</td><td>アンチエイリアスの直線を描く</td></tr><tr><td>pygame.draw.aalines</td><td>アンチエイリアスのかかった連続した複数の直線セグメントを描画します。</td></tr></tbody></table><h3 id="event" tabindex="-1">event <a class="header-anchor" href="#event" aria-label="Permalink to &quot;event&quot;">​</a></h3><p>イベントとキューを操作する</p><table><thead><tr><th>API</th><th>説明</th></tr></thead><tbody><tr><td>pygame.event.pump</td><td>pygame のイベントハンドラを内部で処理する</td></tr><tr><td>pygame.event.get</td><td>キューからイベントを取得する</td></tr><tr><td>pygame.event.poll</td><td>キューから1つのイベントを取得する</td></tr><tr><td>pygame.event.wait</td><td>待ち行列から単一のイベントを待つ</td></tr><tr><td>pygame.event.peek</td><td>イベントタイプがキューで待機しているかどうかのテスト</td></tr><tr><td>pygame.event.clear</td><td>キューからすべてのイベントを削除する</td></tr><tr><td>pygame.event.event_name</td><td>イベントIDから文字列名を取得する</td></tr><tr><td>pygame.event.set_blocked</td><td>どのイベントをキューに入れるかを制御する</td></tr><tr><td>pygame.event.set_allowed</td><td>どのイベントをキューに入れるかを制御する</td></tr><tr><td>pygame.event.get_blocked</td><td>ある種のイベントがキューからブロックされているかどうかをテストします。</td></tr><tr><td>pygame.event.set_grab</td><td>他のアプリケーションとの入力デバイスの共有制御</td></tr><tr><td>pygame.event.get_grab</td><td>プログラムが入力デバイスを共有しているかどうかをテストする</td></tr><tr><td>pygame.event.post</td><td>新しいイベントをキューに入れる</td></tr><tr><td>pygame.event.custom_type</td><td>カスタムユーザイベントタイプの作成</td></tr><tr><td>pygame.event.Event</td><td>イベントを表現するための pygame オブジェクト。</td></tr></tbody></table><h3 id="font" tabindex="-1">font <a class="header-anchor" href="#font" aria-label="Permalink to &quot;font&quot;">​</a></h3><p>フォントの読み込みとレンダリング</p><table><thead><tr><th>API</th><th>説明</th></tr></thead><tbody><tr><td>pygame.font.init</td><td>フォントモジュールの初期化</td></tr><tr><td>pygame.font.quit</td><td>フォントモジュールの非初期化</td></tr><tr><td>pygame.font.get_init</td><td>フォントモジュールが初期化されている場合はtrue</td></tr><tr><td>pygame.font.get_default_font</td><td>デフォルトフォントのファイル名を取得する</td></tr><tr><td>pygame.font.get_sdl_ttf_version</td><td>SDL_ttf のバージョンを取得します。</td></tr><tr><td>pygame.font.get_fonts</td><td>すべての利用可能なフォントを取得する</td></tr><tr><td>pygame.font.match_font</td><td>システム上で特定のフォントを見つける</td></tr><tr><td>pygame.font.SysFont</td><td>システムフォントからFontオブジェクトを作成する</td></tr><tr><td>pygame.font.Font</td><td>ファイルから新しいFontオブジェクトを作成する</td></tr></tbody></table><h4 id="pygame-font-font" tabindex="-1">pygame.font.Font <a class="header-anchor" href="#pygame-font-font" aria-label="Permalink to &quot;pygame.font.Font&quot;">​</a></h4><table><thead><tr><th>API</th><th>説明</th></tr></thead><tbody><tr><td>pygame.font.Font.bold</td><td>フォントを（擬似）太字で表示するかどうかを取得または設定します。</td></tr><tr><td>pygame.font.Font.italic</td><td>フォントを（擬似）イタリック体で表示するかどうかを取得または設定します。</td></tr><tr><td>pygame.font.Font.underline</td><td>フォントに下線を引くかどうかを取得または設定します。</td></tr><tr><td>pygame.font.Font.strikethrough</td><td>フォントに取り消し線を表示するかどうかを取得または設定します。</td></tr><tr><td>pygame.font.Font.render</td><td>新しいSurfaceにテキストを描画する</td></tr><tr><td>pygame.font.Font.size</td><td>テキストをレンダリングするのに必要な容量を決定する</td></tr><tr><td>pygame.font.Font.set_underline</td><td>テキストにアンダーラインを引くかどうかを制御します。</td></tr><tr><td>pygame.font.Font.get_underline</td><td>テキストに下線を引くかどうかをチェックします。</td></tr><tr><td>pygame.font.Font.set_strikethrough</td><td>テキストを取り消し線付きで表示するかどうかを制御します。</td></tr><tr><td>pygame.font.Font.get_strikethrough</td><td>テキストに取り消し線が表示されるかどうかをチェックします。</td></tr><tr><td>pygame.font.Font.set_bold</td><td>太字のフェイクレンダリングを有効にする</td></tr><tr><td>pygame.font.Font.get_bold</td><td>テキストを太字にするかどうかをチェックします。</td></tr><tr><td>pygame.font.Font.set_italic</td><td>イタリック体の偽レンダリングを有効にする</td></tr><tr><td>pygame.font.Font.metrics</td><td>渡された文字列の各文字のメトリクスを取得します。</td></tr><tr><td>pygame.font.Font.get_italic</td><td>テキストをイタリック体として表示するかどうかをチェックします。</td></tr><tr><td>pygame.font.Font.get_linesize</td><td>フォントテキストの行間を取得する</td></tr><tr><td>pygame.font.Font.get_height</td><td>フォントの高さを取得する</td></tr><tr><td>pygame.font.Font.get_ascent</td><td>聳え立つ</td></tr><tr><td>pygame.font.Font.get_descent</td><td>フォントの下降を取得する</td></tr></tbody></table><h3 id="image" tabindex="-1">image <a class="header-anchor" href="#image" aria-label="Permalink to &quot;image&quot;">​</a></h3><p>画像転送</p><table><thead><tr><th>API</th><th>説明</th></tr></thead><tbody><tr><td>pygame.image.load</td><td>ファイル（またはファイル類似オブジェクト）から新しい画像をロードする。</td></tr><tr><td>pygame.image.save</td><td>画像をファイル（またはファイル的オブジェクト）に保存する</td></tr><tr><td>pygame.image.get_sdl_image_version</td><td>使用している SDL_Image ライブラリのバージョン番号を取得します。</td></tr><tr><td>pygame.image.get_extended</td><td>拡張画像形式が読み込めるかどうかのテスト</td></tr><tr><td>pygame.image.tostring</td><td>画像をバイトバッファに転送する</td></tr><tr><td>pygame.image.tobytes</td><td>画像をバイトバッファに転送する</td></tr><tr><td>pygame.image.fromstring</td><td>バイトバッファから新しいSurfaceを作成する</td></tr><tr><td>pygame.image.frombytes</td><td>バイトバッファから新しいSurfaceを作成する</td></tr><tr><td>pygame.image.frombuffer</td><td>バイトバッファ内のデータを共有する Surface を新規に作成する。</td></tr><tr><td>pygame.image.load_basic</td><td>ファイル（またはファイルのようなオブジェクト）から新しいBMP画像をロードします。</td></tr><tr><td>pygame.image.load_extended</td><td>ファイル（またはファイル類似オブジェクト）から画像を読み込む</td></tr><tr><td>pygame.image.save_extended</td><td>png/jpg イメージをファイル（またはファイル的オブジェクト）に保存する。</td></tr></tbody></table><h3 id="key" tabindex="-1">key <a class="header-anchor" href="#key" aria-label="Permalink to &quot;key&quot;">​</a></h3><p>キーボード</p><table><thead><tr><th>API</th><th>説明</th></tr></thead><tbody><tr><td>pygame.key.get_focused</td><td>ディスプレイがシステムからキーボード入力を受け取っている場合、true を返します。</td></tr><tr><td>pygame.key.get_pressed</td><td>すべてのキーボードボタンの状態を取得する</td></tr><tr><td>pygame.key.get_mods</td><td>どのモディファイアキーが押されているかを判断する</td></tr><tr><td>pygame.key.set_mods</td><td>どのモディファイアキーが押されるかを一時的に設定する</td></tr><tr><td>pygame.key.set_repeat</td><td>ホールドされたキーの繰り返しを制御する</td></tr><tr><td>pygame.key.get_repeat</td><td>ホールドキーの繰り返しを見る</td></tr><tr><td>pygame.key.name</td><td>キー識別子の名前を取得する</td></tr><tr><td>pygame.key.key_code</td><td>キー名からキー識別子を取得する</td></tr><tr><td>pygame.key.start_text_input</td><td>Unicodeテキスト入力イベントの処理を開始</td></tr><tr><td>pygame.key.stop_text_input</td><td>Unicodeテキスト入力イベントの処理を停止する</td></tr><tr><td>pygame.key.set_text_input_rect</td><td>は、候補リストの位置を制御します。</td></tr></tbody></table><h3 id="locals" tabindex="-1">locals <a class="header-anchor" href="#locals" aria-label="Permalink to &quot;locals&quot;">​</a></h3><h3 id="mixer" tabindex="-1">mixer <a class="header-anchor" href="#mixer" aria-label="Permalink to &quot;mixer&quot;">​</a></h3><p>サウンドをロードして再生する</p><table><thead><tr><th>API</th><th>説明</th></tr></thead><tbody><tr><td>pygame.mixer.init</td><td>ミキサーモジュールの初期化</td></tr><tr><td>pygame.mixer.pre_init</td><td>ミキサーの初期化引数を設定します。</td></tr><tr><td>pygame.mixer.quit</td><td>ミキサーのアンイニシャライズ</td></tr><tr><td>pygame.mixer.get_init</td><td>ミキサーが初期化されているかどうかのテスト</td></tr><tr><td>pygame.mixer.stop</td><td>全音階の再生を停止する</td></tr><tr><td>pygame.mixer.pause</td><td>全音声チャネルの再生を一時的に停止する</td></tr><tr><td>pygame.mixer.unpause</td><td>一時停止した音声チャンネルの再生を再開する</td></tr><tr><td>pygame.mixer.fadeout</td><td>すべての音のボリュームをフェードアウトさせてから停止させる</td></tr><tr><td>pygame.mixer.set_num_channels</td><td>総再生チャンネル数を設定する</td></tr><tr><td>pygame.mixer.get_num_channels</td><td>総再生チャンネル数を取得</td></tr><tr><td>pygame.mixer.set_reserved</td><td>リザーブチャンネルを自動的に使用しない</td></tr><tr><td>pygame.mixer.find_channel</td><td>あぼーんする</td></tr><tr><td>pygame.mixer.get_busy</td><td>音が混ざっているかどうかを調べる</td></tr><tr><td>pygame.mixer.get_sdl_mixer_version</td><td>ミキサーの SDL バージョンを取得します。</td></tr><tr><td>pygame.mixer.Sound</td><td>ファイルまたはバッファオブジェクトから新規サウンドオブジェクトを作成する。</td></tr><tr><td>pygame.mixer.Channel</td><td>再生を制御するためのChannelオブジェクトを作成する</td></tr></tbody></table><h4 id="pygame-mixer-sound" tabindex="-1">pygame.mixer.Sound <a class="header-anchor" href="#pygame-mixer-sound" aria-label="Permalink to &quot;pygame.mixer.Sound&quot;">​</a></h4><table><thead><tr><th>API</th><th>説明</th></tr></thead><tbody><tr><td>pygame.mixer.Sound.play</td><td>音声再生開始</td></tr><tr><td>pygame.mixer.Sound.stop</td><td>音声の再生を停止する</td></tr><tr><td>pygame.mixer.Sound.fadeout</td><td>フェードアウト後、音を止めて再生する</td></tr><tr><td>pygame.mixer.Sound.set_volume</td><td>このサウンドの再生音量を設定する</td></tr><tr><td>pygame.mixer.Sound.get_volume</td><td>再生音量を得る</td></tr><tr><td>pygame.mixer.Sound.get_num_channels</td><td>このサウンドが何回流れているか数えてみてください</td></tr><tr><td>pygame.mixer.Sound.get_length</td><td>サウンドの長さを取得する</td></tr><tr><td>pygame.mixer.Sound.get_raw</td><td>サウンドサンプルのバイト列コピーを返します。</td></tr></tbody></table><h4 id="pygame-mixer-channel" tabindex="-1">pygame.mixer.Channel <a class="header-anchor" href="#pygame-mixer-channel" aria-label="Permalink to &quot;pygame.mixer.Channel&quot;">​</a></h4><table><thead><tr><th>API</th><th>説明</th></tr></thead><tbody><tr><td>pygame.mixer.Channel.play</td><td>特定のチャンネルで音声を再生する</td></tr><tr><td>pygame.mixer.Channel.stop</td><td>チャンネル再生を停止する</td></tr><tr><td>pygame.mixer.Channel.pause</td><td>チャンネルの再生を一時的に停止する</td></tr><tr><td>pygame.mixer.Channel.unpause</td><td>チャンネル再生の一時停止を再開する</td></tr><tr><td>pygame.mixer.Channel.fadeout</td><td>フェードアウト後の停止再生チャンネル</td></tr><tr><td>pygame.mixer.Channel.set_volume</td><td>再生中のチャンネルの音量を設定する</td></tr><tr><td>pygame.mixer.Channel.get_volume</td><td>再生中のチャンネルの音量を取得する</td></tr><tr><td>pygame.mixer.Channel.get_busy</td><td>チャンネルがアクティブかどうかチェックする</td></tr><tr><td>pygame.mixer.Channel.get_sound</td><td>現在再生中のサウンドを取得</td></tr><tr><td>pygame.mixer.Channel.queue</td><td>をキューに入れ、サウンドオブジェクトを現在の</td></tr><tr><td>pygame.mixer.Channel.get_queue</td><td>キューイングされているサウンドを返す</td></tr><tr><td>pygame.mixer.Channel.set_endevent</td><td>再生停止時にチャンネルからイベントが送信されるようにする</td></tr><tr><td>pygame.mixer.Channel.get_endevent</td><td>再生が停止したときにチャンネルが送信するイベントを取得する</td></tr></tbody></table><h3 id="mouse" tabindex="-1">mouse <a class="header-anchor" href="#mouse" aria-label="Permalink to &quot;mouse&quot;">​</a></h3><p>マウスを操作する</p><table><thead><tr><th>API</th><th>説明</th></tr></thead><tbody><tr><td>pygame.mouse.get_pressed</td><td>マウスボタンの状態を取得する</td></tr><tr><td>pygame.mouse.get_pos</td><td>マウスカーソルの位置を取得する</td></tr><tr><td>pygame.mouse.get_rel</td><td>マウスの移動量を取得する</td></tr><tr><td>pygame.mouse.set_pos</td><td>マウスカーソルの位置を設定する</td></tr><tr><td>pygame.mouse.set_visible</td><td>マウスカーソルの表示/非表示</td></tr><tr><td>pygame.mouse.get_visible</td><td>マウスカーソルの現在の可視性状態を取得する</td></tr><tr><td>pygame.mouse.get_focused</td><td>ディスプレイにマウスが入力されているかどうかを確認する</td></tr><tr><td>pygame.mouse.set_cursor</td><td>マウスカーソルを新しいカーソルに設定する</td></tr><tr><td>pygame.mouse.get_cursor</td><td>現在のマウスカーソルを取得する</td></tr></tbody></table><h3 id="rect" tabindex="-1">Rect <a class="header-anchor" href="#rect" aria-label="Permalink to &quot;Rect&quot;">​</a></h3><p>矩形座標を格納するオブジェクト。</p><table><thead><tr><th>API</th><th>説明</th></tr></thead><tbody><tr><td>pygame.Rect.copy</td><td>矩形をコピーする</td></tr><tr><td>pygame.Rect.move</td><td>矩形を移動させる</td></tr><tr><td>pygame.Rect.move_ip</td><td>は矩形を移動させます。</td></tr><tr><td>pygame.Rect.inflate</td><td>矩形の大きさを拡大または縮小する</td></tr><tr><td>pygame.Rect.inflate_ip</td><td>矩形のサイズを拡大または縮小します。</td></tr><tr><td>pygame.Rect.update</td><td>矩形の位置と大きさを設定します。</td></tr><tr><td>pygame.Rect.clamp</td><td>矩形を別の矩形の内側に移動します。</td></tr><tr><td>pygame.Rect.clamp_ip</td><td>矩形を別の矩形の内側に移動させます。</td></tr><tr><td>pygame.Rect.clip</td><td>矩形を内側に切り取る</td></tr><tr><td>pygame.Rect.clipline</td><td>矩形内に線を引く</td></tr><tr><td>pygame.Rect.union</td><td>２つの矩形を一つにする</td></tr><tr><td>pygame.Rect.union_ip</td><td>２つの矩形を即座に一つにする</td></tr><tr><td>pygame.Rect.unionall</td><td>複数の矩形を融合する</td></tr><tr><td>pygame.Rect.unionall_ip</td><td>複数の矩形を即座に融合する</td></tr><tr><td>pygame.Rect.fit</td><td>アスペクト比を持つ矩形のリサイズと移動</td></tr><tr><td>pygame.Rect.normalize</td><td>現在のネガティブサイズ</td></tr><tr><td>pygame.Rect.contains</td><td>ある矩形が別の矩形の中にあるかどうかをテストする</td></tr><tr><td>pygame.Rect.collidepoint</td><td>点が矩形の内側にあるかどうかをテストする</td></tr><tr><td>pygame.Rect.colliderect</td><td>2つの矩形が重なるかどうかをテストする</td></tr><tr><td>pygame.Rect.collidelist</td><td>リスト内の1つの矩形が交差しているかどうかをテストする</td></tr><tr><td>pygame.Rect.collidelistall</td><td>リスト内のすべての矩形が交差しているかどうかをテストする</td></tr><tr><td>pygame.Rect.collideobjects</td><td>リスト内のオブジェクトが交差しているかどうかをテストする</td></tr><tr><td>pygame.Rect.collideobjectsall</td><td>リスト内のすべてのオブジェクトが交差しているかどうかをテストする</td></tr><tr><td>pygame.Rect.collidedict</td><td>辞書の中のある矩形が交差しているかどうかをテストする</td></tr><tr><td>pygame.Rect.collidedictall</td><td>辞書に含まれるすべての矩形が交差しているかどうかをテストする</td></tr></tbody></table><h3 id="surface" tabindex="-1">Surface <a class="header-anchor" href="#surface" aria-label="Permalink to &quot;Surface&quot;">​</a></h3><p>画像を表現する</p><table><thead><tr><th>API</th><th>説明</th></tr></thead><tbody><tr><td>pygame.Surface.blit</td><td>描き重ねる</td></tr><tr><td>pygame.Surface.blits</td><td>描き重ねる</td></tr><tr><td>pygame.Surface.convert</td><td>画像のピクセル形式を変更する</td></tr><tr><td>pygame.Surface.convert_alpha</td><td>画像のピクセルフォーマットを変更する（ピクセル単位のアルファを含む）。</td></tr><tr><td>pygame.Surface.copy</td><td>Surfaceの新しいコピーを作成する</td></tr><tr><td>pygame.Surface.fill</td><td>Surfaceをベタで塗りつぶす</td></tr><tr><td>pygame.Surface.scroll</td><td>サーフェスイメージを所定の位置に移動させる</td></tr><tr><td>pygame.Surface.set_colorkey</td><td>透明なカラーキーを設定する</td></tr><tr><td>pygame.Surface.get_colorkey</td><td>現在の透明なカラーキーを取得する</td></tr><tr><td>pygame.Surface.set_alpha</td><td>フルサーフェイスイメージのアルファ値を設定する</td></tr><tr><td>pygame.Surface.get_alpha</td><td>現在のサーフェスの透明度の値を取得します。</td></tr><tr><td>pygame.Surface.lock</td><td>ピクセル・アクセス用にサーフェス・メモリをロックする</td></tr><tr><td>pygame.Surface.unlock</td><td>Surfaceのメモリをピクセルアクセスから解放</td></tr><tr><td>pygame.Surface.mustlock</td><td>サーフェスのロックが必要かどうかのテスト</td></tr><tr><td>pygame.Surface.get_locked</td><td>Surfaceが現在ロックされているかどうかをテストする</td></tr><tr><td>pygame.Surface.get_locks</td><td>サーフェスのロックを取得する</td></tr><tr><td>pygame.Surface.get_at</td><td>一画素の色値を取得する</td></tr><tr><td>pygame.Surface.set_at</td><td>1つのピクセルの色値を設定する</td></tr><tr><td>pygame.Surface.get_at_mapped</td><td>1画素のマッピングされた色値を取得する</td></tr><tr><td>pygame.Surface.get_palette</td><td>8ビットSurfaceのカラーインデックスパレットを取得する</td></tr><tr><td>pygame.Surface.get_palette_at</td><td>パレット内の単一のエントリの色を取得する</td></tr><tr><td>pygame.Surface.set_palette</td><td>8ビットSurfaceのカラーパレットを設定する</td></tr><tr><td>pygame.Surface.set_palette_at</td><td>8ビットSurfaceパレットで、1つのインデックスに色を設定します。</td></tr><tr><td>pygame.Surface.map_rgb</td><td>色をマッピングされた色値に変換する</td></tr><tr><td>pygame.Surface.unmap_rgb</td><td>マッピングされた整数の色値を Color に変換します。</td></tr><tr><td>pygame.Surface.set_clip</td><td>サーフェスの現在のクリッピングエリアを設定します。</td></tr><tr><td>pygame.Surface.get_clip</td><td>サーフェスの現在のクリッピングエリアを取得する</td></tr><tr><td>pygame.Surface.subsurface</td><td>親を参照する新しいサーフェスを作成する</td></tr><tr><td>pygame.Surface.get_parent</td><td>サブサーフェスの親を探す</td></tr><tr><td>pygame.Surface.get_abs_parent</td><td>サブサーフェスのトップレベルの親を見つける</td></tr><tr><td>pygame.Surface.get_offset</td><td>おやのなかにあるこのせいめんをさがす</td></tr><tr><td>pygame.Surface.get_abs_offset</td><td>トップレベル親内の子サブサーフェスの絶対位置を求める</td></tr><tr><td>pygame.Surface.get_size</td><td>サーフェスの寸法を取得する</td></tr><tr><td>pygame.Surface.get_width</td><td>サーフェスの幅を取得する</td></tr><tr><td>pygame.Surface.get_height</td><td>サーフェスの高さを取得する</td></tr><tr><td>pygame.Surface.get_rect</td><td>サーフェスの長方形の面積を取得する</td></tr><tr><td>pygame.Surface.get_bitsize</td><td>Surface ピクセル形式のビット深度を取得する</td></tr><tr><td>pygame.Surface.get_bytesize</td><td>Surface ピクセルあたりの使用バイト数を取得する</td></tr><tr><td>pygame.Surface.get_flags</td><td>Surfaceに使用される追加フラグを取得する</td></tr><tr><td>pygame.Surface.get_pitch</td><td>Surface1行あたりの使用バイト数を取得する</td></tr><tr><td>pygame.Surface.get_masks</td><td>色とマッピングされた整数の間の変換に必要なビットマスク。</td></tr><tr><td>pygame.Surface.set_masks</td><td>色とマッピングされた整数の間の変換に必要なビットマスクを設定します。</td></tr><tr><td>pygame.Surface.get_shifts</td><td>色とマッピングされた整数の間の変換に必要なビットシフト量</td></tr><tr><td>pygame.Surface.set_shifts</td><td>色とマッピングされた整数の間の変換に必要なビットシフトを設定します。</td></tr><tr><td>pygame.Surface.get_losses</td><td>色とマッピングされた整数の間の変換に使用される有効ビット</td></tr><tr><td>pygame.Surface.get_bounding_rect</td><td>データを含む最小の矩形を見つける</td></tr><tr><td>pygame.Surface.get_view</td><td>Surfaceのピクセルのバッファービューを返します。</td></tr><tr><td>pygame.Surface.get_buffer</td><td>Surfaceのピクセルのためのバッファオブジェクトを取得します。</td></tr><tr><td>pygame.Surface._pixels_address</td><td>画素バッファアドレス</td></tr></tbody></table><h3 id="time" tabindex="-1">time <a class="header-anchor" href="#time" aria-label="Permalink to &quot;time&quot;">​</a></h3><p>時間監視</p><table><thead><tr><th>API</th><th>説明</th></tr></thead><tbody><tr><td>pygame.time.get_ticks</td><td>ミリ秒単位で時間を取得する</td></tr><tr><td>pygame.time.wait</td><td>一定時間、プログラムを一時停止する</td></tr><tr><td>pygame.time.delay</td><td>一定時間、プログラムを一時停止する</td></tr><tr><td>pygame.time.set_timer</td><td>イベントキューに繰り返しイベントを作成する</td></tr><tr><td>pygame.time.Clock</td><td>時間を記録するためのオブジェクトを作成します。</td></tr></tbody></table><h4 id="pygame-time-clock" tabindex="-1">pygame.time.Clock <a class="header-anchor" href="#pygame-time-clock" aria-label="Permalink to &quot;pygame.time.Clock&quot;">​</a></h4><table><thead><tr><th>API</th><th>説明</th></tr></thead><tbody><tr><td>pygame.time.Clock.tick</td><td>時計を更新する</td></tr><tr><td>pygame.time.Clock.tick_busy_loop</td><td>時計を更新する</td></tr><tr><td>pygame.time.Clock.get_time</td><td>前刻の使用時間</td></tr><tr><td>pygame.time.Clock.get_rawtime</td><td>前刻の実時間</td></tr><tr><td>pygame.time.Clock.get_fps</td><td>クロックフレームレートを計算する</td></tr></tbody></table><h3 id="music" tabindex="-1">music <a class="header-anchor" href="#music" aria-label="Permalink to &quot;music&quot;">​</a></h3><p>ストリーミングオーディオを制御する</p><table><thead><tr><th>API</th><th>説明</th></tr></thead><tbody><tr><td>pygame.mixer.music.load</td><td>音楽ファイルを読み込んで再生する</td></tr><tr><td>pygame.mixer.music.unload</td><td>現在ロードされている音楽をアンロードしてリソースを解放する</td></tr><tr><td>pygame.mixer.music.play</td><td>音楽ストリームの再生開始</td></tr><tr><td>pygame.mixer.music.rewind</td><td>リスタートミュージック</td></tr><tr><td>pygame.mixer.music.stop</td><td>音楽再生を停止する</td></tr><tr><td>pygame.mixer.music.pause</td><td>音楽再生一時停止</td></tr><tr><td>pygame.mixer.music.unpause</td><td>レジューム・ポーズド・ミュージック</td></tr><tr><td>pygame.mixer.music.fadeout</td><td>フェードアウトして音楽再生を停止する</td></tr><tr><td>pygame.mixer.music.set_volume</td><td>音楽の音量を設定する</td></tr><tr><td>pygame.mixer.music.get_volume</td><td>音量を上げる</td></tr><tr><td>pygame.mixer.music.get_busy</td><td>音楽ストリームが再生されているかどうかを確認する</td></tr><tr><td>pygame.mixer.music.set_pos</td><td>おどりばを設定する</td></tr><tr><td>pygame.mixer.music.get_pos</td><td>音楽の再生時間を確保する</td></tr><tr><td>pygame.mixer.music.queue</td><td>をキューに入れ、その後にサウンドファイルが続きます。</td></tr><tr><td>pygame.mixer.music.set_endevent</td><td>再生停止時に音楽からイベントが送られるようにする</td></tr><tr><td>pygame.mixer.music.get_endevent</td><td>再生が停止したときにチャンネルが送信するイベントを取得する</td></tr></tbody></table><h3 id="pygame" tabindex="-1">pygame <a class="header-anchor" href="#pygame" aria-label="Permalink to &quot;pygame&quot;">​</a></h3><p>トップレベルのpygameパッケージ</p><table><thead><tr><th>API</th><th>説明</th></tr></thead><tbody><tr><td>pygame.init</td><td>インポートされたすべての pygame モジュールを初期化します。</td></tr><tr><td>pygame.quit</td><td>すべての pygame モジュールの初期化を解除します。</td></tr><tr><td>pygame.get_init</td><td>pygameが現在初期化されている場合、Trueを返します。</td></tr><tr><td>pygame.error</td><td>標準的な pygame の例外</td></tr><tr><td>pygame.get_error</td><td>現在のエラーメッセージを取得する</td></tr><tr><td>pygame.set_error</td><td>現在のエラーメッセージを設定する</td></tr><tr><td>pygame.get_sdl_version</td><td>SDLのバージョン番号を取得する</td></tr><tr><td>pygame.get_sdl_byteorder</td><td>SDL のバイトオーダーを取得する</td></tr><tr><td>pygame.register_quit</td><td>pygame が終了するときに呼び出される関数を登録します。</td></tr><tr><td>pygame.encode_string</td><td>Unicodeまたはbytesオブジェクトをエンコードする</td></tr><tr><td>pygame.encode_file_path</td><td>Unicodeまたはbytesオブジェクトをファイルシステムのパスとしてエンコードします。</td></tr></tbody></table><h2 id="高度なもの" tabindex="-1">高度なもの: <a class="header-anchor" href="#高度なもの" aria-label="Permalink to &quot;高度なもの:&quot;">​</a></h2><h3 id="pygame-cursors" tabindex="-1">pygame.cursors <a class="header-anchor" href="#pygame-cursors" aria-label="Permalink to &quot;pygame.cursors&quot;">​</a></h3><p>カーソルリソース</p><table><thead><tr><th>API</th><th>説明</th></tr></thead><tbody><tr><td>pygame.cursors.compile</td><td>単純な文字列からバイナリカーソルデータを作成する</td></tr><tr><td>pygame.cursors.load_xbm</td><td>XBMファイルからカーソルデータを読み込む</td></tr><tr><td>pygame.cursors.Cursor</td><td>カーソルを表す pygame オブジェクト。</td></tr></tbody></table><h4 id="pygame-cursors-cursor" tabindex="-1">pygame.cursors.Cursor <a class="header-anchor" href="#pygame-cursors-cursor" aria-label="Permalink to &quot;pygame.cursors.Cursor&quot;">​</a></h4><table><thead><tr><th>API</th><th>説明</th></tr></thead><tbody><tr><td>pygame.cursors.Cursor.copy</td><td></td></tr><tr><td>pygame.cursors.Cursor.type</td><td>カーソルの種類を取得する</td></tr><tr><td>pygame.cursors.Cursor.data</td><td>カーソルデータの取得</td></tr></tbody></table><h3 id="pygame-joystick" tabindex="-1">pygame.joystick <a class="header-anchor" href="#pygame-joystick" aria-label="Permalink to &quot;pygame.joystick&quot;">​</a></h3><p>ジョイスティック、ゲームパッド、トラックボールと対話する</p><table><thead><tr><th>API</th><th>説明</th></tr></thead><tbody><tr><td>pygame.joystick.init</td><td>ジョイスティックモジュールを初期化する。</td></tr><tr><td>pygame.joystick.quit</td><td>ジョイスティックモジュールをアンイニシャライズする。</td></tr><tr><td>pygame.joystick.get_init</td><td>ジョイスティックモジュールが初期化されていればTrueを返します。</td></tr><tr><td>pygame.joystick.get_count</td><td>ジョイスティックの本数を返します。</td></tr><tr><td>pygame.joystick.Joystick</td><td>ジョイスティックオブジェクトを新規に作成します。</td></tr></tbody></table><h4 id="pygame-joystick-joystick" tabindex="-1">pygame.joystick.Joystick <a class="header-anchor" href="#pygame-joystick-joystick" aria-label="Permalink to &quot;pygame.joystick.Joystick&quot;">​</a></h4><table><thead><tr><th>API</th><th>説明</th></tr></thead><tbody><tr><td>pygame.joystick.Joystick.init</td><td>ジョイスティックの初期化</td></tr><tr><td>pygame.joystick.Joystick.quit</td><td>ジョイスティックのアンイニシャライズ</td></tr><tr><td>pygame.joystick.Joystick.get_init</td><td>ジョイスティックが初期化されているか確認する</td></tr><tr><td>pygame.joystick.Joystick.get_id</td><td>デバイスインデックスを取得する（非推奨）</td></tr><tr><td>pygame.joystick.Joystick.get_instance_id</td><td>ジョイスティックのインスタンスIDを取得する</td></tr><tr><td>pygame.joystick.Joystick.get_guid</td><td>ジョイスティックのGUIDを取得する</td></tr><tr><td>pygame.joystick.Joystick.get_power_level</td><td>デバイスのおおよその電源状態を把握する</td></tr><tr><td>pygame.joystick.Joystick.get_name</td><td>ジョイスティックのシステム名を取得する</td></tr><tr><td>pygame.joystick.Joystick.get_numaxes</td><td>ジョイスティックの軸数を取得する</td></tr><tr><td>pygame.joystick.Joystick.get_axis</td><td>軸の現在位置を取得する</td></tr><tr><td>pygame.joystick.Joystick.get_numballs</td><td>ジョイスティックのトラックボール数を取得する</td></tr><tr><td>pygame.joystick.Joystick.get_ball</td><td>トラックボールの相対位置を取得する</td></tr><tr><td>pygame.joystick.Joystick.get_numbuttons</td><td>ジョイスティックのボタン数を取得する</td></tr><tr><td>pygame.joystick.Joystick.get_button</td><td>現在のボタンの状態を取得する</td></tr><tr><td>pygame.joystick.Joystick.get_numhats</td><td>ジョイスティックのハットコントロールの数を取得する</td></tr><tr><td>pygame.joystick.Joystick.get_hat</td><td>ハットの位置を取得する</td></tr><tr><td>pygame.joystick.Joystick.rumble</td><td>ゴロゴロ効果開始</td></tr><tr><td>pygame.joystick.Joystick.stop_rumble</td><td>ランブルエフェクトの再生を停止する</td></tr></tbody></table><h3 id="pygame-mask" tabindex="-1">pygame.mask <a class="header-anchor" href="#pygame-mask" aria-label="Permalink to &quot;pygame.mask&quot;">​</a></h3><p>イメージマスク</p><table><thead><tr><th>API</th><th>説明</th></tr></thead><tbody><tr><td>pygame.mask.from_surface</td><td>与えられたサーフェスからマスクを作成します</td></tr><tr><td>pygame.mask.from_threshold</td><td>閾値処理によるマスクの作成 Surfaces</td></tr><tr><td>pygame.mask.Mask</td><td>2次元ビットマスクを表現するための pygame オブジェクト。</td></tr></tbody></table><h4 id="pygame-mask-mask" tabindex="-1">pygame.mask.Mask <a class="header-anchor" href="#pygame-mask-mask" aria-label="Permalink to &quot;pygame.mask.Mask&quot;">​</a></h4><table><thead><tr><th>API</th><th>説明</th></tr></thead><tbody><tr><td>pygame.mask.Mask.copy</td><td>マスクの新しいコピーを返します。</td></tr><tr><td>pygame.mask.Mask.get_size</td><td>マスクの大きさを返す</td></tr><tr><td>pygame.mask.Mask.get_rect</td><td>マスクのサイズに応じたRectを返します。</td></tr><tr><td>pygame.mask.Mask.get_at</td><td>指定された位置のビットを取得する</td></tr><tr><td>pygame.mask.Mask.set_at</td><td>指定された位置のビットを設定する</td></tr><tr><td>pygame.mask.Mask.overlap</td><td>交点を返す</td></tr><tr><td>pygame.mask.Mask.overlap_area</td><td>重複するセットビットの数を返します。</td></tr><tr><td>pygame.mask.Mask.overlap_mask</td><td>オーバーラップするセットビットのマスクを返す</td></tr><tr><td>pygame.mask.Mask.fill</td><td>すべてのビットを1に設定</td></tr><tr><td>pygame.mask.Mask.clear</td><td>すべてのビットを0に設定</td></tr><tr><td>pygame.mask.Mask.invert</td><td>すべてのビットを反転させる</td></tr><tr><td>pygame.mask.Mask.scale</td><td>マスクのリサイズ</td></tr><tr><td>pygame.mask.Mask.draw</td><td>マスクを別のマスクに描画する</td></tr><tr><td>pygame.mask.Mask.erase</td><td>別のマスクからマスクを消去する</td></tr><tr><td>pygame.mask.Mask.count</td><td>セットされたビットの数を返します。</td></tr><tr><td>pygame.mask.Mask.centroid</td><td>セットされたビットのセントロイドを返す</td></tr><tr><td>pygame.mask.Mask.angle</td><td>設定されたビットの向きを返す</td></tr><tr><td>pygame.mask.Mask.outline</td><td>オブジェクトの外形を示す点のリストを返す</td></tr><tr><td>pygame.mask.Mask.convolve</td><td>このマスクと別のマスクの畳み込みを返す</td></tr><tr><td>pygame.mask.Mask.connected_component</td><td>連結成分を含むマスクを返す</td></tr><tr><td>pygame.mask.Mask.connected_components</td><td>連結成分のマスクのリストを返す</td></tr><tr><td>pygame.mask.Mask.get_bounding_rects</td><td>連結成分の外接矩形のリストを返す</td></tr><tr><td>pygame.mask.Mask.to_surface</td><td>マスクが描かれたサーフェイスを返します。</td></tr></tbody></table><h3 id="pygame-sprite" tabindex="-1">pygame.sprite <a class="header-anchor" href="#pygame-sprite" aria-label="Permalink to &quot;pygame.sprite&quot;">​</a></h3><p>基本的なゲームオブジェクトクラスを持つ</p><table><thead><tr><th>API</th><th>説明</th></tr></thead><tbody><tr><td>pygame.sprite.Sprite</td><td>可視化されたゲームオブジェクトのためのシンプルな基本クラスです。</td></tr><tr><td>pygame.sprite.DirtySprite</td><td>Spriteのサブクラスで、より多くの属性と機能を持つ。</td></tr><tr><td>pygame.sprite.Group</td><td>複数のスプライトオブジェクトを保持・管理するためのコンテナクラスです。</td></tr><tr><td>pygame.sprite.RenderPlain</td><td>pygame.sprite.Groupと同じです。</td></tr><tr><td>pygame.sprite.RenderClear</td><td>pygame.sprite.Groupと同じです。</td></tr><tr><td>pygame.sprite.RenderUpdates</td><td>ダーティアップデートを追跡するグループサブクラス。</td></tr><tr><td>pygame.sprite.OrderedUpdates</td><td>スプライトを追加順に描画するRenderUpdatesのサブクラスです。</td></tr><tr><td>pygame.sprite.LayeredUpdates</td><td>LayeredUpdatesは、OrderedUpdatesと同様にレイヤーを処理し描画するスプライトグループです。</td></tr><tr><td>pygame.sprite.LayeredDirty</td><td>LayeredDirtyグループは、DirtySpriteオブジェクトのためのものです。LayeredUpdatesのサブクラスです。</td></tr><tr><td>pygame.sprite.GroupSingle</td><td>スプライトを1つだけ保持するグループコンテナ。</td></tr><tr><td>pygame.sprite.spritecollide</td><td>グループ内で他のスプライトと交差しているスプライトを探す。</td></tr><tr><td>pygame.sprite.collide_rect</td><td>2つのスプライト間の衝突判定（rectsを使用）。</td></tr><tr><td>pygame.sprite.collide_rect_ratio</td><td>2つのスプライト間の衝突判定。比率に合わせた矩形を使用。</td></tr><tr><td>pygame.sprite.collide_circle</td><td>2つのスプライト間の衝突判定を、円を用いて行う。</td></tr><tr><td>pygame.sprite.collide_circle_ratio</td><td>2つのスプライトの衝突を、比率に応じて拡大縮小された円を使って検出する。</td></tr><tr><td>pygame.sprite.collide_mask</td><td>マスクによる2つのスプライトの衝突判定。</td></tr><tr><td>pygame.sprite.groupcollide</td><td>2つのグループ間で衝突するスプライトをすべて検索します。</td></tr><tr><td>pygame.sprite.spritecollideany</td><td>スプライトがグループ内の何かと交差しているかどうかを簡単にテストします。</td></tr></tbody></table><h4 id="pygame-sprite-sprite" tabindex="-1">pygame.sprite.Sprite <a class="header-anchor" href="#pygame-sprite-sprite" aria-label="Permalink to &quot;pygame.sprite.Sprite&quot;">​</a></h4><table><thead><tr><th>API</th><th>説明</th></tr></thead><tbody><tr><td>pygame.sprite.Sprite.update</td><td>スプライトの動作を制御するメソッド</td></tr><tr><td>pygame.sprite.Sprite.add</td><td>スプライトをグループに追加する</td></tr><tr><td>pygame.sprite.Sprite.remove</td><td>グループからスプライトを削除する</td></tr><tr><td>pygame.sprite.Sprite.kill</td><td>すべてのグループからスプライトを削除します。</td></tr><tr><td>pygame.sprite.Sprite.alive</td><td>スプライトはどのグループにも属しているか</td></tr><tr><td>pygame.sprite.Sprite.groups</td><td>このスプライトを含むグループのリスト</td></tr></tbody></table><h4 id="pygame-sprite-group" tabindex="-1">pygame.sprite.Group <a class="header-anchor" href="#pygame-sprite-group" aria-label="Permalink to &quot;pygame.sprite.Group&quot;">​</a></h4><table><thead><tr><th>API</th><th>説明</th></tr></thead><tbody><tr><td>pygame.sprite.Group.sprites</td><td>このグループに含まれるスプライトのリスト</td></tr><tr><td>pygame.sprite.Group.copy</td><td>グループと重複する</td></tr><tr><td>pygame.sprite.Group.add</td><td>このグループにスプライトを追加する</td></tr><tr><td>pygame.sprite.Group.remove</td><td>グループからスプライトを削除する</td></tr><tr><td>pygame.sprite.Group.has</td><td>グループにスプライトが含まれているかどうかを判定します。</td></tr><tr><td>pygame.sprite.Group.update</td><td>含まれるスプライトのupdateメソッドを呼び出す</td></tr><tr><td>pygame.sprite.Group.draw</td><td>スプライトの画像を吹き飛ばす</td></tr><tr><td>pygame.sprite.Group.clear</td><td>スプライトの上に背景を描画する</td></tr><tr><td>pygame.sprite.Group.empty</td><td>すべてのスプライトを削除</td></tr></tbody></table><h4 id="pygame-sprite-renderupdates" tabindex="-1">pygame.sprite.RenderUpdates <a class="header-anchor" href="#pygame-sprite-renderupdates" aria-label="Permalink to &quot;pygame.sprite.RenderUpdates&quot;">​</a></h4><table><thead><tr><th>API</th><th>説明</th></tr></thead><tbody><tr><td>pygame.sprite.RenderUpdates.draw</td><td>スプライトの画像をブリットし、変化した部分を追跡する。</td></tr></tbody></table><h4 id="pygame-sprite-layeredupdates" tabindex="-1">pygame.sprite.LayeredUpdates <a class="header-anchor" href="#pygame-sprite-layeredupdates" aria-label="Permalink to &quot;pygame.sprite.LayeredUpdates&quot;">​</a></h4><table><thead><tr><th>API</th><th>説明</th></tr></thead><tbody><tr><td>pygame.sprite.LayeredUpdates.add</td><td>スプライトをグループに追加します．</td></tr><tr><td>pygame.sprite.LayeredUpdates.sprites</td><td>スプライトの順序付きリスト（先頭が後ろ、最後が上）を返します。</td></tr><tr><td>pygame.sprite.LayeredUpdates.draw</td><td>すべてのスプライトを正しい順序で、渡された表面に描画します。</td></tr><tr><td>pygame.sprite.LayeredUpdates.get_sprites_at</td><td>は、その位置にあるすべてのスプライトを含むリストを返します。</td></tr><tr><td>pygame.sprite.LayeredUpdates.get_sprite</td><td>グループスプライトのうち、idxの位置にあるスプライトを返します。</td></tr><tr><td>pygame.sprite.LayeredUpdates.remove_sprites_of_layer</td><td>レイヤーからすべてのスプライトを削除し、リストとして返します。</td></tr><tr><td>pygame.sprite.LayeredUpdates.layers</td><td>定義された（ユニークな）レイヤーのリストを、下から順に返します。</td></tr><tr><td>pygame.sprite.LayeredUpdates.change_layer</td><td>スプライトのレイヤーを変更します。</td></tr><tr><td>pygame.sprite.LayeredUpdates.get_layer_of_sprite</td><td>スプライトが現在いるレイヤーを返します。</td></tr><tr><td>pygame.sprite.LayeredUpdates.get_top_layer</td><td>トップレイヤーを返す</td></tr><tr><td>pygame.sprite.LayeredUpdates.get_bottom_layer</td><td>最下層を返します</td></tr><tr><td>pygame.sprite.LayeredUpdates.move_to_front</td><td>スプライトを前面レイヤーに移動させる</td></tr><tr><td>pygame.sprite.LayeredUpdates.move_to_back</td><td>スプライトを一番下のレイヤーに移動します</td></tr><tr><td>pygame.sprite.LayeredUpdates.get_top_sprite</td><td>一番上のスプライトを返す</td></tr><tr><td>pygame.sprite.LayeredUpdates.get_sprites_from_layer</td><td>レイヤーのすべてのスプライトを、追加された順に返します。</td></tr><tr><td>pygame.sprite.LayeredUpdates.switch_layer</td><td>レイヤー1からレイヤー2へのスプライトの切り替えを行います。</td></tr></tbody></table><h3 id="pygame-sprite-layereddirty" tabindex="-1">pygame.sprite.LayeredDirty <a class="header-anchor" href="#pygame-sprite-layereddirty" aria-label="Permalink to &quot;pygame.sprite.LayeredDirty&quot;">​</a></h3><table><thead><tr><th>API</th><th>説明</th></tr></thead><tbody><tr><td>pygame.sprite.LayeredDirty.draw</td><td>すべてのスプライトを正しい順序で、渡された表面に描画します。</td></tr><tr><td>pygame.sprite.LayeredDirty.clear</td><td>背景を設定するために使用されます。</td></tr><tr><td>pygame.sprite.LayeredDirty.repaint_rect</td><td>与えられた領域を再塗装する</td></tr><tr><td>pygame.sprite.LayeredDirty.set_clip</td><td>描画する領域をクリップします。None（デフォルト）を渡すだけで、クリップがリセットされます。</td></tr><tr><td>pygame.sprite.LayeredDirty.get_clip</td><td>描画する領域をクリップします。None（デフォルト）を渡すだけで、クリップがリセットされます。</td></tr><tr><td>pygame.sprite.LayeredDirty.change_layer</td><td>スプライトのレイヤーを変更します。</td></tr><tr><td>pygame.sprite.LayeredDirty.set_timing_treshold</td><td>閾値をミリ秒単位で設定します。</td></tr><tr><td>pygame.sprite.LayeredDirty.set_timing_threshold</td><td>閾値をミリ秒単位で設定します。</td></tr></tbody></table><h3 id="pygame-transform" tabindex="-1">pygame.transform <a class="header-anchor" href="#pygame-transform" aria-label="Permalink to &quot;pygame.transform&quot;">​</a></h3><p>サーフェスを変換する</p><table><thead><tr><th>API</th><th>説明</th></tr></thead><tbody><tr><td>pygame.transform.flip</td><td>タテヨコ反転</td></tr><tr><td>pygame.transform.scale</td><td>新しい解像度にリサイズする</td></tr><tr><td>pygame.transform.scale_by</td><td>スカラーを使用して新しい解像度にリサイズします。</td></tr><tr><td>pygame.transform.rotate</td><td>画像を回転させる</td></tr><tr><td>pygame.transform.rotozoom</td><td>フィルタリングによる拡大・縮小、回転</td></tr><tr><td>pygame.transform.scale2x</td><td>スペシャライズド・イメージダブラー</td></tr><tr><td>pygame.transform.smoothscale</td><td>表面を任意の大きさに滑らかに拡大する</td></tr><tr><td>pygame.transform.smoothscale_by</td><td>スカラーを使用して新しい解像度にリサイズします。</td></tr><tr><td>pygame.transform.get_smoothscale_backend</td><td>使用中のスムーススケールフィルタのバージョンを返します。GENERIC&#39;, &#39;MMX&#39;, または &#39;SSE&#39;.</td></tr><tr><td>pygame.transform.set_smoothscale_backend</td><td>smoothscale filter のバージョンを設定します。GENERIC&#39;, &#39;MMX&#39;, または &#39;SSE&#39; のいずれか。</td></tr><tr><td>pygame.transform.chop</td><td>内部領域を削除した画像のコピーを取得する</td></tr><tr><td>pygame.transform.laplacian</td><td>面のエッジを見つける</td></tr><tr><td>pygame.transform.average_surfaces</td><td>多数の表面から平均的な表面を求める。</td></tr><tr><td>pygame.transform.average_color</td><td>は、表面の平均色を求める</td></tr><tr><td>pygame.transform.threshold</td><td>は、&#39;search_color&#39; または &#39;search_surf&#39; の閾値内にあるサーフェイスのピクセル数とその数を求めます。</td></tr></tbody></table><h3 id="pygame-bufferproxy" tabindex="-1">pygame.BufferProxy <a class="header-anchor" href="#pygame-bufferproxy" aria-label="Permalink to &quot;pygame.BufferProxy&quot;">​</a></h3><p>配列プロトコルで表面バッファをエクスポートするオブジェクト</p><table><thead><tr><th>API</th><th>説明</th></tr></thead><tbody><tr><td>pygame.BufferProxy.parent</td><td>ラップされた輸出用オブジェクトを返す。</td></tr><tr><td>pygame.BufferProxy.length</td><td>エクスポートされるバッファのサイズ（バイト）。</td></tr><tr><td>pygame.BufferProxy.raw</td><td>エクスポートされたバッファを1バイトのブロックとしてコピーしたもの。</td></tr><tr><td>pygame.BufferProxy.write</td><td>オブジェクトバッファに生バイトを書き込む。</td></tr></tbody></table><h3 id="pygame-freetype" tabindex="-1">pygame.freetype <a class="header-anchor" href="#pygame-freetype" aria-label="Permalink to &quot;pygame.freetype&quot;">​</a></h3><p>フォントの読み込みとレンダリング</p><table><thead><tr><th>API</th><th>説明</th></tr></thead><tbody><tr><td>pygame.freetype.get_error</td><td>最新のFreeTypeエラーを返します。</td></tr><tr><td>pygame.freetype.get_version</td><td>FreeType のバージョンを返します。</td></tr><tr><td>pygame.freetype.init</td><td>基盤となる FreeType ライブラリを初期化する。</td></tr><tr><td>pygame.freetype.quit</td><td>基盤となるFreeTypeライブラリをシャットダウンします。</td></tr><tr><td>pygame.freetype.get_init</td><td>FreeType モジュールが現在初期化されている場合、True を返す。</td></tr><tr><td>pygame.freetype.was_init</td><td>廃止されました。代わりに get_init() を使用する。</td></tr><tr><td>pygame.freetype.get_cache_size</td><td>グリフケースサイズを返す</td></tr><tr><td>pygame.freetype.get_default_resolution</td><td>デフォルトのピクセルサイズを1インチあたりのドット数で返します。</td></tr><tr><td>pygame.freetype.set_default_resolution</td><td>モジュールのデフォルトのピクセルサイズを1インチあたりのドット数で設定します。</td></tr><tr><td>pygame.freetype.SysFont</td><td>システムフォントからFontオブジェクトを作成する</td></tr><tr><td>pygame.freetype.get_default_font</td><td>デフォルトフォントのファイル名取得</td></tr><tr><td>pygame.freetype.Font</td><td>サポートされているフォントファイルから新しいFontインスタンスを作成します。</td></tr></tbody></table><h4 id="pygame-freetype-font" tabindex="-1">pygame.freetype.Font <a class="header-anchor" href="#pygame-freetype-font" aria-label="Permalink to &quot;pygame.freetype.Font&quot;">​</a></h4><table><thead><tr><th>API</th><th>説明</th></tr></thead><tbody><tr><td>pygame.freetype.Font.name</td><td>適切なフォント名。</td></tr><tr><td>pygame.freetype.Font.path</td><td>フォントファイルのパス</td></tr><tr><td>pygame.freetype.Font.size</td><td>レンダリング時に使用されるデフォルトのポイントサイズ</td></tr><tr><td>pygame.freetype.Font.get_rect</td><td>レンダリングされたテキストのサイズとオフセットを返す</td></tr><tr><td>pygame.freetype.Font.get_metrics</td><td>与えられたテキストに対するグリフメトリクスを返す</td></tr><tr><td>pygame.freetype.Font.height</td><td>フォントの高さ（未補正）をフォント単位で指定します。</td></tr><tr><td>pygame.freetype.Font.ascender</td><td>フォントの未補正上昇値をフォント単位で表したもの</td></tr><tr><td>pygame.freetype.Font.descender</td><td>フォントの未補正下降量をフォント単位で表したもの</td></tr><tr><td>pygame.freetype.Font.get_sized_ascender</td><td>フォントの上昇率をピクセル単位で指定します。</td></tr><tr><td>pygame.freetype.Font.get_sized_descender</td><td>フォントの縮小下降をピクセル単位で表す。</td></tr><tr><td>pygame.freetype.Font.get_sized_height</td><td>フォントの高さをピクセル単位でスケーリングしたもの</td></tr><tr><td>pygame.freetype.Font.get_sized_glyph_height</td><td>フォントのスケーリングされたバウンディングボックスの高さをピクセル単位で指定します。</td></tr><tr><td>pygame.freetype.Font.get_sizes</td><td>埋め込みビットマップの利用可能なサイズを返します。</td></tr><tr><td>pygame.freetype.Font.render</td><td>レンダリングしたテキストをサーフェスとして返す</td></tr><tr><td>pygame.freetype.Font.render_to</td><td>既存のサーフェスにテキストをレンダリングする</td></tr><tr><td>pygame.freetype.Font.render_raw</td><td>レンダリングしたテキストをバイト列で返す</td></tr><tr><td>pygame.freetype.Font.render_raw_to</td><td>テキストをint型の配列にレンダリングする</td></tr><tr><td>pygame.freetype.Font.style</td><td>フォントのスタイルフラグ</td></tr><tr><td>pygame.freetype.Font.underline</td><td>フォントの下線スタイルフラグの状態</td></tr><tr><td>pygame.freetype.Font.strong</td><td>フォントの強スタイルフラグの状態</td></tr><tr><td>pygame.freetype.Font.oblique</td><td>フォントの斜体フラグの状態</td></tr><tr><td>pygame.freetype.Font.wide</td><td>フォントのワイドスタイルフラグの状態</td></tr><tr><td>pygame.freetype.Font.strength</td><td>ストロングフォントスタイルまたはワイドフォントスタイルに関連する強度</td></tr><tr><td>pygame.freetype.Font.underline_adjustment</td><td>アンダーライン位置の調整係数</td></tr><tr><td>pygame.freetype.Font.fixed_width</td><td>フォントが固定幅であるかどうかを取得する</td></tr><tr><td>pygame.freetype.Font.fixed_sizes</td><td>フォントで利用可能なビットマップサイズの数</td></tr><tr><td>pygame.freetype.Font.scalable</td><td>フォントがスケーラブルであるかどうかを取得する</td></tr><tr><td>pygame.freetype.Font.use_bitmap_strikes</td><td>アウトラインフォントファイルで埋め込みビットマップを使用できるようにしました。</td></tr><tr><td>pygame.freetype.Font.antialiased</td><td>フォントのアンチエイリアスモード</td></tr><tr><td>pygame.freetype.Font.kerning</td><td>文字カーニングモード</td></tr><tr><td>pygame.freetype.Font.vertical</td><td>フォント垂直モード</td></tr><tr><td>pygame.freetype.Font.rotation</td><td>テキスト回転（左回り</td></tr><tr><td>pygame.freetype.Font.fgcolor</td><td>デフォルトの前景色</td></tr><tr><td>pygame.freetype.Font.bgcolor</td><td>デフォルトの背景色</td></tr><tr><td>pygame.freetype.Font.origin</td><td>テキストオリジンモードへのフォントレンダリング</td></tr><tr><td>pygame.freetype.Font.pad</td><td>水増しバウンダリモード</td></tr><tr><td>pygame.freetype.Font.ucs4</td><td>UCS-4 モードを有効にする</td></tr><tr><td>pygame.freetype.Font.resolution</td><td>画素解像度（ドット/インチ</td></tr></tbody></table><h3 id="pygame-gfxdraw" tabindex="-1">pygame.gfxdraw <a class="header-anchor" href="#pygame-gfxdraw" aria-label="Permalink to &quot;pygame.gfxdraw&quot;">​</a></h3><p>図形を描く</p><table><thead><tr><th>API</th><th>説明</th></tr></thead><tbody><tr><td>pygame.gfxdraw.pixel</td><td>画素を描く</td></tr><tr><td>pygame.gfxdraw.hline</td><td>横線を引く</td></tr><tr><td>pygame.gfxdraw.vline</td><td>たてをひく</td></tr><tr><td>pygame.gfxdraw.line</td><td>線を引く</td></tr><tr><td>pygame.gfxdraw.rectangle</td><td>矩形を描く</td></tr><tr><td>pygame.gfxdraw.box</td><td>矩形を塗りつぶす</td></tr><tr><td>pygame.gfxdraw.circle</td><td>円を描く</td></tr><tr><td>pygame.gfxdraw.aacircle</td><td>アンチエイリアスの円を描く</td></tr><tr><td>pygame.gfxdraw.filled_circle</td><td>円を描く</td></tr><tr><td>pygame.gfxdraw.ellipse</td><td>だ円を描く</td></tr><tr><td>pygame.gfxdraw.aaellipse</td><td>アンチエイリアスのかかった楕円を描く</td></tr><tr><td>pygame.gfxdraw.filled_ellipse</td><td>だ円を描く</td></tr><tr><td>pygame.gfxdraw.arc</td><td>弧を描く</td></tr><tr><td>pygame.gfxdraw.pie</td><td>パイを描く</td></tr><tr><td>pygame.gfxdraw.trigon</td><td>を描く</td></tr><tr><td>pygame.gfxdraw.aatrigon</td><td>アンチエイリアスのかかった三角形/四角形を描く</td></tr><tr><td>pygame.gfxdraw.filled_trigon</td><td>三角形を塗りつぶす</td></tr><tr><td>pygame.gfxdraw.polygon</td><td>多角形を描く</td></tr><tr><td>pygame.gfxdraw.aapolygon</td><td>アンチエイリアスのかかったポリゴンを描画する</td></tr><tr><td>pygame.gfxdraw.filled_polygon</td><td>塗りつぶし多角形を描画する</td></tr><tr><td>pygame.gfxdraw.textured_polygon</td><td>テクスチャ付きポリゴンを描画する</td></tr><tr><td>pygame.gfxdraw.bezier</td><td>ベジェ曲線を描く</td></tr></tbody></table><h3 id="pygame-midi" tabindex="-1">pygame.midi <a class="header-anchor" href="#pygame-midi" aria-label="Permalink to &quot;pygame.midi&quot;">​</a></h3><p>midi の入出力に対応</p><table><thead><tr><th>API</th><th>説明</th></tr></thead><tbody><tr><td>pygame.midi.init</td><td>MIDIモジュールの初期化</td></tr><tr><td>pygame.midi.quit</td><td>MIDIモジュールのアンイニシャライズ</td></tr><tr><td>pygame.midi.get_init</td><td>midiモジュールが現在初期化されている場合、Trueを返します。</td></tr><tr><td>pygame.midi.Input</td><td>Inputは、MIDI機器からのMIDI入力を取得するために使用します。</td></tr><tr><td>pygame.midi.Output</td><td>出力は、出力デバイスにミディを送るために使用します</td></tr><tr><td>pygame.midi.get_count</td><td>は、デバイスの数を取得します。</td></tr><tr><td>pygame.midi.get_default_input_id</td><td>デフォルトの入力デバイス番号を取得</td></tr><tr><td>pygame.midi.get_default_output_id</td><td>デフォルトの出力デバイス番号を取得</td></tr><tr><td>pygame.midi.get_device_info</td><td>MIDI 機器に関する情報を返します。</td></tr><tr><td>pygame.midi.midis2events</td><td>midi イベントを pygame イベントに変換します。</td></tr><tr><td>pygame.midi.time</td><td>PortMidiタイマーの現在時刻をms単位で返します。</td></tr><tr><td>pygame.midi.frequency_to_midi</td><td>周波数をMIDIノートに変換します。最も近いMIDI音符に丸めます。</td></tr><tr><td>pygame.midi.midi_to_frequency</td><td>MIDIノートを周波数に変換します。</td></tr><tr><td>pygame.midi.midi_to_ansi_note</td><td>MIDI番号に対応するAnsiノート名を返します。</td></tr><tr><td>pygame.midi.MidiException</td><td>pygame.midiの関数やクラスが発生させることができる例外です。</td></tr></tbody></table><h4 id="pygame-midi-input" tabindex="-1">pygame.midi.Input <a class="header-anchor" href="#pygame-midi-input" aria-label="Permalink to &quot;pygame.midi.Input&quot;">​</a></h4><table><thead><tr><th>API</th><th>説明</th></tr></thead><tbody><tr><td>pygame.midi.Input.close</td><td>MIDIストリームを閉じ、保留中のバッファをすべてフラッシュします。</td></tr><tr><td>pygame.midi.Input.poll</td><td>データがある場合はTrueを、ない場合はFalseを返す。</td></tr><tr><td>pygame.midi.Input.read</td><td>バッファから num_events 個の MIDI イベントを読み込む。</td></tr></tbody></table><h4 id="pygame-midi-output" tabindex="-1">pygame.midi.Output <a class="header-anchor" href="#pygame-midi-output" aria-label="Permalink to &quot;pygame.midi.Output&quot;">​</a></h4><table><thead><tr><th>API</th><th>説明</th></tr></thead><tbody><tr><td>pygame.midi.Output.abort</td><td>発信メッセージの即時終了</td></tr><tr><td>pygame.midi.Output.close</td><td>MIDIストリームを閉じ、保留中のバッファをすべてフラッシュします。</td></tr><tr><td>pygame.midi.Output.note_off</td><td>MIDIノートをオフにします（ノートはオンである必要があります）。</td></tr><tr><td>pygame.midi.Output.note_on</td><td>MIDIノートをオンにします（ノートはオフでなければなりません）。</td></tr><tr><td>pygame.midi.Output.set_instrument</td><td>0～127の値で楽器を選択します。</td></tr><tr><td>pygame.midi.Output.pitch_bend</td><td>チャンネルのピッチを変更する。</td></tr><tr><td>pygame.midi.Output.write</td><td>出力にMIDIデータのリストを書き込む</td></tr><tr><td>pygame.midi.Output.write_short</td><td>出力に最大3バイトのMIDIデータを書き込みます。</td></tr><tr><td>pygame.midi.Output.write_sys_ex</td><td>はタイムスタンプ付きのシステム・エクスクルーシブなMIDIメッセージを書き込む。</td></tr></tbody></table><h3 id="pygame-pixelarray" tabindex="-1">pygame.PixelArray <a class="header-anchor" href="#pygame-pixelarray" aria-label="Permalink to &quot;pygame.PixelArray&quot;">​</a></h3><p>表面のピクセルに直接アクセスするためのオブジェクト</p><table><thead><tr><th>API</th><th>説明</th></tr></thead><tbody><tr><td>pygame.PixelArray.surface</td><td>PixelArrayが使用するSurfaceを取得します。</td></tr><tr><td>pygame.PixelArray.itemsize</td><td>画素配列項目のバイトサイズを返します。</td></tr><tr><td>pygame.PixelArray.ndim</td><td>次元数を返します。</td></tr><tr><td>pygame.PixelArray.shape</td><td>配列のサイズを返します。</td></tr><tr><td>pygame.PixelArray.strides</td><td>配列の各次元に対応するバイトオフセットを返す。</td></tr><tr><td>pygame.PixelArray.make_surface</td><td>現在のPixelArrayから新しいSurfaceを作成します。</td></tr><tr><td>pygame.PixelArray.replace</td><td>PixelArray 内の渡された色を別の色に置き換えます。</td></tr><tr><td>pygame.PixelArray.extract</td><td>PixelArrayから渡された色を抽出する。</td></tr><tr><td>pygame.PixelArray.compare</td><td>PixelArray を別のものと比較する。</td></tr><tr><td>pygame.PixelArray.transpose</td><td>X軸とY軸を交換する。</td></tr><tr><td>pygame.PixelArray.close</td><td>PixelArray をクローズし、Surface ロックを解除します。</td></tr></tbody></table><h3 id="pygame-pixelcopy" tabindex="-1">pygame.pixelcopy <a class="header-anchor" href="#pygame-pixelcopy" aria-label="Permalink to &quot;pygame.pixelcopy&quot;">​</a></h3><p>一般的なピクセル配列のコピー</p><table><thead><tr><th>API</th><th>説明</th></tr></thead><tbody><tr><td>pygame.pixelcopy.surface_to_array</td><td>表面のピクセルを配列オブジェクトにコピーする</td></tr><tr><td>pygame.pixelcopy.array_to_surface</td><td>配列オブジェクトをサーフェスにコピーする</td></tr><tr><td>pygame.pixelcopy.map_array</td><td>表面形式を使用して、配列を別の配列にコピーします。</td></tr><tr><td>pygame.pixelcopy.make_surface</td><td>配列を新しい表面にコピーする</td></tr></tbody></table><h3 id="pygame-sndarray" tabindex="-1">pygame.sndarray <a class="header-anchor" href="#pygame-sndarray" aria-label="Permalink to &quot;pygame.sndarray&quot;">​</a></h3><p>サウンドサンプルデータにアクセスする</p><table><thead><tr><th>API</th><th>説明</th></tr></thead><tbody><tr><td>pygame.sndarray.array</td><td>サウンドサンプルを配列にコピーする</td></tr><tr><td>pygame.sndarray.samples</td><td>参照 サウンドサンプルを配列に格納</td></tr><tr><td>pygame.sndarray.make_sound</td><td>配列をSoundオブジェクトに変換する</td></tr><tr><td>pygame.sndarray.use_arraytype</td><td>サウンドアレイに使用するアレイシステムを設定します。</td></tr><tr><td>pygame.sndarray.get_arraytype</td><td>現在アクティブな配列の種類を取得します。</td></tr><tr><td>pygame.sndarray.get_arraytypes</td><td>現在サポートされているアレイシステムの種類を取得します。</td></tr></tbody></table><h3 id="pygame-surfarray" tabindex="-1">pygame.surfarray <a class="header-anchor" href="#pygame-surfarray" aria-label="Permalink to &quot;pygame.surfarray&quot;">​</a></h3><p>配列インタフェースを用いて表面ピクセルデータにアクセスする</p><table><thead><tr><th>API</th><th>説明</th></tr></thead><tbody><tr><td>pygame.surfarray.array2d</td><td>画素を2次元配列にコピーする</td></tr><tr><td>pygame.surfarray.pixels2d</td><td>画素を2次元配列に参照する</td></tr><tr><td>pygame.surfarray.array3d</td><td>ピクセルを3次元配列にコピーする</td></tr><tr><td>pygame.surfarray.pixels3d</td><td>画素を3次元配列に参照する</td></tr><tr><td>pygame.surfarray.array_alpha</td><td>画素のアルファ値を2次元配列にコピーします。</td></tr><tr><td>pygame.surfarray.pixels_alpha</td><td>参照画素のアルファを2次元配列にする</td></tr><tr><td>pygame.surfarray.array_red</td><td>赤の画素を2次元配列にコピーする</td></tr><tr><td>pygame.surfarray.pixels_red</td><td>参照画素の赤を2次元配列に変換する。</td></tr><tr><td>pygame.surfarray.array_green</td><td>緑色の画素を2次元配列にコピーする</td></tr><tr><td>pygame.surfarray.pixels_green</td><td>参照画素の緑を2次元配列にする。</td></tr><tr><td>pygame.surfarray.array_blue</td><td>青色のピクセルを2次元配列にコピーする</td></tr><tr><td>pygame.surfarray.pixels_blue</td><td>参照画素の青を2次元配列にする。</td></tr><tr><td>pygame.surfarray.array_colorkey</td><td>カラーキーの値を2次元配列にコピーします。</td></tr><tr><td>pygame.surfarray.make_surface</td><td>配列を新しい表面にコピーする</td></tr><tr><td>pygame.surfarray.blit_array</td><td>配列の値から直接ブリットする</td></tr><tr><td>pygame.surfarray.map_array</td><td>3次元配列から2次元配列へのマッピング</td></tr><tr><td>pygame.surfarray.use_arraytype</td><td>サーフェスアレイに使用するアレイシステムを設定します。</td></tr><tr><td>pygame.surfarray.get_arraytype</td><td>現在アクティブな配列の種類を取得します。</td></tr><tr><td>pygame.surfarray.get_arraytypes</td><td>現在サポートされているアレイシステムの種類を取得します。</td></tr></tbody></table><h3 id="pygame-math" tabindex="-1">pygame.math <a class="header-anchor" href="#pygame-math" aria-label="Permalink to &quot;pygame.math&quot;">​</a></h3><p>ベクタークラス</p><table><thead><tr><th>API</th><th>説明</th></tr></thead><tbody><tr><td>pygame.math.clamp</td><td>最小値と最大値にクランプされた値を返す。</td></tr><tr><td>pygame.math.Vector2</td><td>2次元ベクトル</td></tr><tr><td>pygame.math.Vector3</td><td>3次元ベクトル</td></tr></tbody></table><h4 id="pygame-math-vector2" tabindex="-1">pygame.math.Vector2 <a class="header-anchor" href="#pygame-math-vector2" aria-label="Permalink to &quot;pygame.math.Vector2&quot;">​</a></h4><table><thead><tr><th>API</th><th>説明</th></tr></thead><tbody><tr><td>pygame.math.Vector2.dot</td><td>もう一方のベクトルとの内積またはスカラー積を計算します。</td></tr><tr><td>pygame.math.Vector2.cross</td><td>交差積またはベクトル積を計算します。</td></tr><tr><td>pygame.math.Vector2.magnitude</td><td>EuclideanMagnitude関数は、ベクトルのユークリッド法での大きさを返します。</td></tr><tr><td>pygame.math.Vector2.magnitude_squared</td><td>ベクトルの大きさの2乗を返します。</td></tr><tr><td>pygame.math.Vector2.length</td><td>Euclidean Length関数は、ベクトルのユークリッド方向の長さを返します。</td></tr><tr><td>pygame.math.Vector2.length_squared</td><td>ベクトルのユークリッド長を2乗したものを返します。</td></tr><tr><td>pygame.math.Vector2.normalize</td><td>は同じ方向で長さが1のベクトルを返します。</td></tr><tr><td>pygame.math.Vector2.normalize_ip</td><td>その長さが1になるように，その場のベクトルを正規化する。</td></tr><tr><td>pygame.math.Vector2.is_normalized</td><td>ベクトルが正規化されているかどうか，すなわち長さが == 1であるかどうかを調べます。</td></tr><tr><td>pygame.math.Vector2.scale_to_length</td><td>ベクトルを与えられた長さにスケールします。</td></tr><tr><td>pygame.math.Vector2.reflect</td><td>指定された法線を反映したベクトルを返します。</td></tr><tr><td>pygame.math.Vector2.reflect_ip</td><td>与えられた法線のベクトルをその場に反映させる。</td></tr><tr><td>pygame.math.Vector2.distance_to</td><td>与えられたベクトルに対するユークリッド距離を計算します。</td></tr><tr><td>pygame.math.Vector2.distance_squared_to</td><td>与えられたベクトルに対するユークリッド距離の2乗を計算します。</td></tr><tr><td>pygame.math.Vector2.move_towards</td><td>指定された距離だけターゲットに向かって移動したベクトルを返します。</td></tr><tr><td>pygame.math.Vector2.move_towards_ip</td><td>指定された距離のターゲットに向かってベクトルを移動させます。</td></tr><tr><td>pygame.math.Vector2.lerp</td><td>与えられたベクトルに対して線形補間を行う。</td></tr><tr><td>pygame.math.Vector2.slerp</td><td>与えられたベクトルに対する球面補間を返します。</td></tr><tr><td>pygame.math.Vector2.elementwise</td><td>次の操作は、要素ごとに行われます。</td></tr><tr><td>pygame.math.Vector2.rotate</td><td>ベクトルを指定された角度（度）だけ回転させます。</td></tr><tr><td>pygame.math.Vector2.rotate_rad</td><td>ベクトルをラジアン単位で指定した角度だけ回転させます。</td></tr><tr><td>pygame.math.Vector2.rotate_ip</td><td>ベクトルを所定の角度（度）だけ回転させます。</td></tr><tr><td>pygame.math.Vector2.rotate_ip_rad</td><td>ベクトルをラジアン単位で指定された角度だけ回転させます。</td></tr><tr><td>pygame.math.Vector2.rotate_rad_ip</td><td>ベクトルをラジアン単位で指定された角度だけ回転させます。</td></tr><tr><td>pygame.math.Vector2.angle_to</td><td>指定されたベクトルに対する角度を度単位で計算します。</td></tr><tr><td>pygame.math.Vector2.as_polar</td><td>半径方向の距離と方位角のタプルを返す。</td></tr><tr><td>pygame.math.Vector2.from_polar</td><td>極座標タプルからxとyを設定する。</td></tr><tr><td>pygame.math.Vector2.project</td><td>ベクトルを別のベクトルに投影します。</td></tr><tr><td>pygame.math.Vector2.copy</td><td>自分自身のコピーを返す。</td></tr><tr><td>pygame.math.Vector2.clamp_magnitude</td><td>大きさがmax_lengthとmin_lengthの間でクランプされたベクトルのコピーを返す。</td></tr><tr><td>pygame.math.Vector2.clamp_magnitude_ip</td><td>ベクトルの大きさを max_length と min_length の間でクランプする。</td></tr><tr><td>pygame.math.Vector2.update</td><td>ベクトルの座標を設定する。</td></tr><tr><td>pygame.math.Vector2.epsilon</td><td>ベクトル計算の許容範囲を決定します。</td></tr></tbody></table><h4 id="pygame-math-vector3" tabindex="-1">pygame.math.Vector3 <a class="header-anchor" href="#pygame-math-vector3" aria-label="Permalink to &quot;pygame.math.Vector3&quot;">​</a></h4><table><thead><tr><th>API</th><th>説明</th></tr></thead><tbody><tr><td>pygame.math.Vector3.dot</td><td>もう一方のベクトルとの内積またはスカラー積を計算します。</td></tr><tr><td>pygame.math.Vector3.cross</td><td>交差積またはベクトル積を計算します。</td></tr><tr><td>pygame.math.Vector3.magnitude</td><td>Euclidean Magnitude関数は、ベクトルのユークリッド法での大きさを返します。</td></tr><tr><td>pygame.math.Vector3.magnitude_squared</td><td>ベクトルのユークリッド変換後の大きさを2乗した値を返します。</td></tr><tr><td>pygame.math.Vector3.length</td><td>Euclidean Length関数は、ベクトルのユークリッド方向の長さを返します。</td></tr><tr><td>pygame.math.Vector3.length_squared</td><td>ベクトルのユークリッド長を2乗したものを返します。</td></tr><tr><td>pygame.math.Vector3.normalize</td><td>は同じ方向で長さが1のベクトルを返します。</td></tr><tr><td>pygame.math.Vector3.normalize_ip</td><td>その長さが1になるように，その場のベクトルを正規化する。</td></tr><tr><td>pygame.math.Vector3.is_normalized</td><td>ベクトルが正規化されているかどうか，すなわち長さが == 1であるかどうかを調べます。</td></tr><tr><td>pygame.math.Vector3.scale_to_length</td><td>ベクトルを与えられた長さにスケールします。</td></tr><tr><td>pygame.math.Vector3.reflect</td><td>指定された法線を反映したベクトルを返します。</td></tr><tr><td>pygame.math.Vector3.reflect_ip</td><td>与えられた法線のベクトルをその場に反映させる。</td></tr><tr><td>pygame.math.Vector3.distance_to</td><td>与えられたベクトルに対するユークリッド距離を計算します。</td></tr><tr><td>pygame.math.Vector3.distance_squared_to</td><td>与えられたベクトルに対するユークリッド距離の2乗を計算します。</td></tr><tr><td>pygame.math.Vector3.move_towards</td><td>指定された距離だけターゲットに向かって移動したベクトルを返します。</td></tr><tr><td>pygame.math.Vector3.move_towards_ip</td><td>指定された距離のターゲットに向かってベクトルを移動させます。</td></tr><tr><td>pygame.math.Vector3.lerp</td><td>与えられたベクトルに対して線形補間を行う。</td></tr><tr><td>pygame.math.Vector3.slerp</td><td>与えられたベクトルに対する球面補間を返します。</td></tr><tr><td>pygame.math.Vector3.elementwise</td><td>次の操作は、要素ごとに行われます。</td></tr><tr><td>pygame.math.Vector3.rotate</td><td>ベクトルを指定された角度（度）だけ回転させます。</td></tr><tr><td>pygame.math.Vector3.rotate_rad</td><td>ベクトルをラジアン単位で指定した角度だけ回転させます。</td></tr><tr><td>pygame.math.Vector3.rotate_ip</td><td>ベクトルを所定の角度（度）だけ回転させます。</td></tr><tr><td>pygame.math.Vector3.rotate_ip_rad</td><td>ベクトルをラジアン単位で指定された角度だけ回転させます。</td></tr><tr><td>pygame.math.Vector3.rotate_rad_ip</td><td>ベクトルをラジアン単位で指定された角度だけ回転させます。</td></tr><tr><td>pygame.math.Vector3.rotate_x</td><td>ベクトルを x 軸まわりに角度（度）で回転させる。</td></tr><tr><td>pygame.math.Vector3.rotate_x_rad</td><td>ベクトルを x 軸まわりにラジアン単位で回転させる。</td></tr><tr><td>pygame.math.Vector3.rotate_x_ip</td><td>ベクトルを x 軸まわりに所定の角度（度）だけ回転させる。</td></tr><tr><td>pygame.math.Vector3.rotate_x_ip_rad</td><td>ベクトルを x 軸まわりにラジアン単位の角度で回転させる。</td></tr><tr><td>pygame.math.Vector3.rotate_x_rad_ip</td><td>ベクトルを x 軸まわりにラジアン単位の角度で回転させる。</td></tr><tr><td>pygame.math.Vector3.rotate_y</td><td>ベクトルを y 軸まわりに角度（度）で回転させる。</td></tr><tr><td>pygame.math.Vector3.rotate_y_rad</td><td>ベクトルを y 軸まわりにラジアン単位で回転させる。</td></tr><tr><td>pygame.math.Vector3.rotate_y_ip</td><td>ベクトルを y 軸まわりに所定の角度（度）だけ回転させる。</td></tr><tr><td>pygame.math.Vector3.rotate_y_ip_rad</td><td>ベクトルを y 軸まわりにラジアン単位の角度で回転させる。</td></tr><tr><td>pygame.math.Vector3.rotate_y_rad_ip</td><td>ベクトルを y 軸まわりにラジアン単位の角度で回転させる。</td></tr><tr><td>pygame.math.Vector3.rotate_z</td><td>ベクトルをz軸まわりに角度（度）で回転させる。</td></tr><tr><td>pygame.math.Vector3.rotate_z_rad</td><td>ベクトルをz軸の周りにラジアン単位で回転させます。</td></tr><tr><td>pygame.math.Vector3.rotate_z_ip</td><td>ベクトルをz軸まわりに所定の角度（度）だけ回転させる。</td></tr><tr><td>pygame.math.Vector3.rotate_z_ip_rad</td><td>ベクトルをz軸まわりにラジアン単位の角度で回転させる。</td></tr><tr><td>pygame.math.Vector3.rotate_z_rad_ip</td><td>ベクトルをz軸まわりにラジアン単位の角度で回転させる。</td></tr><tr><td>pygame.math.Vector3.angle_to</td><td>指定されたベクトルに対する角度を度単位で計算します。</td></tr><tr><td>pygame.math.Vector3.as_spherical</td><td>半径方向の距離、傾き、方位角のタプルを返します。</td></tr><tr><td>pygame.math.Vector3.from_spherical</td><td>球座標の3タプルからx,y,zを設定する。</td></tr><tr><td>pygame.math.Vector3.project</td><td>ベクトルを別のベクトルに投影します。</td></tr><tr><td>pygame.math.Vector3.copy</td><td>自分自身のコピーを返す。</td></tr><tr><td>pygame.math.Vector3.clamp_magnitude</td><td>大きさがmax_lengthとmin_lengthの間でクランプされたベクトルのコピーを返します。</td></tr><tr><td>pygame.math.Vector3.clamp_magnitude_ip</td><td>ベクトルの大きさを max_length と min_length の間でクランプする。</td></tr><tr><td>pygame.math.Vector3.update</td><td>ベクトルの座標を設定する。</td></tr><tr><td>pygame.math.Vector3.epsilon</td><td>ベクトル計算の許容範囲を決定します。</td></tr></tbody></table><h2 id="その他" tabindex="-1">その他: <a class="header-anchor" href="#その他" aria-label="Permalink to &quot;その他:&quot;">​</a></h2><h3 id="pygame-camera" tabindex="-1">pygame.camera <a class="header-anchor" href="#pygame-camera" aria-label="Permalink to &quot;pygame.camera&quot;">​</a></h3><p>カメラ用モジュール</p><table><thead><tr><th>API</th><th>説明</th></tr></thead><tbody><tr><td>pygame.camera.init</td><td>モジュールの初期化</td></tr><tr><td>pygame.camera.get_backends</td><td>このシステムでサポートされているバックエンドを取得する</td></tr><tr><td>pygame.camera.colorspace</td><td>サーフェス色空間変換</td></tr><tr><td>pygame.camera.list_cameras</td><td>利用可能なカメラの一覧を返します。</td></tr><tr><td>pygame.camera.Camera</td><td>カメラをセットする</td></tr></tbody></table><h4 id="pygame-camera-camera" tabindex="-1">pygame.camera.Camera <a class="header-anchor" href="#pygame-camera-camera" aria-label="Permalink to &quot;pygame.camera.Camera&quot;">​</a></h4><table><thead><tr><th>API</th><th>説明</th></tr></thead><tbody><tr><td>pygame.camera.Camera.start</td><td>オープン・初期化し、キャプチャを開始します。</td></tr><tr><td>pygame.camera.Camera.stop</td><td>カメラの停止、アンイニシャライズ、クローズ</td></tr><tr><td>pygame.camera.Camera.get_controls</td><td>ユーザーコントロールの現在値を取得する</td></tr><tr><td>pygame.camera.Camera.set_controls</td><td>カメラでサポートされている場合、カメラの設定を変更する</td></tr><tr><td>pygame.camera.Camera.get_size</td><td>記録される画像の寸法を返す</td></tr><tr><td>pygame.camera.Camera.query_image</td><td>フレームの準備ができたかどうかをチェックします</td></tr><tr><td>pygame.camera.Camera.get_image</td><td>画像をSurfaceとして取り込む</td></tr><tr><td>pygame.camera.Camera.get_raw</td><td>変更されていない画像をバイトで返します。</td></tr></tbody></table><h3 id="pygame-context" tabindex="-1">pygame.context <a class="header-anchor" href="#pygame-context" aria-label="Permalink to &quot;pygame.context&quot;">​</a></h3><p>システムに関する追加のコンテキストを提供する</p><table><thead><tr><th>API</th><th>説明</th></tr></thead><tbody><tr><td>pygame.context.get_pref_path</td><td>アプリ用の書き込み可能なフォルダーを取得する</td></tr><tr><td>pygame.context.get_pref_locales</td><td>システムで設定されている優先ロケールを取得する</td></tr></tbody></table><h3 id="pygame-sdl2-controller" tabindex="-1">pygame._sdl2.controller <a class="header-anchor" href="#pygame-sdl2-controller" aria-label="Permalink to &quot;pygame._sdl2.controller&quot;">​</a></h3><p>コントローラを扱うモジュール</p><table><thead><tr><th>API</th><th>説明</th></tr></thead><tbody><tr><td>pygame._sdl2.controller.init</td><td>コントローラモジュールの初期化</td></tr><tr><td>pygame._sdl2.controller.quit</td><td>コントローラモジュールの初期化を解除します。</td></tr><tr><td>pygame._sdl2.controller.get_init</td><td>コントローラモジュールが初期化されている場合、True を返します。</td></tr><tr><td>pygame._sdl2.controller.set_eventstate</td><td>コントローラに関するイベントの現在の状態を設定します。</td></tr><tr><td>pygame._sdl2.controller.get_eventstate</td><td>コントローラに関するイベントの現在の状態を取得します。</td></tr><tr><td>pygame._sdl2.controller.get_count</td><td>ジョイスティックの接続台数を取得</td></tr><tr><td>pygame._sdl2.controller.is_controller</td><td>与えられたジョイスティックがゲームコントローラインタフェースでサポートされているかどうかを確認する</td></tr><tr><td>pygame._sdl2.controller.name_forindex</td><td>コントローラの名前を取得します。</td></tr><tr><td>pygame._sdl2.controller.Controller</td><td>Controllerオブジェクトを新規に作成します。</td></tr></tbody></table><h4 id="pygame-sdl2-controller-controller" tabindex="-1">pygame._sdl2.controller.Controller <a class="header-anchor" href="#pygame-sdl2-controller-controller" aria-label="Permalink to &quot;pygame._sdl2.controller.Controller&quot;">​</a></h4><table><thead><tr><th>API</th><th>説明</th></tr></thead><tbody><tr><td>pygame._sdl2.controller.Controller.quit</td><td>コントローラの初期化</td></tr><tr><td>pygame._sdl2.controller.Controller.get_init</td><td>コントローラーが初期化されているかを確認する</td></tr><tr><td>pygame._sdl2.controller.Controller.from_joystick</td><td>pygame.joystick.JoystickオブジェクトからControllerを作成します。</td></tr><tr><td>pygame._sdl2.controller.Controller.attached</td><td>コントローラーが開かれ、現在接続されているかどうかを確認します。</td></tr><tr><td>pygame._sdl2.controller.Controller.as_joystick</td><td>pygame.joystick.Joystick()オブジェクトを返します。</td></tr><tr><td>pygame._sdl2.controller.Controller.get_axis</td><td>ジョイスティック軸の現在の状態を取得する</td></tr><tr><td>pygame._sdl2.controller.Controller.get_button</td><td>ボタンの現在の状態を取得する</td></tr><tr><td>pygame._sdl2.controller.Controller.get_mapping</td><td>コントローラに割り当てられたマッピングを取得します。</td></tr><tr><td>pygame._sdl2.controller.Controller.set_mapping</td><td>コントローラにマッピングを割り当てる</td></tr><tr><td>pygame._sdl2.controller.Controller.rumble</td><td>ゴロゴロ効果開始</td></tr><tr><td>pygame._sdl2.controller.Controller.stop_rumble</td><td>ランブルエフェクトの再生を停止する</td></tr></tbody></table><h3 id="pygame-examples" tabindex="-1">pygame.examples <a class="header-anchor" href="#pygame-examples" aria-label="Permalink to &quot;pygame.examples&quot;">​</a></h3><p>プログラム例集</p><table><thead><tr><th>API</th><th>説明</th></tr></thead><tbody><tr><td>pygame.examples.aliens.main</td><td>エイリアンの例をフルで再生する</td></tr><tr><td>pygame.examples.stars.main</td><td>シンプルなスターフィールドの例を実行する</td></tr><tr><td>pygame.examples.chimp.main</td><td>動き回るチンパンジーにぶつける</td></tr><tr><td>pygame.examples.moveit.main</td><td>アニメーションを表示する</td></tr><tr><td>pygame.examples.fonty.main</td><td>フォントレンダリングの例を実行する</td></tr><tr><td>pygame.examples.freetype_misc.main</td><td>FreeTypeレンダリングの例を実行する</td></tr><tr><td>pygame.examples.vgrade.main</td><td>たてのグラデーションを表示する</td></tr><tr><td>pygame.examples.eventlist.main</td><td>pygameのイベントを表示する</td></tr><tr><td>pygame.examples.arraydemo.main</td><td>様々なサーフアレー効果を発揮する</td></tr><tr><td>pygame.examples.sound.main</td><td>読み込んで演奏する</td></tr><tr><td>pygame.examples.sound_array_demos.main</td><td>様々なsndarrayのエフェクトを再生する</td></tr><tr><td>pygame.examples.liquid.main</td><td>リキッドアニメーションを表示する</td></tr><tr><td>pygame.examples.glcube.main</td><td>OpenGLを使った3Dキューブアニメーションの表示</td></tr><tr><td>pygame.examples.scrap_clipboard.main</td><td>クリップボードにアクセスする</td></tr><tr><td>pygame.examples.mask.main</td><td>複数の画像を衝突検出で跳ね返し表示する</td></tr><tr><td>pygame.examples.testsprite.main</td><td>ぎゃあぎゃあ騒ぐ</td></tr><tr><td>pygame.examples.headless_no_windows_needed.main</td><td>入力ファイルを平滑化したイメージファイルを作成する。</td></tr><tr><td>pygame.examples.joystick.main</td><td>ジョイスティック機能のデモ</td></tr><tr><td>pygame.examples.blend_fill.main</td><td>surface.fillメソッドの様々なブレンドオプションのデモ</td></tr><tr><td>pygame.examples.blit_blends.main</td><td>は、surface.fill の代替となる追加フィルを使用します。</td></tr><tr><td>pygame.examples.cursors.main</td><td>2種類のカスタムカーソルを表示</td></tr><tr><td>pygame.examples.pixelarray.main</td><td>様々なピクセルアレイ生成エフェクトを表示</td></tr><tr><td>pygame.examples.scaletest.main</td><td>smoothscaleを使ったインタラクティブな画像の拡大縮小</td></tr><tr><td>pygame.examples.midi.main</td><td>midiの例を実行する</td></tr><tr><td>pygame.examples.scroll.main</td><td>画像を拡大表示するSurface.scrollのサンプルを実行する</td></tr><tr><td>pygame.examples.camera.main</td><td>カメラで撮影したライブ映像を表示する</td></tr><tr><td>pygame.examples.playmus.main</td><td>オーディオファイルを再生する</td></tr></tbody></table><h3 id="pygame-fastevent" tabindex="-1">pygame.fastevent <a class="header-anchor" href="#pygame-fastevent" aria-label="Permalink to &quot;pygame.fastevent&quot;">​</a></h3><p>イベントとキューを操作する</p><table><thead><tr><th>API</th><th>説明</th></tr></thead><tbody><tr><td>pygame.fastevent.init</td><td>pygame.fasteventの初期化</td></tr><tr><td>pygame.fastevent.get_init</td><td>fasteventモジュールが現在初期化されている場合、Trueを返します。</td></tr><tr><td>pygame.fastevent.pump</td><td>pygame のイベントハンドラを内部で処理する</td></tr><tr><td>pygame.fastevent.wait</td><td>イベントを待つ</td></tr><tr><td>pygame.fastevent.poll</td><td>イベントを取得する</td></tr><tr><td>pygame.fastevent.get</td><td>キューからすべてのイベントを取得する</td></tr><tr><td>pygame.fastevent.post</td><td>イベントをキューに入れる</td></tr></tbody></table><h3 id="pygame-scrap" tabindex="-1">pygame.scrap <a class="header-anchor" href="#pygame-scrap" aria-label="Permalink to &quot;pygame.scrap&quot;">​</a></h3><p>クリップボードをサポートする</p><table><thead><tr><th>API</th><th>説明</th></tr></thead><tbody><tr><td>pygame.scrap.init</td><td>scrap モジュールを初期化する。</td></tr><tr><td>pygame.scrap.get_init</td><td>現在、scrap モジュールが初期化されている場合、True を返します。</td></tr><tr><td>pygame.scrap.get</td><td>指定された型のデータをクリップボードから取得します。</td></tr><tr><td>pygame.scrap.get_types</td><td>利用可能なクリップボードの種類の一覧を取得します。</td></tr><tr><td>pygame.scrap.put</td><td>データをクリップボードに配置する。</td></tr><tr><td>pygame.scrap.contains</td><td>指定された型のデータがクリップボードにあるかどうかを調べます。</td></tr><tr><td>pygame.scrap.lost</td><td>クリップボードの所有権がpygameアプリケーションによって失われたかどうかを示す。</td></tr><tr><td>pygame.scrap.set_mode</td><td>クリップボードアクセスモードを設定します。</td></tr></tbody></table><h3 id="pygame-tests" tabindex="-1">pygame.tests <a class="header-anchor" href="#pygame-tests" aria-label="Permalink to &quot;pygame.tests&quot;">​</a></h3><p>Pygame ユニットテストスイートパッケージ</p><table><thead><tr><th>API</th><th>説明</th></tr></thead><tbody><tr><td>pygame.tests.run</td><td>pygameのユニットテストスイートを実行します。</td></tr></tbody></table><h3 id="pygame-sdl2-touch" tabindex="-1">pygame._sdl2.touch <a class="header-anchor" href="#pygame-sdl2-touch" aria-label="Permalink to &quot;pygame._sdl2.touch&quot;">​</a></h3><p>タッチ入力を扱う</p><table><thead><tr><th>API</th><th>説明</th></tr></thead><tbody><tr><td>pygame._sdl2.touch.get_num_devices</td><td>タッチデバイスの数を取得する</td></tr><tr><td>pygame._sdl2.touch.get_device</td><td>指定されたインデックスに対応するタッチデバイスIDを取得します。</td></tr><tr><td>pygame._sdl2.touch.get_num_fingers</td><td>タッチデバイスの有効な指の数</td></tr><tr><td>pygame._sdl2.touch.get_finger</td><td>指を動かす</td></tr></tbody></table><h3 id="pygame-version" tabindex="-1">pygame.version <a class="header-anchor" href="#pygame-version" aria-label="Permalink to &quot;pygame.version&quot;">​</a></h3><p>バージョン情報モジュール</p><table><thead><tr><th>API</th><th>説明</th></tr></thead><tbody><tr><td>pygame.version.ver</td><td>バージョン番号を文字列で指定します。</td></tr><tr><td>pygame.version.vernum</td><td>バージョンのタプル整数値</td></tr><tr><td>pygame.version.rev</td><td>ビルドのリポジトリリビジョン</td></tr><tr><td>pygame.version.SDL</td><td>SDL ライブラリのバージョンのタプル整数値</td></tr></tbody></table>',156),p=[m];function y(o,i,g,l,s,n){return d(),e("div",null,p)}const u=t(a,[["render",y]]);export{c as __pageData,u as default};
