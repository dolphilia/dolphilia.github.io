import{_ as a,o as e,c as o,R as t}from"./chunks/framework.320df067.js";const b=JSON.parse('{"title":"サーバーのバックアップ","description":"","frontmatter":{},"headers":[],"relativePath":"translation/mastodon/running/backups.md","filePath":"translation/mastodon/running/backups.md","lastUpdated":1676784496000}'),i={name:"translation/mastodon/running/backups.md"},r=t('<h1 id="サーバーのバックアップ" tabindex="-1">サーバーのバックアップ <a class="header-anchor" href="#サーバーのバックアップ" aria-label="Permalink to &quot;サーバーのバックアップ&quot;">​</a></h1><p>定期的なバックアップを設定する（オプション。）</p><p>実際に使用する場合は、Mastodonサーバーを定期的にバックアップすることをお勧めします。</p><nav class="table-of-contents"><ul><li><a href="#概要">概要</a></li><li><a href="#故障モード">故障モード</a></li><li><a href="#アプリケーションシークレットのバックアップ">アプリケーションシークレットのバックアップ</a></li><li><a href="#postgresqlのバックアップ">PostgreSQLのバックアップ</a></li><li><a href="#ユーザがアップロードしたファイルのバックアップ">ユーザがアップロードしたファイルのバックアップ</a></li><li><a href="#redis-のバックアップ">Redis のバックアップ</a></li></ul></nav><h2 id="概要" tabindex="-1">概要 <a class="header-anchor" href="#概要" aria-label="Permalink to &quot;概要&quot;">​</a></h2><p>バックアップが必要なものを重要度の高い順に並べます。</p><ol><li>PostgreSQLデータベース</li><li><code>.env.production</code> ファイルまたは同等のファイルからのアプリケーションシークレット</li><li>ユーザがアップロードしたファイル</li><li>Redisデータベース</li></ol><h2 id="故障モード" tabindex="-1">故障モード <a class="header-anchor" href="#故障モード" aria-label="Permalink to &quot;故障モード&quot;">​</a></h2><p>一般に人が警戒するような故障は2種類ある。ディスクの破損などのハードウェアの故障と、特定のデータを誤って削除してしまうなどのヒューマンエラーやソフトウェアエラーである。この文書では、前者のみを考える。</p><p>PostgreSQLデータベースを失うと、完全にゲームオーバーです。Mastodonは最も重要なデータを全てPostgreSQLのデータベースに格納しています。データベースが消失すると、サーバー上のすべてのアカウント、投稿、フォロワーが一緒に消失してしまいます。</p><p>アプリケーションの秘密が失われた場合、マストドンの一部の機能が使えなくなり、ユーザーはログアウトされ、二要素認証が使えなくなり、Web Push API の購読ができなくなります。</p><p>ユーザーがアップロードしたファイルが失われた場合、アバター、ヘッダー、メディアの添付ファイルが失われますが、マストドンは今後動作します。</p><p>Redisデータベースの損失は、ほとんど無害です。復旧不可能なデータは、Sidekiqのキューの内容と、以前に失敗したジョブの再試行のスケジュールだけです。ホームとリストフィードはRedisに保存されていますが、tootctlで再生成することができます。</p><p>最適なバックアップは、いわゆるオフサイトバックアップ、つまりMastodon自身と同じマシンに保存されていないものです。もし、あなたがホストしているサーバーが火事になり、ハードディスクドライブが爆発した場合、同じハードディスクドライブに保存されているバックアップはあまり役に立ちません。</p><h2 id="アプリケーションシークレットのバックアップ" tabindex="-1">アプリケーションシークレットのバックアップ <a class="header-anchor" href="#アプリケーションシークレットのバックアップ" aria-label="Permalink to &quot;アプリケーションシークレットのバックアップ&quot;">​</a></h2><p>アプリケーションの秘密は、決して変更されないので、バックアップするのが最も簡単です。.env.production` を安全な場所に保存するだけです。</p><h2 id="postgresqlのバックアップ" tabindex="-1">PostgreSQLのバックアップ <a class="header-anchor" href="#postgresqlのバックアップ" aria-label="Permalink to &quot;PostgreSQLのバックアップ&quot;">​</a></h2><p>PostgreSQLは、停電やハードディスクドライブの故障、スキーマの移行の失敗などにより、データが破損する危険性があります。そのため、時々 <code>pg_dump</code> や <code>pg_dumpall</code> を使ってバックアップを取ることをお勧めします。</p><p>高可用性環境では、ホットストリーミングレプリケーションを使用して、常に最新のデータを持つ第2のPostgreSQLサーバを用意し、もう一方のサーバがダウンした場合にすぐに切り替えられるようにすることが可能です。</p><h2 id="ユーザがアップロードしたファイルのバックアップ" tabindex="-1">ユーザがアップロードしたファイルのバックアップ <a class="header-anchor" href="#ユーザがアップロードしたファイルのバックアップ" aria-label="Permalink to &quot;ユーザがアップロードしたファイルのバックアップ&quot;">​</a></h2><p>Amazon S3、Google Cloud、Wasabiなどの外部オブジェクトストレージプロバイダを使用している場合、これらのバックアップを心配する必要はありません。ハードウェアの障害については、各社の責任において対応します。</p><p>ローカルファイルストレージを使用している場合、アップロードされたファイルがデフォルトで保存される <code>public/system</code> ディレクトリのコピーを作成するのは、あなた次第です。</p><h2 id="redis-のバックアップ" tabindex="-1">Redis のバックアップ <a class="header-anchor" href="#redis-のバックアップ" aria-label="Permalink to &quot;Redis のバックアップ&quot;">​</a></h2><p>Redis のバックアップは簡単です。Redisは定期的に <code>/var/lib/redis/dump.rdb</code> に書き込みを行いますが、コピーを取る必要があるのはこのファイルだけです。</p>',24),s=[r];function l(d,n,p,c,h,u){return e(),o("div",null,s)}const m=a(i,[["render",l]]);export{b as __pageData,m as default};
