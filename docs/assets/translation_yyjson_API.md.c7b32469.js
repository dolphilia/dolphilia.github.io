import{_ as s,c as n,o as a,Q as l}from"./chunks/framework.44f152d8.js";const i=JSON.parse('{"title":"API","description":"","frontmatter":{},"headers":[],"relativePath":"translation/yyjson/API.md","lastUpdated":null}'),o={name:"translation/yyjson/API.md"},p=l(`<h1 id="api" tabindex="-1">API <a class="header-anchor" href="#api" aria-label="Permalink to &quot;API&quot;">​</a></h1><p>本書は、yyjsonライブラリのすべてのAPIの使用方法と例をまとめたものです。</p><h1 id="apiデザイン" tabindex="-1">APIデザイン <a class="header-anchor" href="#apiデザイン" aria-label="Permalink to &quot;APIデザイン&quot;">​</a></h1><h2 id="apiプレフィックス" tabindex="-1">APIプレフィックス <a class="header-anchor" href="#apiプレフィックス" aria-label="Permalink to &quot;APIプレフィックス&quot;">​</a></h2><p>すべての公開関数と構造体には <code>yyjson_</code> が、すべての定数には <code>YYJSON_</code> が接頭辞として付きます。</p><h2 id="イミュータブル-ミュータブルデータのためのapi" tabindex="-1">イミュータブル/ミュータブルデータのためのAPI <a class="header-anchor" href="#イミュータブル-ミュータブルデータのためのapi" aria-label="Permalink to &quot;イミュータブル/ミュータブルデータのためのAPI&quot;">​</a></h2><p>ライブラリには、イミュータブルとミュータブルの2種類のデータ構造があります：</p><table><thead><tr><th>type</th><th>immutable</th><th>mutable</th></tr></thead><tbody><tr><td>document</td><td>yyjson_doc</td><td>yyjson_mut_doc</td></tr><tr><td>value</td><td>yyjson_val</td><td>yyjson_mut_val</td></tr></tbody></table><p>JSONを読むとき、yyjsonは不変の文書と値を返す;<br>。 JSONを構築するとき、yyjsonはミュータブルなドキュメントと値を作成します;<br>。 ドキュメントは、そのすべてのJSON値と文字列のメモリを保持する。<br></p><p>ほとんどのイミュータブルなAPIでは、例えば <code>yyjson_</code> の後に <code>mut</code> を追加するだけで、ミュータブルなバージョンを取得することが可能です：</p><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#82AAFF;">yyjson_write</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_doc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">doc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">...);</span></span>
<span class="line"><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#82AAFF;">yyjson_mut_write</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_mut_doc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">doc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">...);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">bool</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_is_str</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">val</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#C792EA;">bool</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_mut_is_str</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">val</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span></code></pre></div><p>また、ライブラリには、immutableとmutableの間で値を変換する関数がいくつか用意されています:<br>。</p><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// doc -&gt; mut_doc</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_mut_doc </span><span style="color:#89DDFF;">*</span><span style="color:#82AAFF;">yyjson_doc_mut_copy</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_doc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">doc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">...);</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// val -&gt; mut_val</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#82AAFF;">yyjson_val_mut_copy</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">val</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">...);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// mut_doc -&gt; doc</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_doc </span><span style="color:#89DDFF;">*</span><span style="color:#82AAFF;">yyjson_mut_doc_imut_copy</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_mut_doc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">doc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">...);</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// mut_val -&gt; val</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_doc </span><span style="color:#89DDFF;">*</span><span style="color:#82AAFF;">yyjson_mut_val_imut_copy</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">val</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">...);</span></span>
<span class="line"></span></code></pre></div><h2 id="文字列用api" tabindex="-1">文字列用API <a class="header-anchor" href="#文字列用api" aria-label="Permalink to &quot;文字列用API&quot;">​</a></h2><p>本ライブラリはヌルターミネーター(<code>\\0</code>)のある文字列とない文字列をサポートしています。<br> ヌル終端記号のない文字列を使いたいときや、文字列の長さを明示的に知りたいときは、例えば <code>n</code> で終わる関数を使うことができる：</p><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// null-terminatorが必要です。</span></span>
<span class="line"><span style="color:#C792EA;">bool</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_equals_str</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">val</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">str</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// null-terminatorはオプションです。</span></span>
<span class="line"><span style="color:#C792EA;">bool</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_equals_strn</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">val</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">str</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">size_t</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">len</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span></code></pre></div><p>JSONを作成するとき、yyjsonはパフォーマンスを向上させるために文字列を定数として扱います。文字列が変更される場合は、例えば <code>cpy</code> を持つ関数を使って、文字列をドキュメントにコピーする必要があります：</p><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 参照のみ、ヌル文字で終端する必要があります。</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#82AAFF;">yyjson_mut_str</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_mut_doc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">doc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">str</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 参照のみ、Null-terminatedはオプションです。</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#82AAFF;">yyjson_mut_strn</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_mut_doc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">doc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">str</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">size_t</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">len</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// コピーされ、Null-terminatedが必要です。</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#82AAFF;">yyjson_mut_strcpy</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_mut_doc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">doc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">str</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// コピーされた、Null-terminatedはオプションです。</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#82AAFF;">yyjson_mut_strncpy</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_mut_doc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">doc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">str</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">size_t</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">len</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span></code></pre></div><hr><h1 id="jsonを読む" tabindex="-1">JSONを読む <a class="header-anchor" href="#jsonを読む" aria-label="Permalink to &quot;JSONを読む&quot;">​</a></h1><p>JSONを読み込むための4つの関数が用意されています<br>。 各関数はUTF-8データまたはファイルの入力を受け付けます<br>。 成功した場合はドキュメントを、失敗した場合はNULLを返します。</p><h2 id="文字列からjsonを読み込む" tabindex="-1">文字列からJSONを読み込む <a class="header-anchor" href="#文字列からjsonを読み込む" aria-label="Permalink to &quot;文字列からJSONを読み込む&quot;">​</a></h2><p><code>dat</code>はUTF-8の文字列で、ヌルターミネーターは不要です。<br><code>len</code> は <code>dat</code> のバイト長です。<br><code>flg</code> はリーダフラグであり、必要なければ0を渡す。<br> 入力が無効な場合、<code>NULL</code>が返される。</p><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">yyjson_doc </span><span style="color:#89DDFF;">*</span><span style="color:#82AAFF;">yyjson_read</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">dat</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">                        </span><span style="color:#C792EA;">size_t</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">len</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">                        yyjson_read_flag </span><span style="color:#A6ACCD;font-style:italic;">flg</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span></code></pre></div><p>サンプルコードです：</p><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">str </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">[1,2,3,4]</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_doc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">doc </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_read</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">str</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">strlen</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">str</span><span style="color:#89DDFF;">),</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">doc</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">...</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#82AAFF;">yyjson_doc_free</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">doc</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span></code></pre></div><h2 id="ファイルからjsonを読み込む" tabindex="-1">ファイルからJSONを読み込む <a class="header-anchor" href="#ファイルからjsonを読み込む" aria-label="Permalink to &quot;ファイルからJSONを読み込む&quot;">​</a></h2><p><code>path</code>はJSONファイルのパスです。<br><code>flg</code> はリーダーフラグで、必要ない場合は 0 を渡す。<br><code>alc</code> はメモリアロケータであり、必要ない場合は NULL を渡す。<br><code>err</code> はエラーメッセージを受け取るためのポインタであり、必要なければ NULL を渡してください。<br> 入力が無効な場合は <code>NULL</code> が返される。</p><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">yyjson_doc </span><span style="color:#89DDFF;">*</span><span style="color:#82AAFF;">yyjson_read_file</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">path</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">                             yyjson_read_flag </span><span style="color:#A6ACCD;font-style:italic;">flg</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">                             </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> yyjson_alc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">alc</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">                             yyjson_read_err </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">err</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span></code></pre></div><p>サンプルコードです：</p><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">yyjson_doc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">doc </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_read_file</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/tmp/test.json</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">NULL,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">NULL);</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">doc</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">...</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#82AAFF;">yyjson_doc_free</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">doc</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span></code></pre></div><h2 id="ファイルポインタからjsonを読み込む" tabindex="-1">ファイルポインタからJSONを読み込む <a class="header-anchor" href="#ファイルポインタからjsonを読み込む" aria-label="Permalink to &quot;ファイルポインタからJSONを読み込む&quot;">​</a></h2><p><code>fp</code>はファイルポインタです。データはFILEの現在位置から末尾まで読み込まれる。<br><code>flg</code> はリーダーフラグであり、必要ない場合は 0 を渡します。<br><code>alc</code> はメモリアロケータで、必要なければ NULL を渡します。詳細は <code>memory allocator</code> を参照してください。<br><code>err</code> はエラーメッセージを受け取るためのポインタであり、必要なければ NULL を渡してください。<br> 入力が無効な場合は <code>NULL</code> が返される。</p><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">yyjson_doc </span><span style="color:#89DDFF;">*</span><span style="color:#82AAFF;">yyjson_read_fp</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">FILE </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">fp</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">                           yyjson_read_flag </span><span style="color:#A6ACCD;font-style:italic;">flg</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">                           </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> yyjson_alc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">alc</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">                           yyjson_read_err </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">err</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span></code></pre></div><p>サンプルコードです：</p><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">FILE </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">fp </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">fdopen</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">fd</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">rb</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span><span style="color:#676E95;font-style:italic;"> // POSIXファイルディスクリプタ(fd)</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_doc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">doc </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_read_fp</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">fp</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">NULL,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">NULL);</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">fp</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">fclose</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">fp</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">doc</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">...</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#82AAFF;">yyjson_doc_free</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">doc</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span></code></pre></div><h2 id="オプションでjsonを読み込む" tabindex="-1">オプションでJSONを読み込む <a class="header-anchor" href="#オプションでjsonを読み込む" aria-label="Permalink to &quot;オプションでJSONを読み込む&quot;">​</a></h2><p><code>dat</code> は UTF-8 文字列です。<code>YYJSON_READ_INSITU</code> フラグを使用しない場合は const 文字列を渡すことができます。<br><code>len</code> は <code>dat</code> の長さをバイト数で表したものです。<br><code>flg</code> はリーダーフラグであり、必要ない場合は 0 を渡す。<br><code>alc</code> はメモリアロケータであり、必要ない場合は NULL を渡します。<br><code>err</code> はエラーメッセージを受け取るためのポインタです。必要なければ NULL を渡してください。<br></p><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">yyjson_doc </span><span style="color:#89DDFF;">*</span><span style="color:#82AAFF;">yyjson_read_opts</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">dat</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">                             </span><span style="color:#C792EA;">size_t</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">len</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">                             yyjson_read_flag </span><span style="color:#A6ACCD;font-style:italic;">flg</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">                             </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> yyjson_alc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">alc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">                             yyjson_read_err </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">err</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span></code></pre></div><p>サンプルコードです：</p><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">dat </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> your_file.bytes</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">size_t</span><span style="color:#A6ACCD;"> len </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> your_file.size</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_read_flag flg </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> YYJSON_READ_ALLOW_COMMENTS </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> YYJSON_READ_ALLOW_INF_AND_NAN</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_err err</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_doc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">doc </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_read_opts</span><span style="color:#89DDFF;">((</span><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*)</span><span style="color:#A6ACCD;font-style:italic;">dat</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> len</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> flg</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">NULL,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;font-style:italic;">err</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">doc</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">...</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">else</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">printf</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">read error: %s code: %u at position: %ld</span><span style="color:#A6ACCD;">\\n</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> err.msg</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> err.code</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> err.pos</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">yyjson_doc_free</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">doc</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span></code></pre></div><h2 id="リーダーフラグ" tabindex="-1">リーダーフラグ <a class="header-anchor" href="#リーダーフラグ" aria-label="Permalink to &quot;リーダーフラグ&quot;">​</a></h2><p>本ライブラリは、JSONリーダー用のフラグを提供します。<br> 単一のフラグを使用することも、ビット演算子 <code>|</code> を用いて複数のフラグを組み合わせることもできます。</p><p>● <strong>YYJSON_READ_NOFLAG = 0</strong></p><p>JSONリーダー（RFC-8259またはECMA-404準拠）用のデフォルトフラグです：</p><ul><li>正の整数を <code>uint64_t</code> として読み込む。</li><li>負の整数を <code>int64_t</code> として読み込む。</li><li>浮動小数点数を正しく丸めながら <code>double</code> として読み込む。</li><li><code>uint64_t</code> や <code>int64_t</code> に収まらない整数を <code>double</code> として読み込む。</li><li>実数が無限大の場合、エラーを報告する。</li><li>文字列が無効なUTF-8文字またはBOMを含む場合、エラーを報告する。</li><li>末尾のカンマ、コメント、<code>inf</code>と<code>nan</code>リテラルでエラーを報告する。</li></ul><p>● <strong>YYJSON_READ_INSITU</strong></p><p>入力データをその場で読み込む<br>。 このオプションは、リーダーが入力データを修正して文字列値を格納するために使用することを可能にし、読み取り速度をわずかに向上させることができます。呼び出し側は、文書を解放する前に入力データを保持する必要があります。入力データは少なくとも <code>YYJSON_PADDING_SIZE</code> バイトでパディングされなければならない。例：<code>[1,2]</code>は\`[1,2]⇦、入力長は5であるべきである。</p><p>サンプルコードです：</p><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">size_t</span><span style="color:#A6ACCD;"> dat_len </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> ...</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">buf </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">malloc</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">dat_len </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> YYJSON_PADDING_SIZE</span><span style="color:#89DDFF;">);</span><span style="color:#676E95;font-style:italic;"> // (len + 4）より大きなバッファを作成する。</span></span>
<span class="line"><span style="color:#82AAFF;">read_from_socket</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">buf</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">...);</span></span>
<span class="line"><span style="color:#82AAFF;">memset</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">buf </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> file_size</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> YYJSON_PADDING_SIZE</span><span style="color:#89DDFF;">);</span><span style="color:#676E95;font-style:italic;"> // データ後に4バイトのパディングを設定する</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_doc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">doc </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_read_opts</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">buf</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> dat_len</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> YYJSON_READ_INSITU</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">NULL,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">NULL);</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">doc</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">...</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#82AAFF;">yyjson_doc_free</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">doc</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#82AAFF;">free</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">buf</span><span style="color:#89DDFF;">);</span><span style="color:#676E95;font-style:italic;"> // 入力されたデータは、ドキュメントの後に解放される必要があります。</span></span>
<span class="line"></span></code></pre></div><p>● <strong>YYJSON_READ_STOP_WHEN_DONE</strong></p><p>JSONドキュメントの後に追加のコンテンツがある場合、エラーを発行する代わりに、完了したら停止します。<br>。 このオプションは、<a href="https://en.wikipedia.org/wiki/JSON_streaming" target="_blank" rel="noreferrer">NDJSON</a>のように、大きなデータの中の小さなJSONの断片をパースするために使用されます。<br></p><p>サンプルコードです：</p><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// など、複数のJSONを持つ単一ファイル：</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// [1,2,3] [4,5,6] {&quot;a&quot;:&quot;b&quot;}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">size_t</span><span style="color:#A6ACCD;"> file_size </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> ...</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">dat </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">malloc</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">file_size </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">4</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#82AAFF;">your_read_file</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">dat</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> file</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#82AAFF;">memset</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">dat </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> file_size</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">4</span><span style="color:#89DDFF;">);</span><span style="color:#676E95;font-style:italic;"> // add padding</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span></span>
<span class="line"><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">hdr </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> dat</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">end </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> dat </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> file_size</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_read_flag flg </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> YYJSON_READ_INSITU </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> YYJSON_READ_STOP_WHEN_DONE</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">while</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(true)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    yyjson_doc </span><span style="color:#89DDFF;">*</span><span style="color:#F07178;">doc </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">yyjson_read_opts</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">hdr</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> end </span><span style="color:#89DDFF;">-</span><span style="color:#F07178;"> hdr</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> flg</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">NULL,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">NULL);</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(!</span><span style="color:#F07178;">doc</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">break</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">your_doc_process</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">doc</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">    hdr </span><span style="color:#89DDFF;">+=</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">yyjson_doc_get_read_size</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">doc</span><span style="color:#89DDFF;">);</span><span style="color:#676E95;font-style:italic;"> // move to next position</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">yyjson_doc_free</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">doc</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#82AAFF;">free</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">dat</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span></code></pre></div><p>● <strong>YYJSON_READ_ALLOW_TRAILING_COMMAS</strong></p><p>オブジェクトや配列の末尾にカンマを1つ付けることができるようにする：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    &quot;a&quot;: 1,</span></span>
<span class="line"><span style="color:#A6ACCD;">    &quot;b&quot;: 2,</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">[</span></span>
<span class="line"><span style="color:#A6ACCD;">    &quot;a&quot;,</span></span>
<span class="line"><span style="color:#A6ACCD;">    &quot;b&quot;,</span></span>
<span class="line"><span style="color:#A6ACCD;">]</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>● <strong>YYJSON_READ_ALLOW_COMMENTS</strong></p><p>C言語スタイルの1行コメントや複数行コメントを許可する、といった具合です：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    &quot;name&quot;: &quot;Harry&quot;, // single line comment</span></span>
<span class="line"><span style="color:#A6ACCD;">    &quot;id&quot;: /* multiple line comment */ 123</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>● <strong>YYJSON_READ_ALLOW_INF_AND_NAN</strong></p><p>1e999, NaN, Inf, -Infinity などの nan/inf 数値またはリテラル（大文字小文字を区別しない）を許可する：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    &quot;large&quot;: 123e999,</span></span>
<span class="line"><span style="color:#A6ACCD;">    &quot;nan1&quot;: NaN,</span></span>
<span class="line"><span style="color:#A6ACCD;">    &quot;nan2&quot;: nan,</span></span>
<span class="line"><span style="color:#A6ACCD;">    &quot;inf1:&quot; Inf,</span></span>
<span class="line"><span style="color:#A6ACCD;">    &quot;inf2&quot;: -Infinity</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>● <strong>YYJSON_READ_NUMBER_AS_RAW</strong></p><p>数値をパースせずに生の文字列として読み込むので、任意の大きさの数値を保持することができます。</p><p>これらの関数を使用して、生の文字列を抽出することができます：</p><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">bool</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_is_raw</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">val</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#82AAFF;">yyjson_get_raw</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">val</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#C792EA;">size_t</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_get_len</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">val</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span></code></pre></div><p>● <strong>YYJSON_READ_ALLOW_INVALID_UNICODE</strong></p><p>文字列のパース時に無効なユニコードを読み込めるようにする（例：非標準）：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">&quot;\\x80xyz&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">&quot;\\xF0\\x81\\x81\\x81&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>無効な文字が文字列の値に現れることは許されますが、無効なエスケープシーケンスがエラーとして報告されることは変わりません。このフラグは、正しくエンコードされた文字列の性能には影響しません。</p><p><em><strong>警告</strong></em>: このオプションを使用すると、JSON値の文字列が不正なエンコーディングを含む可能性があるため、セキュリティリスクを回避するためにこれらの文字列を慎重に扱う必要があります。</p><hr><h1 id="jsonの書き込み" tabindex="-1">JSONの書き込み <a class="header-anchor" href="#jsonの書き込み" aria-label="Permalink to &quot;JSONの書き込み&quot;">​</a></h1><p>JSONを書き込むための4つの関数が用意されており、各関数はJSON文書またはルート値の入力を受け付け、UTF-8の文字列またはファイルを返します。</p><h2 id="jsonを文字列に書き込む" tabindex="-1">JSONを文字列に書き込む <a class="header-anchor" href="#jsonを文字列に書き込む" aria-label="Permalink to &quot;JSONを文字列に書き込む&quot;">​</a></h2><p><code>doc/val</code>はJSONのドキュメントまたはルートの値で、NULLを渡すとNULLの結果が得られる。<br><code>flg</code> はライターフラグで、必要なければ0を渡します。詳細は <code>ライターフラグ</code> を参照してください。<br><code>len</code> は出力の長さ (ヌルターミネータを含まない) を受け取るためのポインタである。<br> この関数は新しいJSON文字列を返し、エラーが発生した場合はNULLを返す。<br> 文字列はUTF-8としてエンコードされ、ヌルターミネーターが付きます。<br> 不要になったらfree()やalc-&gt;free()を使って解放する必要があります。</p><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// doc -&gt; str</span></span>
<span class="line"><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#82AAFF;">yyjson_write</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> yyjson_doc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">doc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> yyjson_write_flag </span><span style="color:#A6ACCD;font-style:italic;">flg</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">size_t</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">len</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// mut_doc -&gt; str</span></span>
<span class="line"><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#82AAFF;">yyjson_mut_write</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> yyjson_mut_doc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">doc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> yyjson_write_flag </span><span style="color:#A6ACCD;font-style:italic;">flg</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">size_t</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">len</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// val -&gt; str</span></span>
<span class="line"><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#82AAFF;">yyjson_val_write</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> yyjson_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">val</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> yyjson_write_flag </span><span style="color:#A6ACCD;font-style:italic;">flg</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">size_t</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">len</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// mut_val -&gt; str</span></span>
<span class="line"><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#82AAFF;">yyjson_mut_val_write</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">val</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> yyjson_write_flag </span><span style="color:#A6ACCD;font-style:italic;">flg</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">size_t</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">len</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span></code></pre></div><p>サンプルコード1：</p><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">yyjson_doc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">doc </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_read</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">[1,2,3]</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">7</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">json </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_write</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">doc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> YYJSON_WRITE_PRETTY</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">NULL);</span></span>
<span class="line"><span style="color:#82AAFF;">printf</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">%s</span><span style="color:#A6ACCD;">\\n</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> json</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#82AAFF;">free</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">json</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span></code></pre></div><p>サンプルコード2：</p><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">yyjson_mut_doc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">doc </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_mut_doc_new</span><span style="color:#89DDFF;">(NULL);</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">arr </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_mut_arr</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">doc</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#82AAFF;">yyjson_mut_doc_set_root</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">doc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> arr</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#82AAFF;">yyjson_mut_arr_add_int</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">doc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> arr</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#82AAFF;">yyjson_mut_arr_add_int</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">doc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> arr</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#82AAFF;">yyjson_mut_arr_add_int</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">doc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> arr</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span></span>
<span class="line"><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">json </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_mut_write</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">doc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> YYJSON_WRITE_PRETTY</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">NULL);</span></span>
<span class="line"><span style="color:#82AAFF;">printf</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">%s</span><span style="color:#A6ACCD;">\\n</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> json</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#82AAFF;">free</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">json</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span></code></pre></div><h2 id="jsonをファイルに書き込む" tabindex="-1">JSONをファイルに書き込む <a class="header-anchor" href="#jsonをファイルに書き込む" aria-label="Permalink to &quot;JSONをファイルに書き込む&quot;">​</a></h2><p><code>path</code>は出力するJSONファイルのパスで、無効な場合はエラーになります。ファイルが空でない場合、内容は破棄される。<br><code>doc/val</code>はJSONドキュメントまたはルートの値で、NULLを渡すとエラーになる。<br><code>flg</code> はライターフラグで、必要なければ0を渡す。詳細は <code>writer flag</code> を参照。<br><code>alc</code> はメモリアロケータであり、必要なければ NULL を渡してください。<br><code>err</code> はエラーメッセージを受け取るためのポインタであり、必要なければ NULL を渡してください。<br> この関数は成功したら真を、エラーが発生したら偽を返します。<br></p><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// doc -&gt; file</span></span>
<span class="line"><span style="color:#C792EA;">bool</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_write_file</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">path</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> yyjson_doc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">doc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> yyjson_write_flag </span><span style="color:#A6ACCD;font-style:italic;">flg</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> yyjson_alc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">alc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> yyjson_write_err </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">err</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// mut_doc -&gt; file</span></span>
<span class="line"><span style="color:#C792EA;">bool</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_mut_write_file</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">path</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> yyjson_mut_doc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">doc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> yyjson_write_flag </span><span style="color:#A6ACCD;font-style:italic;">flg</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> yyjson_alc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">alc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> yyjson_write_err </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">err</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// val -&gt; file</span></span>
<span class="line"><span style="color:#C792EA;">bool</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_val_write_file</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">path</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> yyjson_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">val</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> yyjson_write_flag </span><span style="color:#A6ACCD;font-style:italic;">flg</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> yyjson_alc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">alc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> yyjson_write_err </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">err</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// mut_val -&gt; file</span></span>
<span class="line"><span style="color:#C792EA;">bool</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_mut_val_write_file</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">path</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">val</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> yyjson_write_flag </span><span style="color:#A6ACCD;font-style:italic;">flg</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> yyjson_alc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">alc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> yyjson_write_err </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">err</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span></code></pre></div><p>サンプルコードです：</p><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">yyjson_doc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">doc </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_read_file</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/tmp/test.json</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">NULL,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">NULL);</span></span>
<span class="line"><span style="color:#C792EA;">bool</span><span style="color:#A6ACCD;"> suc </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_write_file</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">tmp/test.json</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> doc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> YYJSON_WRITE_PRETTY</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">NULL,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">NULL);</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">suc</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">printf</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">OK</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span></code></pre></div><h2 id="ファイルポインタにjsonを書き込む" tabindex="-1">ファイルポインタにJSONを書き込む <a class="header-anchor" href="#ファイルポインタにjsonを書き込む" aria-label="Permalink to &quot;ファイルポインタにJSONを書き込む&quot;">​</a></h2><p><code>fp</code>は出力ファイルへのポインタであり、データはファイルの現在位置に書き込まれる。<br><code>doc/val</code>はJSONドキュメントまたはルート値です。NULLを渡すとエラーになります。<br><code>flg</code> はライターフラグで、必要なければ0を渡します。詳細は <code>ライターフラグ</code> を参照してください。 <code>alc</code> はメモリアロケータであり、必要なければ NULL を渡してください。 <code>err</code> はエラーメッセージを受け取るためのポインタであり、必要なければ NULL を渡してください。 この関数は成功したら真を、エラーが発生したら偽を返します。<br></p><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// doc -&gt; file</span></span>
<span class="line"><span style="color:#C792EA;">bool</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_write_fp</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">FILE </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">fp</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> yyjson_doc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">doc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> yyjson_write_flag </span><span style="color:#A6ACCD;font-style:italic;">flg</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> yyjson_alc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">alc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> yyjson_write_err </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">err</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// mut_doc -&gt; file</span></span>
<span class="line"><span style="color:#C792EA;">bool</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_mut_write_fp</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">FILE </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">fp</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> yyjson_mut_doc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">doc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> yyjson_write_flag </span><span style="color:#A6ACCD;font-style:italic;">flg</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> yyjson_alc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">alc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> yyjson_write_err </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">err</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// val -&gt; file</span></span>
<span class="line"><span style="color:#C792EA;">bool</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_val_write_fp</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">FILE </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">fp</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> yyjson_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">val</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> yyjson_write_flag </span><span style="color:#A6ACCD;font-style:italic;">flg</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> yyjson_alc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">alc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> yyjson_write_err </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">err</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// mut_val -&gt; file</span></span>
<span class="line"><span style="color:#C792EA;">bool</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_mut_val_write_fp</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">FILE </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">fp</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">val</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> yyjson_write_flag </span><span style="color:#A6ACCD;font-style:italic;">flg</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> yyjson_alc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">alc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> yyjson_write_err </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">err</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span></code></pre></div><p>サンプルコードです：</p><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">FILE </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">fp </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">fdopen</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">fd</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">wb</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span><span style="color:#676E95;font-style:italic;"> // POSIX file descriptor (fd)</span></span>
<span class="line"><span style="color:#C792EA;">bool</span><span style="color:#A6ACCD;"> suc </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_write_fp</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">fp</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> doc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> YYJSON_WRITE_PRETTY</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">NULL,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">NULL);</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">fp</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">fclose</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">fp</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">suc</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">printf</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">OK</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span></code></pre></div><h2 id="オプションでjsonを書き込む" tabindex="-1">オプションでJSONを書き込む <a class="header-anchor" href="#オプションでjsonを書き込む" aria-label="Permalink to &quot;オプションでJSONを書き込む&quot;">​</a></h2><p><code>doc/val</code>はJSONのドキュメントまたはルートの値であり、NULLを渡すとNULLの結果が得られる。<br><code>flg</code> はライターフラグであり、必要なければ 0 を渡す。<br><code>alc</code> はメモリアロケータであり、必要なければ NULL を渡す。詳細は <code>memory allocator</code> を参照。<br><code>len</code> は出力の長さ (ヌルターミネータを含まない) を受け取るためのポインタであり、必要なければ NULL を渡してください。<br><code>err</code> はエラーメッセージを受け取るためのポインタです、必要なければ NULL を渡してください。</p><p>この関数は、新しいJSON文字列、またはエラーが発生した場合はNULLを返します。<br> 文字列はUTF-8でエンコードされ、ヌルターミネータが付きます。<br> 不要になったらfree()またはalc-&gt;free()を使って解放する必要があります。</p><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#82AAFF;">yyjson_write_opts</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> yyjson_doc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">doc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> yyjson_write_flag </span><span style="color:#A6ACCD;font-style:italic;">flg</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> yyjson_alc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">alc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">size_t</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">len</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> yyjson_write_err </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">err</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#82AAFF;">yyjson_mut_write_opts</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> yyjson_mut_doc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">doc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> yyjson_write_flag </span><span style="color:#A6ACCD;font-style:italic;">flg</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> yyjson_alc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">alc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">size_t</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">len</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> yyjson_write_err </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">err</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#82AAFF;">yyjson_val_write_opts</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> yyjson_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">val</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> yyjson_write_flag </span><span style="color:#A6ACCD;font-style:italic;">flg</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> yyjson_alc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">alc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">size_t</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">len</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> yyjson_write_err </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">err</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#82AAFF;">yyjson_mut_val_write_opts</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">val</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> yyjson_write_flag </span><span style="color:#A6ACCD;font-style:italic;">flg</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> yyjson_alc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">alc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">size_t</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">len</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> yyjson_write_err </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">err</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span></code></pre></div><p>Sample code:</p><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">yyjson_doc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">doc </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> ...</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// init an allocator with stack memory</span></span>
<span class="line"><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> buf</span><span style="color:#89DDFF;">[</span><span style="color:#F78C6C;">64</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1024</span><span style="color:#89DDFF;">];</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_alc alc</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#82AAFF;">yyjson_alc_pool_init</span><span style="color:#89DDFF;">(&amp;</span><span style="color:#A6ACCD;font-style:italic;">alc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> buf</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">sizeof(</span><span style="color:#A6ACCD;">buf</span><span style="color:#89DDFF;">));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// write</span></span>
<span class="line"><span style="color:#C792EA;">size_t</span><span style="color:#A6ACCD;"> len</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_write_err err</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">json </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_write_opts</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">doc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> YYJSON_WRITE_PRETTY </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> YYJSON_WRITE_ESCAPE_UNICODE</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;font-style:italic;">alc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;font-style:italic;">len</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;font-style:italic;">err</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// get result</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">json</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">printf</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">suc: %lu</span><span style="color:#A6ACCD;">\\n</span><span style="color:#C3E88D;">%s</span><span style="color:#A6ACCD;">\\n</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> len</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> json</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">else</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">printf</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">err: %u msg:%s</span><span style="color:#A6ACCD;">\\n</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">err</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">code</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">err</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">msg</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">alc.</span><span style="color:#82AAFF;">free</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">alc.ctx</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> json</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span></code></pre></div><h2 id="ライターフラグ" tabindex="-1">ライターフラグ <a class="header-anchor" href="#ライターフラグ" aria-label="Permalink to &quot;ライターフラグ&quot;">​</a></h2><p>本ライブラリは、JSONライターのためのフラグを提供します。 単一のフラグを使用することも、ビット演算子 <code>|</code> を用いて複数のフラグを組み合わせることもできます。</p><p>● <strong>YYJSON_WRITE_NOFLAG = 0</strong><br></p><p>JSONライターのデフォルトフラグです：</p><ul><li>JSONを書く minify.</li><li>inf または nan 数でエラーを報告する。</li><li>無効なUTF-8文字列のエラーを報告する。</li><li>Unicodeやスラッシュをエスケープしない。</li></ul><p>● <strong>YYJSON_WRITE_PRETTY</strong><br></p><p>4スペースインデントでJSONをきれいに書く。</p><p>● <strong>YYJSON_WRITE_PRETTY_TWO_SPACES</strong><br></p><p>2スペースインデントでJSONをきれいに書く。 このフラグは <code>YYJSON_WRITE_PRETTY</code> フラグをオーバーライドします。</p><p>● <strong>YYJSON_WRITE_ESCAPE_UNICODE</strong><br></p><p>unicodeを<code>XXXXX</code>とエスケープして、ASCIIのみ出力させるなど：</p><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">[</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Alizée, 😊</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#89DDFF;">[</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Aliz</span><span style="color:#A6ACCD;">\\\\</span><span style="color:#C3E88D;">u00E9e, </span><span style="color:#A6ACCD;">\\\\</span><span style="color:#C3E88D;">uD83D</span><span style="color:#A6ACCD;">\\\\</span><span style="color:#C3E88D;">uDE0A</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">]</span></span>
<span class="line"></span></code></pre></div><p>● <strong>YYJSON_WRITE_ESCAPE_SLASHES</strong><br></p><p>例えば、<code>/</code>を<code>\\/</code>としてエスケープする：</p><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">[</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">https://github.com</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#89DDFF;">[</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">https:</span><span style="color:#A6ACCD;">\\/\\/</span><span style="color:#C3E88D;">github.com</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">]</span></span>
<span class="line"></span></code></pre></div><p>● <strong>YYJSON_WRITE_ALLOW_INF_AND_NAN</strong><br></p><p>inf/nan 数を、エラーを報告する代わりに <code>Infinity</code> と <code>NaN</code> リテラルとして記述する。<br></p><p>この出力は<strong>NOT</strong>標準JSONであり、例えば他のJSONライブラリによって拒否されるかもしれないことに注意してください：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">{</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">not_a_number</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">:</span><span style="color:#89DDFF;">NaN,</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">large_number</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">:</span><span style="color:#89DDFF;">Infinity}</span></span>
<span class="line"></span></code></pre></div><p>● <strong>YYJSON_WRITE_INF_AND_NAN_AS_NULL</strong><br></p><p>エラーを報告する代わりに inf/nan 数を <code>null</code> リテラルとして書き込みます。<br> このフラグは、例えば <code>YYJSON_WRITE_ALLOW_INF_AND_NAN</code> フラグをオーバーライドします：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">{</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">not_a_number</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">:</span><span style="color:#89DDFF;">null,</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">large_number</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">:</span><span style="color:#89DDFF;">null}</span></span>
<span class="line"></span></code></pre></div><p>● <strong>YYJSON_WRITE_ALLOW_INVALID_UNICODE</strong><br></p><p>文字列値のエンコード時に無効なユニコードを許可する。</p><p>文字列中の無効な文字は、バイト単位でコピーされる。YYJSON_WRITE_ESCAPE_UNICODE<code>フラグが設定されている場合、無効な文字は</code>uFFFD\` (置換文字) としてエスケープされます。</p><p>このフラグは、正しくエンコードされた文字列のパフォーマンスには影響しない。</p><hr><h1 id="jsonドキュメントにアクセスする" tabindex="-1">JSONドキュメントにアクセスする <a class="header-anchor" href="#jsonドキュメントにアクセスする" aria-label="Permalink to &quot;JSONドキュメントにアクセスする&quot;">​</a></h1><h2 id="jsonドキュメント" tabindex="-1">JSONドキュメント <a class="header-anchor" href="#jsonドキュメント" aria-label="Permalink to &quot;JSONドキュメント&quot;">​</a></h2><p>以下の機能で、ドキュメントの内容にアクセスすることができます：</p><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// このJSON文書のルート値を取得する。</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_val </span><span style="color:#89DDFF;">*</span><span style="color:#82AAFF;">yyjson_doc_get_root</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_doc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">doc</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// JSONのパース時に何バイト読み込んだかを取得します。</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 例：「[1,2,3]」は7を返す。</span></span>
<span class="line"><span style="color:#C792EA;">size_t</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_doc_get_read_size</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_doc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">doc</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// このJSON文書に含まれる値の総数を取得する。</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 例：「[1,2,3]」は4個（配列1個と数値3個）を返す。</span></span>
<span class="line"><span style="color:#C792EA;">size_t</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_doc_get_val_count</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_doc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">doc</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span></code></pre></div><p>ドキュメントは、その内部の値や文字列のためのすべてのメモリを保持しています。不要になったら、ドキュメントを解放して、すべてのメモリを解放する必要があります：</p><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// ドキュメントを解放する。NULLが渡された場合は、何もしない。</span></span>
<span class="line"><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_doc_free</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_doc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">doc</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span></code></pre></div><h2 id="json値" tabindex="-1">JSON値 <a class="header-anchor" href="#json値" aria-label="Permalink to &quot;JSON値&quot;">​</a></h2><p>JSON値の型は、以下の関数で判定することができます。</p><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// JSON 値の型とサブタイプを返します。</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 入力がNULLの場合は0を返します。</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_type </span><span style="color:#82AAFF;">yyjson_get_type</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">val</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_subtype </span><span style="color:#82AAFF;">yyjson_get_subtype</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">val</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 値のタグを返します。詳細は \`Data Structures\` のドキュメントを参照してください。</span></span>
<span class="line"><span style="color:#C792EA;">uint8_t</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_get_tag</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">val</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// は、以下のようなタイプの説明を返します：  </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// &quot;null&quot;, &quot;string&quot;, &quot;array&quot;, &quot;object&quot;, &quot;true&quot;, &quot;false&quot;,</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// &quot;uint&quot;, &quot;sint&quot;, &quot;real&quot;, &quot;unknown&quot;</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#82AAFF;">yyjson_get_type_desc</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">val</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// JSON値が指定された型である場合、trueを返す。</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 入力がNULLまたは指定された型でない場合、falseを返す。</span></span>
<span class="line"><span style="color:#C792EA;">bool</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_is_null</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">val</span><span style="color:#89DDFF;">);</span><span style="color:#676E95;font-style:italic;">  // null</span></span>
<span class="line"><span style="color:#C792EA;">bool</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_is_true</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">val</span><span style="color:#89DDFF;">);</span><span style="color:#676E95;font-style:italic;">  // true</span></span>
<span class="line"><span style="color:#C792EA;">bool</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_is_false</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">val</span><span style="color:#89DDFF;">);</span><span style="color:#676E95;font-style:italic;"> // false</span></span>
<span class="line"><span style="color:#C792EA;">bool</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_is_bool</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">val</span><span style="color:#89DDFF;">);</span><span style="color:#676E95;font-style:italic;">  // true/false</span></span>
<span class="line"><span style="color:#C792EA;">bool</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_is_uint</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">val</span><span style="color:#89DDFF;">);</span><span style="color:#676E95;font-style:italic;">  // uint64_t</span></span>
<span class="line"><span style="color:#C792EA;">bool</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_is_sint</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">val</span><span style="color:#89DDFF;">);</span><span style="color:#676E95;font-style:italic;">  // int64_t</span></span>
<span class="line"><span style="color:#C792EA;">bool</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_is_int</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">val</span><span style="color:#89DDFF;">);</span><span style="color:#676E95;font-style:italic;">   // uint64_t/int64_t</span></span>
<span class="line"><span style="color:#C792EA;">bool</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_is_real</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">val</span><span style="color:#89DDFF;">);</span><span style="color:#676E95;font-style:italic;">  // double</span></span>
<span class="line"><span style="color:#C792EA;">bool</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_is_num</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">val</span><span style="color:#89DDFF;">);</span><span style="color:#676E95;font-style:italic;">   // uint64_t/int64_t/double</span></span>
<span class="line"><span style="color:#C792EA;">bool</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_is_str</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">val</span><span style="color:#89DDFF;">);</span><span style="color:#676E95;font-style:italic;">   // string</span></span>
<span class="line"><span style="color:#C792EA;">bool</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_is_arr</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">val</span><span style="color:#89DDFF;">);</span><span style="color:#676E95;font-style:italic;">   // array</span></span>
<span class="line"><span style="color:#C792EA;">bool</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_is_obj</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">val</span><span style="color:#89DDFF;">);</span><span style="color:#676E95;font-style:italic;">   // object</span></span>
<span class="line"><span style="color:#C792EA;">bool</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_is_ctn</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">val</span><span style="color:#89DDFF;">);</span><span style="color:#676E95;font-style:italic;">   // array/object</span></span>
<span class="line"></span></code></pre></div><p>JSON値の内容を取得するために、以下の関数を使用することができます。</p><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// \`val\` が bool 型でない場合は false を返す。</span></span>
<span class="line"><span style="color:#C792EA;">bool</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_get_bool</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">val</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// uint64_t の値、または \`val\` が uint 型でない場合は 0 を返す。</span></span>
<span class="line"><span style="color:#C792EA;">uint64_t</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_get_uint</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">val</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// int64_t の値、または \`val\` が sint 型でない場合は 0 を返す。</span></span>
<span class="line"><span style="color:#C792EA;">int64_t</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_get_sint</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">val</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// int 型の値（オーバーフローする可能性がある）、または \`val\` が uint/sint 型でない場合は 0 を返す。</span></span>
<span class="line"><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_get_int</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">val</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// double 型の値、または \`val\` が実数型でない場合は 0 を返す。</span></span>
<span class="line"><span style="color:#C792EA;">double</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_get_real</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">val</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// double value (typecast) を返し、\`val\` が数値でない場合は 0 を返す。</span></span>
<span class="line"><span style="color:#C792EA;">double</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_get_num</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">val</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 文字列の値を返し、\`val\`が文字列型でない場合はNULLを返す。</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#82AAFF;">yyjson_get_str</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">val</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// コンテンツ長（文字列長（バイト）、配列サイズ、オブジェクトサイズ）を返し、長さデータを含まない場合は0を返す。</span></span>
<span class="line"><span style="color:#C792EA;">size_t</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_get_len</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">val</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 値が文字列と等しいかどうかを返します。</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 入力がNULLであるか、\`val\`が文字列でない場合は偽を返す。</span></span>
<span class="line"><span style="color:#C792EA;">bool</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_equals_str</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">val</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">str</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#C792EA;">bool</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_equals_strn</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">val</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">str</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">size_t</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">len</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span></code></pre></div><p>以下の関数を使用して、JSON値の内容を変更することができます。</p><p>警告イミュータブルなドキュメントでは、これらの関数は <code>immutable</code> という規約を破るので、このAPIのセットは注意して使う必要があります（例えば、ドキュメントが単一のスレッドでのみアクセスされることを確認する）。</p><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 値を新しい型と内容に設定します。</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 入力がNULLの場合、または \`val\` がオブジェクトまたは配列の場合、偽を返す。</span></span>
<span class="line"><span style="color:#C792EA;">bool</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_set_raw</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">val</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">raw</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">size_t</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">len</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#C792EA;">bool</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_set_null</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">val</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#C792EA;">bool</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_set_bool</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">val</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">bool</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">num</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#C792EA;">bool</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_set_uint</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">val</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">uint64_t</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">num</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#C792EA;">bool</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_set_sint</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">val</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">int64_t</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">num</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#C792EA;">bool</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_set_int</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">val</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">num</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#C792EA;">bool</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_set_real</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">val</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">double</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">num</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 文字列はコピーされず、呼び出し元が保持する必要があります。</span></span>
<span class="line"><span style="color:#C792EA;">bool</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_set_str</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">val</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">str</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#C792EA;">bool</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_set_strn</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">val</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">str</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">size_t</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">len</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span></code></pre></div><h2 id="json配列" tabindex="-1">JSON配列 <a class="header-anchor" href="#json配列" aria-label="Permalink to &quot;JSON配列&quot;">​</a></h2><p>JSON配列にアクセスするには、以下の関数を使用することができます。</p><p>インデックスを指定して要素にアクセスすると、線形探索時間がかかる場合があることに注意してください。したがって、配列を反復処理する必要がある場合は、イテレータAPIを使用することが推奨されます。</p><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// この配列の要素数を返します。</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 入力が配列でない場合は0を返します。</span></span>
<span class="line"><span style="color:#C792EA;">size_t</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_arr_size</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">arr</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 指定された位置の要素を返す（線形探索時間）。</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// インデックスが範囲外であるか、入力が配列でない場合はNULLを返す。</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_val </span><span style="color:#89DDFF;">*</span><span style="color:#82AAFF;">yyjson_arr_get</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">arr</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">size_t</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">idx</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// この配列の最初の要素を返します（一定時間）。</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 配列が空であるか、intputが配列でない場合はNULLを返します。</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_val </span><span style="color:#89DDFF;">*</span><span style="color:#82AAFF;">yyjson_arr_get_first</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">arr</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// この配列の最後の要素を返します（線形探索時間）。</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 配列が空であるか、intputが配列でない場合はNULLを返します。</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_val </span><span style="color:#89DDFF;">*</span><span style="color:#82AAFF;">yyjson_arr_get_last</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">arr</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span></code></pre></div><h2 id="json-配列イテレーター" tabindex="-1">JSON 配列イテレーター <a class="header-anchor" href="#json-配列イテレーター" aria-label="Permalink to &quot;JSON 配列イテレーター&quot;">​</a></h2><p>配列を走査する方法は2つあります：<br>。</p><p>サンプルコード1（イテレータAPI）：</p><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">yyjson_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">arr</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;"> // 走査される配列</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">val</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_arr_iter iter </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_arr_iter_with</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">arr</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">while</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">((</span><span style="color:#A6ACCD;">val </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_arr_iter_next</span><span style="color:#89DDFF;">(&amp;</span><span style="color:#A6ACCD;font-style:italic;">iter</span><span style="color:#89DDFF;">)))</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">your_func</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">val</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>サンプルコード2（foreachマクロ）です：</p><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">yyjson_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">arr</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;"> // 走査される配列</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">size_t</span><span style="color:#A6ACCD;"> idx</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> max</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">val</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#82AAFF;">yyjson_arr_foreach</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">arr</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> idx</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> max</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> val</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">your_func</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">idx</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> val</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>また、ミュータブル配列に対応するミュータブルバージョンAPIも用意されています。</p><p>サンプルコード1（ミュータブル・イテレータAPI）：</p><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">arr</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;"> // 走査される配列</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">val</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_mut_arr_iter iter </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_mut_arr_iter_with</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">arr</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">while</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">((</span><span style="color:#A6ACCD;">val </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_mut_arr_iter_next</span><span style="color:#89DDFF;">(&amp;</span><span style="color:#A6ACCD;font-style:italic;">iter</span><span style="color:#89DDFF;">)))</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">your_val_is_unused</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">val</span><span style="color:#89DDFF;">))</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// イテレーションの中で現在の値を削除することができます。</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#82AAFF;">yyjson_mut_arr_iter_remove</span><span style="color:#89DDFF;">(&amp;</span><span style="color:#F07178;">iter</span><span style="color:#89DDFF;">);</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>サンプルコード2（ミュータブルforeachマクロ）：</p><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">arr</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;"> // 走査される配列</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">size_t</span><span style="color:#A6ACCD;"> idx</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> max</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">val</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#82AAFF;">yyjson_mut_arr_foreach</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">arr</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> idx</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> max</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> val</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">your_func</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">idx</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> val</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h2 id="jsonオブジェクト" tabindex="-1">JSONオブジェクト <a class="header-anchor" href="#jsonオブジェクト" aria-label="Permalink to &quot;JSONオブジェクト&quot;">​</a></h2><p>JSONオブジェクトにアクセスするために、以下の関数を使用することができます。</p><p>キーによって要素にアクセスすると、線形探索時間がかかる場合があることに注意してください。したがって、オブジェクトを反復処理する必要がある場合は、イテレータAPIを使用することが推奨されます。</p><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// このオブジェクトに含まれるキーと値のペアの数を返します。</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// input がオブジェクトでない場合、0 を返す。</span></span>
<span class="line"><span style="color:#C792EA;">size_t</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_obj_size</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">obj</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 指定されたキーがマッピングされている値を返します。</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// このオブジェクトにキーに対応するマッピングがない場合は NULL を返します。</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_val </span><span style="color:#89DDFF;">*</span><span style="color:#82AAFF;">yyjson_obj_get</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">obj</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">key</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_val </span><span style="color:#89DDFF;">*</span><span style="color:#82AAFF;">yyjson_obj_getn</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">obj</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">key</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">size_t</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">key_len</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// オブジェクトのキーの順序がコンパイル時に判明している場合、</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// を使用すると、オブジェクト全体の検索を回避することができます。</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 例）{ &quot;x&quot;:1, &quot;y&quot;:2, &quot;z&quot;:3 }。</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">obj </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> ...</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_obj_iter iter </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_obj_iter_with</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">obj</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">x </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_obj_iter_get</span><span style="color:#89DDFF;">(&amp;</span><span style="color:#A6ACCD;font-style:italic;">iter</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">x</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">z </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_obj_iter_get</span><span style="color:#89DDFF;">(&amp;</span><span style="color:#A6ACCD;font-style:italic;">iter</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">z</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span></code></pre></div><h2 id="jsonオブジェクト・イテレーター" tabindex="-1">JSONオブジェクト・イテレーター <a class="header-anchor" href="#jsonオブジェクト・イテレーター" aria-label="Permalink to &quot;JSONオブジェクト・イテレーター&quot;">​</a></h2><p>オブジェクトを走査するには、2つの方法があります。</p><p>サンプルコード1（イテレータAPI）：</p><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">yyjson_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">obj</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;"> // 走査されるオブジェクト</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">key</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">val</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_obj_iter iter </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_obj_iter_with</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">obj</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">while</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">((</span><span style="color:#A6ACCD;">key </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_obj_iter_next</span><span style="color:#89DDFF;">(&amp;</span><span style="color:#A6ACCD;font-style:italic;">iter</span><span style="color:#89DDFF;">)))</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    val </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">yyjson_obj_iter_get_val</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">key</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">your_func</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">key</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> val</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>サンプルコード2（foreachマクロ）です：</p><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">yyjson_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">obj</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;"> // this is your object</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">size_t</span><span style="color:#A6ACCD;"> idx</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> max</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">key</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">val</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#82AAFF;">yyjson_obj_foreach</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">obj</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> idx</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> max</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> key</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> val</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">your_func</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">key</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> val</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><br><p>また、ミュータブルオブジェクトをトラバースするミュータブルバージョンAPIもあります:<br>。</p><p>サンプルコード1（ミュータブル・イテレータAPI）：</p><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">obj</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;"> // 走査されるオブジェクト</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">key</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">val</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_mut_obj_iter iter </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_mut_obj_iter_with</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">obj</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">while</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">((</span><span style="color:#A6ACCD;">key </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_mut_obj_iter_next</span><span style="color:#89DDFF;">(&amp;</span><span style="color:#A6ACCD;font-style:italic;">iter</span><span style="color:#89DDFF;">)))</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    val </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">yyjson_mut_obj_iter_get_val</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">key</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">your_key_is_unused</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">key</span><span style="color:#89DDFF;">))</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// 繰り返しの中で、現在のkvペアを削除することができます。</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#82AAFF;">yyjson_mut_obj_iter_remove</span><span style="color:#89DDFF;">(&amp;</span><span style="color:#F07178;">iter</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>サンプルコード2（ミュータブルforeachマクロ）：</p><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">obj</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;"> // 走査されるオブジェクト</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">size_t</span><span style="color:#A6ACCD;"> idx</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> max</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">key</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">val</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#82AAFF;">yyjson_obj_foreach</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">obj</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> idx</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> max</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> key</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> val</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">your_func</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">key</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> val</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><hr><h1 id="jsonドキュメントの作成" tabindex="-1">JSONドキュメントの作成 <a class="header-anchor" href="#jsonドキュメントの作成" aria-label="Permalink to &quot;JSONドキュメントの作成&quot;">​</a></h1><p>JSONドキュメントを作成するには <code>yyjson_mut_doc</code> と関連するAPIを使用します。<br></p><p><code>yyjson_mut_doc</code>はすべての文字列と値を保持するために<strong>メモリプール</strong>を使用することに注意してください; プールは全体としてのみ作成、成長、解放することができます。したがって、<code>yyjson_mut_doc</code>は既存のドキュメントに変異を加えるよりも、一度だけ書き込みを行うのに適しています。</p><p>JSONオブジェクトと配列はリンクされたリストで構成されているので、各<code>yyjson_mut_val</code>は1つのオブジェクトまたは配列にしか追加できません。</p><p>サンプルコードです：</p><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// このJSONを構築します：</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//     {</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//        &quot;page&quot;: 123,</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//        &quot;names&quot;: [ &quot;Harry&quot;, &quot;Ron&quot;, &quot;Hermione&quot; ]</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//     }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// ミュータブル・ドキュメントを作成する。</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_mut_doc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">doc </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_mut_doc_new</span><span style="color:#89DDFF;">(NULL);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// オブジェクトを作成し、その値のメモリはdocが保持する。</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">root </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_mut_obj</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">doc</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// キーとバリューを作成し、ルートオブジェクトに追加します。</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">key </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_mut_str</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">doc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">page</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">num </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_mut_int</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">doc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">123</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#82AAFF;">yyjson_mut_obj_add</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">root</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> key</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> num</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 文字列を3つ作成し、配列オブジェクトに追加します。</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">names </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_mut_arr</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">doc</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">name1 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_mut_str</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">doc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Harry</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">name2 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_mut_str</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">doc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Ron</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">name3 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_mut_str</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">doc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Hermione</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#82AAFF;">yyjson_mut_arr_append</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">names</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> name1</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#82AAFF;">yyjson_mut_arr_append</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">names</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> name2</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#82AAFF;">yyjson_mut_arr_append</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">names</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> name3</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// ❌ 間違いです！値はすでに別のコンテナに追加されています。</span></span>
<span class="line"><span style="color:#82AAFF;">yyjson_mut_obj_add</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">root</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> key</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> name1</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// ドキュメントのルート値を設定します。</span></span>
<span class="line"><span style="color:#82AAFF;">yyjson_mut_doc_set_root</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">doc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> root</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// JSON文字列に書き込む</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">json </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_mut_write</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">doc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">NULL);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// ドキュメントのメモリと、そのドキュメントから生み出されるすべての値を解放する。</span></span>
<span class="line"><span style="color:#82AAFF;">yyjson_mut_doc_free</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">doc</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span></code></pre></div><h2 id="ミュータブル・ドキュメント" tabindex="-1">ミュータブル・ドキュメント <a class="header-anchor" href="#ミュータブル・ドキュメント" aria-label="Permalink to &quot;ミュータブル・ドキュメント&quot;">​</a></h2><p>JSONドキュメントの作成、変更、コピー、破棄を行うには、以下の関数を使用します。</p><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 新しいミュータブルJSONドキュメントを作成し、返します。</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// エラー時（メモリ割り当ての失敗など）にはNULLを返します。</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// alc\` が NULL の場合、デフォルトのアロケータが使用される。</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_mut_doc </span><span style="color:#89DDFF;">*</span><span style="color:#82AAFF;">yyjson_mut_doc_new</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_alc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">alc</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// JSONドキュメントを削除し、このドキュメントのメモリとこのドキュメントから作成されたすべての値を解放します。</span></span>
<span class="line"><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_mut_doc_free</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_mut_doc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">doc</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 内部メモリプールサイズ（文字列長、値数）を設定します。</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 次の文字列や価値創造のためのメモリを確保するために使用することができます。</span></span>
<span class="line"><span style="color:#C792EA;">bool</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_mut_doc_set_str_pool_size</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_mut_doc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">doc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">size_t</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">len</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#C792EA;">bool</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_mut_doc_set_val_pool_size</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_mut_doc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">doc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">size_t</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">count</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// この JSON 文書のルート値を取得または設定します。</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#82AAFF;">yyjson_mut_doc_get_root</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_mut_doc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">doc</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_mut_doc_set_root</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_mut_doc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">doc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">root</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 入力から新しいミュータブル文書/値をコピーして返す。</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// エラー時（メモリ割り当ての失敗など）にはNULLを返します。</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// doc -&gt; mut_doc</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_mut_doc </span><span style="color:#89DDFF;">*</span><span style="color:#82AAFF;">yyjson_doc_mut_copy</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_doc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">doc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> yyjson_alc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">alc</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// val -&gt; mut_val</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#82AAFF;">yyjson_val_mut_copy</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_mut_doc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">doc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">  yyjson_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">val</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// mut_doc -&gt; mut_doc</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_mut_doc </span><span style="color:#89DDFF;">*</span><span style="color:#82AAFF;">yyjson_mut_doc_mut_copy</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_mut_doc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">doc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> yyjson_alc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">alc</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// mut_val -&gt; mut_val</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#82AAFF;">yyjson_mut_val_mut_copy</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_mut_doc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">doc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">val</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// mut_doc -&gt; doc</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_doc </span><span style="color:#89DDFF;">*</span><span style="color:#82AAFF;">yyjson_mut_doc_imut_copy</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_mut_doc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">doc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> yyjson_alc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">alc</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// mut_val -&gt; doc</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_doc </span><span style="color:#89DDFF;">*</span><span style="color:#82AAFF;">yyjson_mut_val_imut_copy</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">val</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> yyjson_alc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">alc</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span></code></pre></div><h2 id="json値の作成" tabindex="-1">JSON値の作成 <a class="header-anchor" href="#json値の作成" aria-label="Permalink to &quot;JSON値の作成&quot;">​</a></h2><p>以下の関数を使用して、変更可能なJSON値を作成します。値のメモリはドキュメントに保持されます。</p><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 新しい値を生成して返す、 エラー時にNULLを返す。</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#82AAFF;">yyjson_mut_null</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_mut_doc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">doc</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#82AAFF;">yyjson_mut_true</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_mut_doc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">doc</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#82AAFF;">yyjson_mut_false</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_mut_doc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">doc</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#82AAFF;">yyjson_mut_bool</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_mut_doc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">doc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">bool</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">val</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#82AAFF;">yyjson_mut_uint</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_mut_doc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">doc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">uint64_t</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">num</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#82AAFF;">yyjson_mut_sint</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_mut_doc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">doc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">int64_t</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">num</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#82AAFF;">yyjson_mut_int</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_mut_doc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">doc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">int64_t</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">num</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#82AAFF;">yyjson_mut_real</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_mut_doc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">doc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">double</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">num</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 文字列の値を作成します。入力文字列はコピーされません。</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#82AAFF;">yyjson_mut_str</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_mut_doc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">doc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">str</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#82AAFF;">yyjson_mut_strn</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_mut_doc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">doc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">str</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">size_t</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">len</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 文字列値を作成します。入力された文字列はコピーされ、ドキュメントに保持されます。</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#82AAFF;">yyjson_mut_strcpy</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_mut_doc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">doc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">str</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#82AAFF;">yyjson_mut_strncpy</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_mut_doc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">doc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">str</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">size_t</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">len</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span></code></pre></div><h2 id="json配列の作成" tabindex="-1">JSON配列の作成 <a class="header-anchor" href="#json配列の作成" aria-label="Permalink to &quot;JSON配列の作成&quot;">​</a></h2><p>ミュータブルJSON配列の作成には、以下の関数を使用します。</p><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 空のミュータブル配列を作成し、それを返す, エラー時にNULLを返す.</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#82AAFF;">yyjson_mut_arr</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_mut_doc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">doc</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// c array を持つミュータブル配列を作成し、返します。</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#82AAFF;">yyjson_mut_arr_with_bool</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_mut_doc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">doc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">bool</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">vals</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">size_t</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">count</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#82AAFF;">yyjson_mut_arr_with_sint</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_mut_doc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">doc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">int64_t</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">vals</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">size_t</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">count</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#82AAFF;">yyjson_mut_arr_with_uint</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_mut_doc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">doc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">uint64_t</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">vals</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">size_t</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">count</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#82AAFF;">yyjson_mut_arr_with_real</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_mut_doc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">doc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">double</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">vals</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">size_t</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">count</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#82AAFF;">yyjson_mut_arr_with_sint8</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_mut_doc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">doc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">int8_t</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">vals</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">size_t</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">count</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#82AAFF;">yyjson_mut_arr_with_sint16</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_mut_doc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">doc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">int16_t</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">vals</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">size_t</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">count</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#82AAFF;">yyjson_mut_arr_with_sint32</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_mut_doc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">doc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">int32_t</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">vals</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">size_t</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">count</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#82AAFF;">yyjson_mut_arr_with_sint64</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_mut_doc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">doc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">int64_t</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">vals</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">size_t</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">count</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#82AAFF;">yyjson_mut_arr_with_uint8</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_mut_doc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">doc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">uint8_t</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">vals</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">size_t</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">count</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#82AAFF;">yyjson_mut_arr_with_uint16</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_mut_doc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">doc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">uint16_t</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">vals</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">size_t</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">count</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#82AAFF;">yyjson_mut_arr_with_uint32</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_mut_doc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">doc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">uint32_t</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">vals</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">size_t</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">count</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#82AAFF;">yyjson_mut_arr_with_uint64</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_mut_doc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">doc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">uint64_t</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">vals</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">size_t</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">count</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#82AAFF;">yyjson_mut_arr_with_float</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_mut_doc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">doc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">float</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">vals</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">size_t</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">count</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#82AAFF;">yyjson_mut_arr_with_double</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_mut_doc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">doc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">double</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">vals</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">size_t</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">count</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// サンプルコードです：</span></span>
<span class="line"><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> vals</span><span style="color:#89DDFF;">[</span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{-</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">arr </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_mut_arr_with_sint32</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">doc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> vals</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 文字列を含むミュータブル配列を作成し、返します、 文字列はUTF-8でエンコードされる必要があります。</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#82AAFF;">yyjson_mut_arr_with_str</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_mut_doc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">doc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">**</span><span style="color:#A6ACCD;font-style:italic;">vals</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">size_t</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">count</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#82AAFF;">yyjson_mut_arr_with_strn</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_mut_doc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">doc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">**</span><span style="color:#A6ACCD;font-style:italic;">vals</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">size_t</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">lens</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">size_t</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">count</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#82AAFF;">yyjson_mut_arr_with_strcpy</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_mut_doc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">doc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">**</span><span style="color:#A6ACCD;font-style:italic;">vals</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">size_t</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">count</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#82AAFF;">yyjson_mut_arr_with_strncpy</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_mut_doc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">doc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">**</span><span style="color:#A6ACCD;font-style:italic;">vals</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">size_t</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">lens</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">size_t</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">count</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// サンプルコードです：</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> strs</span><span style="color:#89DDFF;">[</span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Jan</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Feb</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Mar</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">arr </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_mut_arr_with_str</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">doc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> strs</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span></code></pre></div><h2 id="json配列の変更" tabindex="-1">JSON配列の変更 <a class="header-anchor" href="#json配列の変更" aria-label="Permalink to &quot;JSON配列の変更&quot;">​</a></h2><p>JSON配列の内容を変更するには、以下の関数を使用します。</p><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 指定されたインデックスの配列に値を挿入します。</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// エラー時（例：境界外）にfalseを返す。</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// なお、この関数は線形探索時間を要する。</span></span>
<span class="line"><span style="color:#C792EA;">bool</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_mut_arr_insert</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">arr</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">val</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">size_t</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">idx</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 配列の末尾に val を挿入する。エラー時には false を返す。</span></span>
<span class="line"><span style="color:#C792EA;">bool</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_mut_arr_append</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">arr</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">val</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 配列の先頭に val を挿入する。エラー時には false を返す。</span></span>
<span class="line"><span style="color:#C792EA;">bool</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_mut_arr_prepend</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">arr</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">val</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// インデックスにある値を置き換えて古い値を返す，エラー時にはNULLを返す。</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// なお、この関数は線形探索時間を要する。</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#82AAFF;">yyjson_mut_arr_replace</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">arr</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">size_t</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">idx</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">val</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// インデックスにある値を削除して返す。</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// なお、この関数は線形探索時間を要する。</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#82AAFF;">yyjson_mut_arr_remove</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">arr</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">size_t</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">idx</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// この配列の最初の値を削除して返します。</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#82AAFF;">yyjson_mut_arr_remove_first</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">arr</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// この配列の最後の値を削除して返します。</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#82AAFF;">yyjson_mut_arr_remove_last</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">arr</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 配列中の指定された範囲内のすべての値を削除します。</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// なお、この関数は線形探索時間を要する。</span></span>
<span class="line"><span style="color:#C792EA;">bool</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_mut_arr_remove_range</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">arr</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">size_t</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">idx</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">size_t</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">len</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// この配列に含まれるすべての値を削除します。</span></span>
<span class="line"><span style="color:#C792EA;">bool</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_mut_arr_clear</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">arr</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 便利なAPIです：</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 配列の末尾に値を追加する。エラー時には false を返す。</span></span>
<span class="line"><span style="color:#C792EA;">bool</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_mut_arr_add_val</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">arr</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">val</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#C792EA;">bool</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_mut_arr_add_null</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_mut_doc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">doc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">arr</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#C792EA;">bool</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_mut_arr_add_true</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_mut_doc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">doc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">arr</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#C792EA;">bool</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_mut_arr_add_false</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_mut_doc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">doc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">arr</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#C792EA;">bool</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_mut_arr_add_bool</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_mut_doc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">doc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">arr</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">bool</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">val</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#C792EA;">bool</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_mut_arr_add_uint</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_mut_doc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">doc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">arr</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">uint64_t</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">num</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#C792EA;">bool</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_mut_arr_add_sint</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_mut_doc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">doc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">arr</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">int64_t</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">num</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#C792EA;">bool</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_mut_arr_add_int</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_mut_doc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">doc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">arr</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">int64_t</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">num</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#C792EA;">bool</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_mut_arr_add_real</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_mut_doc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">doc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">arr</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">double</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">num</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#C792EA;">bool</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_mut_arr_add_str</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_mut_doc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">doc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">arr</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">str</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#C792EA;">bool</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_mut_arr_add_strn</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_mut_doc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">doc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">arr</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">str</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">size_t</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">len</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#C792EA;">bool</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_mut_arr_add_strcpy</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_mut_doc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">doc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">arr</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">str</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#C792EA;">bool</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_mut_arr_add_strncpy</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_mut_doc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">doc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">arr</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">str</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">size_t</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">len</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 便利なAPIです：</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 新しい配列を作成し、配列の末尾に追加します。</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 新しい配列、またはエラー時に NULL を返します。</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#82AAFF;">yyjson_mut_arr_add_arr</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_mut_doc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">doc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">arr</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 便利なAPIです：</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 新しいオブジェクトを作成し、配列の末尾に追加します。</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 新しいオブジェクトを返し、エラーがあればNULLを返す。</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#82AAFF;">yyjson_mut_arr_add_obj</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_mut_doc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">doc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">arr</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span></code></pre></div><h2 id="jsonオブジェクトの作成" tabindex="-1">JSONオブジェクトの作成 <a class="header-anchor" href="#jsonオブジェクトの作成" aria-label="Permalink to &quot;JSONオブジェクトの作成&quot;">​</a></h2><p>ミュータブルなJSONオブジェクトを作成するには、以下の関数を使用します。<br></p><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// ミュータブルオブジェクトを作成し、返します。</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#82AAFF;">yyjson_mut_obj</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_mut_doc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">doc</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// キーと値を持つミュータブルオブジェクトを作成し、返します（エラー時にはNULLを返します）。キーと値はコピーされない。</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 文字列はUTF-8でエンコードされ、ヌルターミネーターが付与されている必要があります。</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#82AAFF;">yyjson_mut_obj_with_str</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_mut_doc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">doc</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">                                        </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">**</span><span style="color:#A6ACCD;font-style:italic;">keys</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">                                        </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">**</span><span style="color:#A6ACCD;font-style:italic;">vals</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">                                        </span><span style="color:#C792EA;">size_t</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">count</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// サンプルコードです：</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> keys</span><span style="color:#C792EA;">[]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">name</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">type</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">id</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">vals</span><span style="color:#C792EA;">[]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Harry</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">student</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">123456</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#82AAFF;">yyjson_mut_obj_with_str</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">doc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> keys</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> vals</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// キーと値のペアを持つミュータブルオブジェクトを作成し、返します（エラー時にはNULLを返します）。キーと値はコピーされない。</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 文字列はUTF-8でエンコードされ、ヌルターミネーターが付与されている必要があります。</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#82AAFF;">yyjson_mut_obj_with_kv</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_mut_doc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">doc</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">                                       </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">**</span><span style="color:#A6ACCD;font-style:italic;">kv_pairs</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">                                       </span><span style="color:#C792EA;">size_t</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">pair_count</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// サンプルコードです：</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">pairs</span><span style="color:#C792EA;">[]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">name</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Harry</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">type</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">student</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">id</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">123456</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#82AAFF;">yyjson_mut_obj_with_kv</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">doc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> pairs</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span></code></pre></div><h2 id="jsonオブジェクトの修正" tabindex="-1">JSONオブジェクトの修正 <a class="header-anchor" href="#jsonオブジェクトの修正" aria-label="Permalink to &quot;JSONオブジェクトの修正&quot;">​</a></h2><p>JSONオブジェクトの内容を変更するには、以下の関数を使用します。<br></p><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// オブジェクトの末尾にキーとバリューのペアを追加する。</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// キーは文字列の値でなければならない。</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// この機能により、1つのオブジェクトに複数のキーを複製することができます。</span></span>
<span class="line"><span style="color:#C792EA;">bool</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_mut_obj_add</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">obj</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">key</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">val</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// オブジェクトにキーとバリューのペアを追加する。</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// キーは文字列の値でなければならない。</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// この関数は、追加する前に、与えられたキーに対応するすべてのキー-バリューペアを削除することができる。</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// なお、この関数は線形探索時間を要する。</span></span>
<span class="line"><span style="color:#C792EA;">bool</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_mut_obj_put</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">obj</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">key</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">val</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 与えられたキーを持つオブジェクトからキーと値のペアを削除する。</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// なお、この関数は線形探索時間を要する。</span></span>
<span class="line"><span style="color:#C792EA;">bool</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_mut_obj_remove</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">obj</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">key</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// このオブジェクトのすべてのキーとバリューのペアを削除します。</span></span>
<span class="line"><span style="color:#C792EA;">bool</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_mut_obj_clear</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">obj</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 便利なAPIです：</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// オブジェクトの末尾にキーと値のペアを追加する。キーはコピーされない。</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// なお、これらの関数は、1つのオブジェクトに複数のキーを持たせることができます。</span></span>
<span class="line"><span style="color:#C792EA;">bool</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_mut_obj_add_null</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_mut_doc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">doc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">obj</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">key</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#C792EA;">bool</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_mut_obj_add_true</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_mut_doc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">doc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">obj</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">key</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#C792EA;">bool</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_mut_obj_add_false</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_mut_doc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">doc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">obj</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">key</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#C792EA;">bool</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_mut_obj_add_bool</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_mut_doc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">doc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">obj</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">key</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">bool</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">val</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#C792EA;">bool</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_mut_obj_add_uint</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_mut_doc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">doc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">obj</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">key</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">uint64_t</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">val</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#C792EA;">bool</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_mut_obj_add_sint</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_mut_doc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">doc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">obj</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">key</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">int64_t</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">val</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#C792EA;">bool</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_mut_obj_add_int</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_mut_doc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">doc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">obj</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">key</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">int64_t</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">val</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#C792EA;">bool</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_mut_obj_add_real</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_mut_doc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">doc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">obj</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">key</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">double</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">val</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#C792EA;">bool</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_mut_obj_add_str</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_mut_doc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">doc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">obj</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">key</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">val</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#C792EA;">bool</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_mut_obj_add_strn</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_mut_doc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">doc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">obj</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">key</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">val</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">size_t</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">len</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#C792EA;">bool</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_mut_obj_add_strcpy</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_mut_doc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">doc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">obj</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">key</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">val</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#C792EA;">bool</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_mut_obj_add_strncpy</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_mut_doc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">doc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">obj</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">key</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">val</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">size_t</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">len</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 便利なAPIです：</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 与えられたキーに対応するすべてのキーとバリューのペアを削除します。</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// なお、この関数は線形探索時間を要する。</span></span>
<span class="line"><span style="color:#C792EA;">bool</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_mut_obj_remove_str</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">obj</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">key</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#C792EA;">bool</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_mut_obj_remove_strn</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">obj</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">key</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">size_t</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">len</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 便利なAPIです：</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 一致するすべてのキーを新しいキーで置き換えます。</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 少なくとも1つのキーがリネームされた場合、trueを返します。</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// この関数は、線形探索時間を要します。</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_api_inline </span><span style="color:#C792EA;">bool</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_mut_obj_rename_key</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_mut_doc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">doc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">obj</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">key</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">new_key</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_api_inline </span><span style="color:#C792EA;">bool</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_mut_obj_rename_keyn</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_mut_doc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">doc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">obj</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">key</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">size_t</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">len</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">new_key</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">size_t</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">new_len</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span></code></pre></div><hr><h1 id="jsonポインタとパッチ" tabindex="-1">JSONポインタとパッチ <a class="header-anchor" href="#jsonポインタとパッチ" aria-label="Permalink to &quot;JSONポインタとパッチ&quot;">​</a></h1><h2 id="jsonポインタ" tabindex="-1">JSONポインタ <a class="header-anchor" href="#jsonポインタ" aria-label="Permalink to &quot;JSONポインタ&quot;">​</a></h2><p><code>JSONポインタ</code>によるJSON値のクエリをサポートします。 (<a href="https://tools.ietf.org/html/rfc6901" target="_blank" rel="noreferrer">RFC 6901</a>).</p><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// \`JSONポインタ\`はヌル文字で終端された文字列である。</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_val </span><span style="color:#89DDFF;">*</span><span style="color:#82AAFF;">yyjson_ptr_get</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">val</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">ptr</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_val </span><span style="color:#89DDFF;">*</span><span style="color:#82AAFF;">yyjson_doc_ptr_get</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_doc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">doc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">ptr</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#82AAFF;">yyjson_mut_ptr_get</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">val</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">ptr</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#82AAFF;">yyjson_mut_doc_ptr_get</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_mut_doc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">doc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">ptr</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 文字列の長さを持つ \`JSON ポインタ\` で、内部に NUL (Unicode U+0000) 文字を許可します。</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_val </span><span style="color:#89DDFF;">*</span><span style="color:#82AAFF;">yyjson_ptr_getn</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">val</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">ptr</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">size_t</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">len</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_val </span><span style="color:#89DDFF;">*</span><span style="color:#82AAFF;">yyjson_doc_ptr_getn</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_doc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">doc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">ptr</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">size_t</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">len</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#82AAFF;">yyjson_mut_ptr_getn</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">val</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">ptr</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">size_t</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">len</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#82AAFF;">yyjson_mut_doc_ptr_getn</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_mut_doc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">doc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">ptr</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">size_t</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">len</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 文字列の長さ、コンテキスト、エラー情報を含む \`JSON ポインタ\`。</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_val </span><span style="color:#89DDFF;">*</span><span style="color:#82AAFF;">yyjson_ptr_getx</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">val</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">ptr</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">size_t</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">len</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> yyjson_ptr_err </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">err</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_val </span><span style="color:#89DDFF;">*</span><span style="color:#82AAFF;">yyjson_doc_ptr_getx</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_doc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">doc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">ptr</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">size_t</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">len</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> yyjson_ptr_err </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">err</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#82AAFF;">yyjson_mut_ptr_getx</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">val</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">ptr</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">size_t</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">len</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> yyjson_ptr_ctx </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">ctx</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> yyjson_ptr_err </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">err</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#82AAFF;">yyjson_mut_doc_ptr_getx</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_mut_doc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">doc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">ptr</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">size_t</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">len</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> yyjson_ptr_ctx </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">ctx</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> yyjson_ptr_err </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">err</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span></code></pre></div><p>例えば、JSONドキュメントがあるとします：</p><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">size</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">users</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">{</span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">id</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">name</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Harry</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">{</span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">id</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">name</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Ron</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">{</span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">id</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">name</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Hermione</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>以下のJSON文字列は、付随する値として評価されます：</p><table><thead><tr><th style="text-align:left;">Pointer</th><th style="text-align:left;">Matched Value</th></tr></thead><tbody><tr><td style="text-align:left;"><code>&quot;&quot;</code></td><td style="text-align:left;"><code>the whole document</code></td></tr><tr><td style="text-align:left;"><code>&quot;/size&quot;</code></td><td style="text-align:left;"><code>3</code></td></tr><tr><td style="text-align:left;"><code>&quot;/users/0&quot;</code></td><td style="text-align:left;"><code>{&quot;id&quot;: 1, &quot;name&quot;: &quot;Harry&quot;}</code></td></tr><tr><td style="text-align:left;"><code>&quot;/users/1/name&quot;</code></td><td style="text-align:left;"><code>&quot;Ron&quot;</code></td></tr><tr><td style="text-align:left;"><code>&quot;/no_match&quot;</code></td><td style="text-align:left;">NULL</td></tr><tr><td style="text-align:left;"><code>&quot;no_slash&quot;</code></td><td style="text-align:left;">NULL</td></tr><tr><td style="text-align:left;"><code>&quot;/&quot;</code></td><td style="text-align:left;">NULL (match to empty key: root[&quot;&quot;])</td></tr></tbody></table><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">yyjson_doc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">doc </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> ...</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">val </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_doc_ptr_get</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">doc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/users/1/name</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#82AAFF;">printf</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">%s</span><span style="color:#A6ACCD;">\\n</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_get_str</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">val</span><span style="color:#89DDFF;">));</span><span style="color:#676E95;font-style:italic;"> // Ron</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_ptr_err err</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">val2 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_doc_ptr_getx</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">doc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;font-style:italic;">err</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(!</span><span style="color:#A6ACCD;">val2</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">printf</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">err %d: %s</span><span style="color:#A6ACCD;">\\n</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> err.code</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> err.msg</span><span style="color:#89DDFF;">);</span><span style="color:#676E95;font-style:italic;"> // err 3: 収まりきらない</span></span>
<span class="line"></span></code></pre></div><p>The library also supports modifying JSON values via <code>JSON Pointer</code>.</p><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 新しい値を追加または挿入します。</span></span>
<span class="line"><span style="color:#C792EA;">bool</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_mut_ptr_add</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">val</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">ptr</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">new_val</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> yyjson_mut_doc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">doc</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#C792EA;">bool</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_mut_ptr_addn</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">val</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">ptr</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">size_t</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">len</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">new_val</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> yyjson_mut_doc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">doc</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#C792EA;">bool</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_mut_ptr_addx</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">val</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">ptr</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">size_t</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">len</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">new_val</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> yyjson_mut_doc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">doc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">bool</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">create_parent</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> yyjson_ptr_ctx </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">ctx</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> yyjson_ptr_err </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">err</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">                                           </span></span>
<span class="line"><span style="color:#C792EA;">bool</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_mut_doc_ptr_add</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_mut_doc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">doc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">ptr</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">new_val</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#C792EA;">bool</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_mut_doc_ptr_addn</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_mut_doc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">doc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">ptr</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">size_t</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">len</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">new_val</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#C792EA;">bool</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_mut_doc_ptr_addx</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_mut_doc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">doc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">ptr</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">size_t</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">len</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">new_val</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">bool</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">create_parent</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> yyjson_ptr_ctx </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">ctx</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> yyjson_ptr_err </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">err</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 新しい値を設定する（存在しない場合は追加、存在する場合は置換）。</span></span>
<span class="line"><span style="color:#C792EA;">bool</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_mut_ptr_set</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">val</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">ptr</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">new_val</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> yyjson_mut_doc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">doc</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#C792EA;">bool</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_mut_ptr_setn</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">val</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">ptr</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">size_t</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">len</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">new_val</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> yyjson_mut_doc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">doc</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#C792EA;">bool</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_mut_ptr_setx</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">val</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">ptr</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">size_t</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">len</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">new_val</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> yyjson_mut_doc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">doc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">bool</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">create_parent</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> yyjson_ptr_ctx </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">ctx</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> yyjson_ptr_err </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">err</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">                                             </span></span>
<span class="line"><span style="color:#C792EA;">bool</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_mut_doc_ptr_set</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_mut_doc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">doc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">ptr</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">new_val</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#C792EA;">bool</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_mut_doc_ptr_setn</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_mut_doc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">doc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">ptr</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">size_t</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">len</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">new_val</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#C792EA;">bool</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_mut_doc_ptr_setx</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_mut_doc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">doc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">ptr</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">size_t</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">len</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">new_val</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">bool</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">create_parent</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> yyjson_ptr_ctx </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">ctx</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> yyjson_ptr_err </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">err</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 既存の値を置き換える。</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#82AAFF;">yyjson_mut_ptr_replace</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">val</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">ptr</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">new_val</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#82AAFF;">yyjson_mut_ptr_replacen</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">val</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">ptr</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">size_t</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">len</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">new_val</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#82AAFF;">yyjson_mut_ptr_replacex</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">val</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">ptr</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">size_t</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">len</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">new_val</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> yyjson_ptr_ctx </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">ctx</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> yyjson_ptr_err </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">err</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#82AAFF;">yyjson_mut_doc_ptr_replace</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_mut_doc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">doc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">ptr</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">new_val</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#82AAFF;">yyjson_mut_doc_ptr_replacen</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_mut_doc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">doc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">ptr</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">size_t</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">len</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">new_val</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#82AAFF;">yyjson_mut_doc_ptr_replacex</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_mut_doc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">doc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">ptr</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">size_t</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">len</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">new_val</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> yyjson_ptr_ctx </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">ctx</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> yyjson_ptr_err </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">err</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 既存の値を削除する。</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#82AAFF;">yyjson_mut_ptr_remove</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">val</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">ptr</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#82AAFF;">yyjson_mut_ptr_removen</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">val</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">ptr</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">size_t</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">len</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#82AAFF;">yyjson_mut_ptr_removex</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">val</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">ptr</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">size_t</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">len</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> yyjson_ptr_ctx </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">ctx</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> yyjson_ptr_err </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">err</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#82AAFF;">yyjson_mut_doc_ptr_remove</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_mut_doc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">doc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">ptr</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#82AAFF;">yyjson_mut_doc_ptr_removen</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_mut_doc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">doc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">ptr</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">size_t</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">len</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#82AAFF;">yyjson_mut_doc_ptr_removex</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_mut_doc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">doc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">ptr</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">size_t</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">len</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> yyjson_ptr_ctx </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">ctx</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> yyjson_ptr_err </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">err</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span></code></pre></div><p>例えば、こんな感じです：</p><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">yyjson_mut_doc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">doc </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> ...</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// doc: {&quot;a&quot;:0,&quot;b&quot;:[1,2,3]}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">yyjson_mut_doc_ptr_set</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">doc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/a</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_mut_int</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">doc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">9</span><span style="color:#89DDFF;">));</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// now: {&quot;a&quot;:9,&quot;b&quot;:[1,2,3]}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">yyjson_mut_doc_ptr_add</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">doc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/b/-</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_mut_int</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">doc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">4</span><span style="color:#89DDFF;">));</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// now: {&quot;a&quot;:9,&quot;b&quot;:[1,2,3,4]}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">yyjson_mut_doc_ptr_remove</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">doc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/b</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// now: {&quot;a&quot;:9}</span></span>
<span class="line"></span></code></pre></div><p>上記の <code>x</code> で終わるすべての関数は、結果コンテキスト <code>ctx</code> とエラーメッセージ <code>err</code> を得るために使用することができる。例えば</p><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// doc: {&quot;a&quot;:0,&quot;b&quot;:[null,2,3]}</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_mut_doc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">doc </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> ...</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// エラーコードとメッセージを受け取る</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_ptr_err err</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#82AAFF;">yyjson_mut_doc_ptr_setx</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">doc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/b/99</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">4</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_mut_int</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">doc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">99</span><span style="color:#89DDFF;">),</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">true,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">NULL,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;font-style:italic;">err</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">err.code</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">printf</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">err: %s</span><span style="color:#A6ACCD;">\\n</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> err.msg</span><span style="color:#89DDFF;">);</span><span style="color:#676E95;font-style:italic;"> // err: cannot resolve</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// ターゲット値のコンテキストを取得し、JSONポインタを再パースせずにいくつかの操作を行う。</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">val </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_mut_doc_ptr_getx</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">doc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/b/0</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">4</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;font-style:italic;">ctx</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;font-style:italic;">err</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">yyjson_mut_is_null</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">val</span><span style="color:#89DDFF;">))</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_ptr_ctx_remove</span><span style="color:#89DDFF;">(&amp;</span><span style="color:#A6ACCD;font-style:italic;">ctx</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// now: {&quot;a&quot;:0,&quot;b&quot;:[2,3]}</span></span>
<span class="line"></span></code></pre></div><h2 id="jsonパッチ" tabindex="-1">JSONパッチ <a class="header-anchor" href="#jsonパッチ" aria-label="Permalink to &quot;JSONパッチ&quot;">​</a></h2><p>JSON Patch (RFC 6902)をサポートしています。 仕様と例を示します： <a href="https://tools.ietf.org/html/rfc6902" target="_blank" rel="noreferrer">https://tools.ietf.org/html/rfc6902</a></p><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// パッチされたJSON値を作成し、返します。</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// パッチが適用できなかった場合はNULLを返す。</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#82AAFF;">yyjson_patch</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_mut_doc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">doc</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">                             yyjson_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">orig</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">                             yyjson_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">patch</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">                             yyjson_patch_err </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">err</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#82AAFF;">yyjson_mut_patch</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_mut_doc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">doc</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">                                 yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">orig</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">                                 yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">patch</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">                                 yyjson_patch_err </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">err</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span></code></pre></div><h2 id="json-マージパッチ" tabindex="-1">JSON マージパッチ <a class="header-anchor" href="#json-マージパッチ" aria-label="Permalink to &quot;JSON マージパッチ&quot;">​</a></h2><p>JSON Merge Patch (RFC 7386)をサポートしています。 仕様と例を示します： <a href="https://tools.ietf.org/html/rfc7386" target="_blank" rel="noreferrer">https://tools.ietf.org/html/rfc7386</a></p><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// マージパッチを施したJSON値を作成し、返します。</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// パッチが適用できなかった場合はNULLを返す。</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#82AAFF;">yyjson_merge_patch</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_mut_doc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">doc</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">                                   yyjson_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">orig</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">                                   yyjson_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">patch</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#82AAFF;">yyjson_mut_merge_patch</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">yyjson_mut_doc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">doc</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">                                       yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">orig</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">                                       yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">patch</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span></code></pre></div><hr><h1 id="数値処理" tabindex="-1">数値処理 <a class="header-anchor" href="#数値処理" aria-label="Permalink to &quot;数値処理&quot;">​</a></h1><h2 id="数値リーダー" tabindex="-1">数値リーダー <a class="header-anchor" href="#数値リーダー" aria-label="Permalink to &quot;数値リーダー&quot;">​</a></h2><p>本ライブラリには高性能な数値リーダーが内蔵されており、デフォルトでこれらのルールに従って数値を解析します：<br></p><ul><li>正の整数を <code>uint64_t</code> として読み込み、オーバーフローした場合、<code>double</code> に変換する。</li><li>負の整数を <code>int64_t</code> として読み込み、オーバーフローした場合は <code>double</code> に変換する。</li><li>浮動小数点数を正しい丸め方で <code>double</code> として読み込む（ulpエラーなし）。</li><li>実数がオーバーフロー（無限大）した場合、エラーを報告する。</li><li>数値が<a href="https://www.json.org" target="_blank" rel="noreferrer">JSON</a>の規格と一致しない場合は、エラーを報告します。</li></ul><p><code>YYJSON_READ_ALLOW_INF_AND_NAN</code> フラグを使用すると、 <code>nan</code> と <code>inf</code> の数値/リテラルを許可することができます。また、 <code>YYJSON_READ_NUMBER_AS_RAW</code> を使用すると、数値をパースせずに生の文字列として読み込むことができます。詳しくは <code>Reader flag</code> を参照。</p><h2 id="ナンバーライター" tabindex="-1">ナンバーライター <a class="header-anchor" href="#ナンバーライター" aria-label="Permalink to &quot;ナンバーライター&quot;">​</a></h2><p>本ライブラリには高性能なナンバーライターが内蔵されており、デフォルトでこれらのルールに従って数字を書き込むことができます：<br></p><ul><li>正の整数を符号なしで書き込む。</li><li>負の整数を負の符号付きで書きます。</li><li>浮動小数点数を<a href="https://www.ecma-international.org/ecma-262/11.0/index.html#sec-numeric-types-number-tostring" target="_blank" rel="noreferrer">ECMAScript format</a>で記述するが，以下の変更がある． <ul><li>数値が <code>Infinity</code> または <code>NaN</code> の場合、エラーを報告する。</li><li>入力情報を保持するため、0.0 の負符号を保持する。</li><li>指数部の正符号を削除する。</li></ul></li><li>浮動小数点数ライターは、正しく丸められた最短の10進数表現を生成する必要があります。</li></ul><p><code>YYJSON_WRITE_ALLOW_INF_AND_NAN</code> フラグを使用すると、 inf/nan 数を <code>Infinity</code> および <code>NaN</code> リテラルとしてエラーなく記述できますが、これは標準の JSON ではありません。また、 <code>YYJSON_WRITE_INF_AND_NAN_AS_NULL</code> を使用すると、 inf/nan 数を <code>null</code> リテラルとして書き込むことができます。詳しくは <code>Writer flag</code> を参照してください。</p><h1 id="テキスト処理" tabindex="-1">テキスト処理 <a class="header-anchor" href="#テキスト処理" aria-label="Permalink to &quot;テキスト処理&quot;">​</a></h1><h2 id="文字エンコーディング" tabindex="-1">文字エンコーディング <a class="header-anchor" href="#文字エンコーディング" aria-label="Permalink to &quot;文字エンコーディング&quot;">​</a></h2><p>本ライブラリは、<a href="https://datatracker.ietf.org/doc/html/rfc8259#section-8.1" target="_blank" rel="noreferrer">RFC 8259</a>で規定されているBOMなしのUTF-8エンコーディングのみをサポートしています：</p><blockquote><p>クローズドエコシステムの一部ではないシステム間で交換されるJSONテキストは、UTF-8を使用してエンコードされなければなりません（MUST）。 実装は、ネットワークで送信されるJSONテキストの先頭にバイトオーダーマーク（U+FEFF）を追加してはならない（MUST NOT）。</p></blockquote><p>デフォルトでは、yyjsonは入力文字列に対して厳密なUTF-8エンコーディングのバリデーションを実行します。無効な文字に遭遇した場合、エラーが報告されます。</p><p><code>YYJSON_READ_ALLOW_INVALID_UNICODE</code> と <code>YJSON_WRITE_ALLOW_INVALID_UNICODE</code> フラグを使って、無効なUnicodeエンコーディングを許可することができます。しかし、yyjsonの結果値には無効な文字が含まれている可能性があり、他のコードで使用される可能性があり、セキュリティリスクをもたらす可能性があることに注意する必要があります。</p><h2 id="nul-文字" tabindex="-1">NUL 文字 <a class="header-anchor" href="#nul-文字" aria-label="Permalink to &quot;NUL 文字&quot;">​</a></h2><p>このライブラリは、文字列の中にある <code>NUL</code> 文字 (別名 <code>null terminator</code>, または Unicode <code>U+0000</code>, ASCII <code>0</code>) をサポートします。</p><p>JSONを読み込む場合、<code>U0000</code>はアンエスケープされて<code>NUL</code>となる。文字列が <code>NUL</code> を含む場合、 strlen() で得られる長さは不正確であるため、 yyjson_get_len() を使用して実際の長さを取得する必要があります。</p><p>JSONを構築する際、入力文字列はNULL終端として扱われます。文字列の中に <code>NUL</code> を含む文字列を渡す必要がある場合は、接尾辞に <code>n</code> を付けた API を使用し、実際の長さを渡す必要があります。</p><p>例えば、以下のようになります：</p><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// ヌル終端文字列</span></span>
<span class="line"><span style="color:#82AAFF;">yyjson_mut_str</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">doc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> str</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#82AAFF;">yyjson_obj_get</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">obj</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> str</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 任意の文字列、ヌル終端を含むか含まないか</span></span>
<span class="line"><span style="color:#82AAFF;">yyjson_mut_strn</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">doc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> str</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> len</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#82AAFF;">yyjson_obj_getn</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">obj</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> str</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> len</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// C++の文字列</span></span>
<span class="line"><span style="color:#A6ACCD;">std::string sstr </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> ...</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#82AAFF;">yyjson_obj_getn</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">obj</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> sstr.</span><span style="color:#82AAFF;">data</span><span style="color:#89DDFF;">(),</span><span style="color:#A6ACCD;"> sstr.</span><span style="color:#82AAFF;">length</span><span style="color:#89DDFF;">());</span></span>
<span class="line"></span></code></pre></div><h1 id="メモリアロケータ" tabindex="-1">メモリアロケータ <a class="header-anchor" href="#メモリアロケータ" aria-label="Permalink to &quot;メモリアロケータ&quot;">​</a></h1><p>このライブラリは、libcのメモリ割り当て関数(malloc/realloc/free)を<strong>直接</strong>呼び出すことはない。代わりに、メモリ割り当てが必要な場合、yyjsonのAPIは、呼び出し元がアロケータを渡すことができる<code>alc</code>というパラメータを受け取ります。<code>alc</code>がNULLの場合、yyjsonはlibcの関数の単純なラッパーであるデフォルトのメモリアロケーターを使用します。</p><p>カスタムメモリアロケータを使用すると、メモリ割り当てをより詳細に制御することができますので、以下にいくつかの例を示します：</p><h2 id="複数のjsonを単一のアロケータで処理する" tabindex="-1">複数のJSONを単一のアロケータで処理する <a class="header-anchor" href="#複数のjsonを単一のアロケータで処理する" aria-label="Permalink to &quot;複数のJSONを単一のアロケータで処理する&quot;">​</a></h2><p>複数の小さなJSONをパースする必要がある場合、あらかじめバッファが確保された単一のアロケータを使用することで、頻繁なメモリ割り当てを避けることができます。</p><p>サンプルコードです：</p><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 1つのJSONの最大データサイズ</span></span>
<span class="line"><span style="color:#C792EA;">size_t</span><span style="color:#A6ACCD;"> max_json_size </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">64</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1024</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 1つのJSONの最大メモリ使用量を計算します。</span></span>
<span class="line"><span style="color:#C792EA;">size_t</span><span style="color:#A6ACCD;"> buf_size </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_read_max_memory_usage</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">max_json_size</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// アロケータ用のバッファを作成する</span></span>
<span class="line"><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">buf </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">malloc</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">buf_size</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// アロケータにバッファを設定する</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_alc alc</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#82AAFF;">yyjson_alc_pool_init</span><span style="color:#89DDFF;">(&amp;</span><span style="color:#A6ACCD;font-style:italic;">alc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> buf</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> buf_size</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 単一のアロケータで複数のJSONを読み込む。</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> i </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> i </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;"> your_json_file_count</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> i</span><span style="color:#89DDFF;">++)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">char</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">*</span><span style="color:#F07178;">your_json_file_path </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> ...</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    yyjson_doc </span><span style="color:#89DDFF;">*</span><span style="color:#F07178;">doc </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">yyjson_read_file</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">your_json_file_path</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&amp;</span><span style="color:#F07178;">alc</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">NULL);</span></span>
<span class="line"><span style="color:#F07178;">    ...</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">yyjson_doc_free</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">doc</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// バッファを解放する</span></span>
<span class="line"><span style="color:#82AAFF;">free</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">buf</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span></code></pre></div><h2 id="スタックメモリアロケータ" tabindex="-1">スタックメモリアロケータ <a class="header-anchor" href="#スタックメモリアロケータ" aria-label="Permalink to &quot;スタックメモリアロケータ&quot;">​</a></h2><p>JSONが十分に小さい場合、スタックメモリを使用して読み書きを行うことができます。</p><p>サンプルコードです：</p><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> buf</span><span style="color:#89DDFF;">[</span><span style="color:#F78C6C;">128</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1024</span><span style="color:#89DDFF;">];</span><span style="color:#676E95;font-style:italic;"> // スタックバッファ</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_alc alc</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#82AAFF;">yyjson_alc_pool_init</span><span style="color:#89DDFF;">(&amp;</span><span style="color:#A6ACCD;font-style:italic;">alc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> buf</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">sizeof(</span><span style="color:#A6ACCD;">buf</span><span style="color:#89DDFF;">));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_doc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">doc </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_read_opts</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">dat</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> len</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;font-style:italic;">alc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">NULL);</span></span>
<span class="line"><span style="color:#A6ACCD;">...</span></span>
<span class="line"><span style="color:#82AAFF;">yyjson_doc_free</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">doc</span><span style="color:#89DDFF;">);</span><span style="color:#676E95;font-style:italic;"> // メモリはスタック上にあるため、これはオプションです。</span></span>
<span class="line"></span></code></pre></div><h2 id="サードパーティ製のアロケータライブラリを使う" tabindex="-1">サードパーティ製のアロケータライブラリを使う <a class="header-anchor" href="#サードパーティ製のアロケータライブラリを使う" aria-label="Permalink to &quot;サードパーティ製のアロケータライブラリを使う&quot;">​</a></h2><p><a href="https://github.com/jemalloc/jemalloc" target="_blank" rel="noreferrer">jemalloc</a>、<a href="https://github.com/google/tcmalloc" target="_blank" rel="noreferrer">tcmalloc</a>、<a href="https://github.com/microsoft/mimalloc" target="_blank" rel="noreferrer">mimalloc</a>など、yyjson用の高性能なメモリアロケータをサードパーティ製で使用できます。また、以下のコードを参考に、独自のアロケータを実装することもできます。</p><p>サンプルコードです：</p><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// Use https://github.com/microsoft/mimalloc</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#include</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">mimalloc.h</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// malloc(size)と同じ</span></span>
<span class="line"><span style="color:#C792EA;">static</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#82AAFF;">priv_malloc</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">ctx</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">size_t</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">size</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">mi_malloc</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">size</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// realloc(ptr, size)と同じ。</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// old_size\`は元々割り当てられていたメモリのサイズ</span></span>
<span class="line"><span style="color:#C792EA;">static</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#82AAFF;">priv_realloc</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">ctx</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">ptr</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">size_t</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">old_size</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">size_t</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">size</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">mi_realloc</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">ptr</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> size</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// free(ptr) と同じ</span></span>
<span class="line"><span style="color:#C792EA;">static</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">priv_free</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">ctx</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">ptr</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">mi_free</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">ptr</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// アロケータオブジェクト</span></span>
<span class="line"><span style="color:#C792EA;">static</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> yyjson_alc PRIV_ALC </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    priv_malloc</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">    priv_realloc</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">    priv_free</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">NULL</span><span style="color:#676E95;font-style:italic;"> // 上記の関数に渡される \`ctx\` です。</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// カスタムアロケータで読み込む</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_doc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">doc </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_doc_read_opts</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">dat</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> len</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;font-style:italic;">PRIV_ALC</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">NULL);</span></span>
<span class="line"><span style="color:#A6ACCD;">...</span></span>
<span class="line"><span style="color:#82AAFF;">yyjson_doc_free</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">doc</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// カスタムアロケータで書く</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_alc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">alc </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;">PRIV_ALC</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">json </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_doc_write</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">doc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> alc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">NULL,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">NULL);</span></span>
<span class="line"><span style="color:#A6ACCD;">...</span></span>
<span class="line"><span style="color:#A6ACCD;">alc</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#82AAFF;">free</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">alc</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;font-style:italic;">ctx</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> json</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><h1 id="スタックメモリーの使用について" tabindex="-1">スタックメモリーの使用について <a class="header-anchor" href="#スタックメモリーの使用について" aria-label="Permalink to &quot;スタックメモリーの使用について&quot;">​</a></h1><p>JSONの読み書きやJSONポインタの扱いなど、ライブラリのほとんどの関数で固定サイズのスタックメモリを使用します。</p><p>しかし、いくつかの関数は再帰を使用しており、オブジェクトレベルが深すぎるとスタックオーバーフローを引き起こす可能性があります。これらの関数には、ヘッダーファイルで以下の警告が表示されています：</p><blockquote><p>警告 この関数は再帰的であり、オブジェクトレベルが深すぎるとスタックオーバーフローを引き起こす可能性があります。</p></blockquote><h1 id="ヌルチェック" tabindex="-1">ヌルチェック <a class="header-anchor" href="#ヌルチェック" aria-label="Permalink to &quot;ヌルチェック&quot;">​</a></h1><p>ライブラリの公開APIでは、クラッシュを避けるために、すべての入力パラメータに対して <code>null check</code> を行います。</p><p>例えば、JSONを読み込む場合、各値のNULLチェックや型チェックは必要ありません：</p><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">yyjson_doc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">doc </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_read</span><span style="color:#89DDFF;">(NULL,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">);</span><span style="color:#676E95;font-style:italic;"> // doc is NULL</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">val </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_doc_get_root</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">doc</span><span style="color:#89DDFF;">);</span><span style="color:#676E95;font-style:italic;"> // val is NULL</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">str </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_get_str</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">val</span><span style="color:#89DDFF;">);</span><span style="color:#676E95;font-style:italic;"> // str is NULL</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(!</span><span style="color:#A6ACCD;">str</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">printf</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">err!</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#82AAFF;">yyjson_doc_free</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">doc</span><span style="color:#89DDFF;">);</span><span style="color:#676E95;font-style:italic;"> // do nothing</span></span>
<span class="line"></span></code></pre></div><p>しかし、値が非NULLで型が一致することが確実な場合は、<code>unsafe</code>というプレフィックスAPIを使ってNULLチェックを回避することができます。</p><p>例えば、配列やオブジェクトを反復処理する場合、値とキーは非NULLでなければなりません：</p><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">size_t</span><span style="color:#A6ACCD;"> idx</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> max</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">key</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">val</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#82AAFF;">yyjson_obj_foreach</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">obj</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> idx</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> max</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> key</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> val</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// これは有効なJSONなので、キーは有効な文字列でなければなりません。</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">unsafe_yyjson_equals_str</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">key</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">id</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&amp;&amp;</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#82AAFF;">unsafe_yyjson_is_uint</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">val</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&amp;&amp;</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#82AAFF;">unsafe_yyjson_get_uint</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">val</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">==</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1234</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        ...</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h1 id="スレッドセーフ" tabindex="-1">スレッドセーフ <a class="header-anchor" href="#スレッドセーフ" aria-label="Permalink to &quot;スレッドセーフ&quot;">​</a></h1><p>ライブラリはグローバル変数を使用しないので、関数の入力パラメータがスレッドセーフであることを保証できれば、関数の呼び出しもスレッドセーフになります。</p><p>一般的に、<code>yyjson_doc</code> と <code>yyjson_val</code> は不変でスレッドセーフ、<code>yyjson_mut_doc</code> と <code>yyjson_mut_val</code> は可変でありスレッドセーフではありません。</p><h1 id="ロケールに依存しない" tabindex="-1">ロケールに依存しない <a class="header-anchor" href="#ロケールに依存しない" aria-label="Permalink to &quot;ロケールに依存しない&quot;">​</a></h1><p>ライブラリはロケールに依存しません。</p><p>しかし、いくつかの特殊な条件がありますので、注意が必要です：</p><ol><li>ロケールを変更するためにlibcの <code>setlocale()</code> 関数を使用する。</li><li>あなたの環境がIEEE 754浮動小数点規格を使用していない (例: 一部のIBMメインフレーム)、またはビルド時に <code>YYJSON_DISABLE_FAST_FP_CONV</code> を明示的に設定した場合、yyjsonは <code>strtod() </code>を使って浮動小数点数をパースする。</li></ol><p>これらの条件の <strong>両方</strong> を満たす場合、他のスレッドがJSONをパースしている間に <code>setlocale()</code> を呼び出すことは避けるべきです。そうしないと、JSON浮動小数点数のパースでエラーが返されることがあります。</p>`,273),t=[p];function e(c,y,r,D,A,F){return a(),n("div",null,t)}const _=s(o,[["render",e]]);export{i as __pageData,_ as default};
