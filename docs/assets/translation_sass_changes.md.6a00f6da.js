import{_ as s,c as a,o as l,Q as n}from"./chunks/framework.44f152d8.js";const d=JSON.parse('{"title":"ブレイキングチェンジ","description":"","frontmatter":{},"headers":[],"relativePath":"translation/sass/changes.md","lastUpdated":1676974355000}'),p={name:"translation/sass/changes.md"},o=n(`<h1 id="ブレイキングチェンジ" tabindex="-1">ブレイキングチェンジ <a class="header-anchor" href="#ブレイキングチェンジ" aria-label="Permalink to &quot;ブレイキングチェンジ&quot;">​</a></h1><nav class="table-of-contents"><ul><li><a href="#概要">概要</a></li><li><a href="#厳密な単項演算子">厳密な単項演算子</a><ul><li><a href="#transition-period">Transition Period</a></li><li><a href="#自動マイグレーション">自動マイグレーション</a></li></ul></li><li><a href="#random-with-units-none">Random With Units (none)</a></li><li><a href="#無効なコンビネータ">無効なコンビネータ</a><ul><li><a href="#移行期間">移行期間</a></li></ul></li><li><a href="#media-queries-level-4">Media Queries Level 4</a><ul><li><a href="#移行期間-1">移行期間</a></li></ul></li><li><a href="#as-divisions">/ as Divisions</a><ul><li><a href="#移行期間-2">移行期間</a></li><li><a href="#自動マイグレーション-1">自動マイグレーション</a></li></ul></li><li><a href="#function-units">Function Units</a><ul><li><a href="#hue">Hue</a></li><li><a href="#彩度と明度">彩度と明度</a></li><li><a href="#alpha">Alpha</a></li><li><a href="#math-random">math.random()</a></li><li><a href="#weight">Weight</a></li><li><a href="#index">Index</a></li></ul></li><li><a href="#moz-document">-moz-document</a><ul><li><a href="#移行期間-3">移行期間</a></li></ul></li><li><a href="#複合セレクタの拡張">複合セレクタの拡張</a></li><li><a href="#css-変数構文">CSS 変数構文</a></li></ul></nav><h2 id="概要" tabindex="-1">概要 <a class="header-anchor" href="#概要" aria-label="Permalink to &quot;概要&quot;">​</a></h2><p>Sass の新バージョンは可能な限り後方互換性を保っていますが、時には破壊的な変更が必要な場合があります。Sass は進化する CSS 仕様に対応する必要があり、古い言語設計の誤りを修正する必要がある場合があります。</p><p>各破壊的な変更がリリースされる前に、Sass の実装は動作が変更されるスタイルシートに対して非推奨の警告を生成します。可能な限り、これらの警告には、非推奨のスタイルを更新して前方互換性を確保する方法についての提案が含まれます。</p><p>実装によって、変更点の修正と非推奨に関するポリシーが異なります。Dart Sass では、廃止予定の警告を廃止予定の変更をリリースする前に少なくとも3ヶ月間表示し、その変更が CSS の互換性のために必要でない限り、新しいメジャーバージョン番号で廃止予定の変更をリリースします。CSS 互換性のための変更は、多くの場合、破壊的でなく時間的制約があるため、代わりに新しいマイナー・バージョン番号でリリースされることがあります。</p><p>これらの変更は、近日中にリリースされるか、最近リリースされたものです。</p><ul><li>Dart Sass 1.32.0 以降、関数が許可するユニットがより厳しくなりました。</li><li>Dart Sass 1.54.0 から、無効なコンビネータを持つセレクタは無効となります。</li><li>Dart Sass 1.33.0 から <code>/</code> が分割演算子からリストセパレータに変更されました。</li><li>Dart Sass 1.7.2 から @-moz-document の特殊な構文のパースが無効になる。</li><li>Dart Sass 1.0.0 および Ruby Sass 4.0.0 で複合セレクタを拡張することができなかった。</li><li>Dart Sass 1.0.0, LibSass 3.5.0, Ruby Sass 3.5.0 で、CSS カスタムプロパティ値の構文が変更されました。</li></ul><h2 id="厳密な単項演算子" tabindex="-1">厳密な単項演算子 <a class="header-anchor" href="#厳密な単項演算子" aria-label="Permalink to &quot;厳密な単項演算子&quot;">​</a></h2><p>Sass は歴史的に <code>-</code> と <code>+</code> を、作者が二項演算子か単項演算子かを曖昧にするような方法で使用することを許可してきました。この紛らわしい構文は非推奨となっています。</p><p>このプロパティはどのようにコンパイルされるのですか？</p><div class="language-scss"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">$size</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">10px</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">div</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">margin</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">15px</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">$size</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>ユーザーによっては、「-は$sizeとくっついているから、margin: 20px -10pxにするべきだ」と言うかもしれません。また、「-は20pxと$sizeの間にあるから、margin: 5pxにすべき」と言う人もいるかもしれません。Sassは現在、後者の意見に賛成していますが、本当の問題は、そもそもそれがとても紛らわしいということなのです!これは、CSSのスペースで区切られたリスト構文とSassの算術構文が組み合わされた、自然ではあるが不幸な結果です。</p><p>そのため、私たちはこれをエラーにするように動き出しています。今後、二項演算子（2つの数値を引き算または足し算する演算子）を使用したい場合は、両側またはどちらにも空白を入れる必要があります。</p><ul><li>Valid: 15px - $size</li><li>Valid: (15px)-$size</li><li>Invalid: 15px -$size</li></ul><p>単項の - や + 演算子をスペースで区切られたリストの一部として使用したい場合は、（やはり）括弧で囲む必要があります。</p><ul><li>Valid: 15px (-$size)</li></ul><h3 id="transition-period" tabindex="-1">Transition Period <a class="header-anchor" href="#transition-period" aria-label="Permalink to &quot;Transition Period&quot;">​</a></h3><p>互換性:</p><ul><li>Dart Sass: since 1.55.0</li><li>LibSass: ✗</li><li>Ruby Sass: ✗</li></ul><p>Dart Sass 2.0.0では、これをエラーとする予定ですが、それまでは非推奨の警告が表示されるだけでしょう。</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>💡 Fun fact:</p><p>覚えておいてほしいのは、自分が管理していないライブラリからの非推奨の警告を黙らせることができるということです!コマンドラインインターフェイスを使用している場合は --quiet-deps フラグを、JavaScript API を使用している場合は quietDeps オプションを true に設定することができます。</p></div><h3 id="自動マイグレーション" tabindex="-1">自動マイグレーション <a class="header-anchor" href="#自動マイグレーション" aria-label="Permalink to &quot;自動マイグレーション&quot;">​</a></h3><p>Sass migrator を使用してスタイルシートを自動的に更新し、- または + 演算子の後にスペースを追加することで、これらのスタイルシートの既存の動作を維持することができます。</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">npm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">install</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-g</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">sass-migrator</span></span>
<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">sass-migrator</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">strict-unary</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;">**</span><span style="color:#C3E88D;">/</span><span style="color:#A6ACCD;">*</span><span style="color:#C3E88D;">.scss</span></span>
<span class="line"></span></code></pre></div><h2 id="random-with-units-none" tabindex="-1">Random With Units (none) <a class="header-anchor" href="#random-with-units-none" aria-label="Permalink to &quot;Random With Units (none)&quot;">​</a></h2><h2 id="無効なコンビネータ" tabindex="-1">無効なコンビネータ <a class="header-anchor" href="#無効なコンビネータ" aria-label="Permalink to &quot;無効なコンビネータ&quot;">​</a></h2><p>Sassは歴史的にセレクタでの先行、後続、繰り返しの組み合わせについて非常に寛容でした。これらのコンビーネーターは、入れ子にするのに便利な場合を除いて、非推奨となります。</p><p>Sassは歴史的に3つの無効なコンビーネータの使用をサポートしてきました。</p><ul><li>Leading combinators, as in + .error {color: red}.</li><li>Trailing combinators, as in .error + {color: red}.</li><li>Repeated combinators, as in div &gt; &gt; .error {color: red}.</li></ul><p>これらはいずれも有効な CSS ではなく、いずれもブラウザが問題のスタイル ルールを無視する原因となります。これらをサポートすると、Sass の実装が大幅に複雑になり、特に @extend ルールに関連するさまざまなバグを修正することが難しくなります。そのため、これらの用途のサポートを削除することを決定しました。</p><p>ひとつだけ大きな例外があります。先頭と末尾のコンビネータは、ネストの目的でまだ使用することができます。例えば、次のようなものはまだ非常に多くサポートされています。</p><div class="vp-code-group"><div class="tabs"><input type="radio" name="group-Aa0ZL" id="tab-rMFuQLc" checked="checked"><label for="tab-rMFuQLc">SCSS</label><input type="radio" name="group-Aa0ZL" id="tab-eZoxPzu"><label for="tab-eZoxPzu">CSS</label></div><div class="blocks"><div class="language-scss active"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">sidebar</span><span style="color:#A6ACCD;"> &gt; </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">error</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">color</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> red</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">sidebar</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">error</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">color</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> red</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div></div></div><p>Sassは、入れ子が解決された後、セレクタにまだ先頭または末尾のコンビネータがある場合にのみエラーを発生させます。一方、繰り返されるコンビネータは常にエラーとなります。</p><p>既存のスタイルシートが（おそらく偶然に）無効なコンビネータを含んでいることを確認するために、Dart Sass の次のメジャーリリースまで移行期間をサポートします。</p><h3 id="移行期間" tabindex="-1">移行期間 <a class="header-anchor" href="#移行期間" aria-label="Permalink to &quot;移行期間&quot;">​</a></h3><p>互換性:</p><ul><li>Dart Sass: since 1.54.0</li><li>LibSass: ✗</li><li>Ruby Sass: ✗</li></ul><p>まず、すべてのダブルコンビネータと、ネスト解決後にセレクタの中で終わるリーディングまたはトレーリングコンビネータに対して非推奨の警告を出します。</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>💡 Fun fact:</p><p>覚えておいてほしいのは、自分が管理していないライブラリからの非推奨の警告を黙らせることができるということです!コマンドラインインターフェイスを使用している場合は --quiet-deps フラグを渡すことができ、JavaScript API を使用している場合は quietDeps オプションを true に設定することができます。 さらに、コンパイルされたCSSから無効なCSSであることが分かっているセレクタを直ちに省略し始めます。ただし、1つの例外を除いて、先頭がコンビネータで始まるセレクタは省略しません。これは、@importルールやmeta.load-css() mixinがネストされて使用されている可能性があるためです。しかし、私たちはこのパターンを推奨しておらず、Dart Sass 2.0.0ではこのパターンのサポートを停止する予定です。</p></div><h2 id="media-queries-level-4" tabindex="-1">Media Queries Level 4 <a class="header-anchor" href="#media-queries-level-4" aria-label="Permalink to &quot;Media Queries Level 4&quot;">​</a></h2><p>Sass は CSS Media Queries Level 4 仕様をサポートするようになりました。これはもともと、いくつかの Sass 固有の構文と衝突していたため、この構文は非推奨となり、現在は CSS 標準に従って解釈されます。</p><p>互換性:</p><ul><li>Dart Sass: since 1.56.0</li><li>LibSass: ✗</li><li>Ruby Sass: ✗</li></ul><p>Sassは括弧付きのメディア条件でほぼ全てのSass表現をサポートしているため、Media Queries Level 4のフルサポートを追加したことで意味が変わってしまった構成がいくつかありました。具体的には</p><ul><li>media (not (foo)) は歴史的に @media (#{not (foo)}) の意味としてSassによって解釈されていたため、@media (false) にコンパイルされました。</li><li>media ((foo) and (bar)) と @media ((foo) or (bar)) は同様にSassScriptの論理演算子として解釈され、それぞれ @media (bar) と @media (foo) にコンパイルされました。</li></ul><p>幸いなことに、これらは実際にはほとんど出てきません。</p><h3 id="移行期間-1" tabindex="-1">移行期間 <a class="header-anchor" href="#移行期間-1" aria-label="Permalink to &quot;移行期間&quot;">​</a></h3><p>互換性:</p><ul><li>Dart Sass: since 1.54.0</li><li>LibSass: ✗</li><li>Ruby Sass: ✗</li></ul><p>まず、これまでのあいまいなケースに対して非推奨の警告を発しました。これらには、既存の動作を維持する方法、あるいは新しいCSS構文を使用する方法についての提案があります。</p><h2 id="as-divisions" tabindex="-1">/ as Divisions <a class="header-anchor" href="#as-divisions" aria-label="Permalink to &quot;/ as Divisions&quot;">​</a></h2><p>Sass は現在、ある文脈では / を分割操作として扱い、他の文脈では区切り記号として扱っています。このため、Sass ユーザーは任意の / が何を意味するのかを知ることが難しく、また / をセパレータとして使用する新しい CSS 機能と連携することが難しくなっています。</p><p>互換性:</p><ul><li>Dart Sass: partial</li><li>LibSass: ✗</li><li>Ruby Sass: ✗</li></ul><p>今日、Sassは複雑なヒューリスティックを使って、/が分割として扱われるべきか、それともセパレータとして扱われるべきかを判断しています。それでも、セパレータとしては、Sass内部から検査するのが難しい引用符で囲まれていない文字列が生成されるだけです。CSS Gridや新しいrgb()やhsl()の構文など、ますます多くのCSS機能が/をセパレータとして使うようになり、これはSassユーザにとってますます苦痛になってきています。</p><p>SassはCSSのスーパーセットなので、/をセパレータとしてのみ再定義することでCSSの構文に合わせます。/ は新しいタイプのリストセパレータとして扱われ、今日 , がどのように機能するかと同様です。除算は、代わりに新しい math.div() 関数を使って記述されます。この関数は、現在の / と全く同じ動作をします。</p><p>この非推奨は calc() 式の中での / の使用には影響しません。</p><div class="vp-code-group"><div class="tabs"><input type="radio" name="group-gUx02" id="tab-SF4Zu2e" checked="checked"><label for="tab-SF4Zu2e">SCSS</label><input type="radio" name="group-gUx02" id="tab-y7P2R2i"><label for="tab-y7P2R2i">CSS</label></div><div class="blocks"><div class="language-scss active"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">@use</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">sass:math</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 未来のSass、まだ動いてない！？</span></span>
<span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">item3</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  $row</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#B2CCD6;">span</span><span style="color:#A6ACCD;"> math</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">div</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">6</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">7</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// スラッシュで区切られた2つの要素からなるリスト。</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">grid-row</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> $row</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">item3</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">grid-row</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> span </span><span style="color:#F78C6C;">3</span><span style="color:#A6ACCD;"> / </span><span style="color:#F78C6C;">7</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div></div></div><h3 id="移行期間-2" tabindex="-1">移行期間 <a class="header-anchor" href="#移行期間-2" aria-label="Permalink to &quot;移行期間&quot;">​</a></h3><p>互換性 (math.div() and list.slash()):</p><ul><li>Dart Sass: since 1.33.0</li><li>LibSass: ✗</li><li>Ruby Sass: ✗</li></ul><p>この移行を容易にするために、まず math.div() 関数を追加しました。演算子 / は今のところまだ除算を行いますが、除算の際に非推奨の警告が表示されます。ユーザーはすべての除算を、代わりに math.div() を使用するように切り替える必要があります。</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>💡 Fun fact:</p><p>覚えておいてほしいのは、自分が管理していないライブラリからの非推奨の警告を黙らせることができるということです!コマンドラインインターフェイスを使用している場合は --quiet-deps フラグを、JavaScript API を使用している場合は quietDeps オプションを true に設定することができます。</p></div><div class="language-scss"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">@use</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">sass:math</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 誤り。今後のSassバージョンでは動作しません。</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">@debug</span><span style="color:#A6ACCD;"> (12px/4px)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 3</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// RIGHT, 将来の Sass バージョンで動作するようになります。</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">@debug</span><span style="color:#A6ACCD;"> math.div(12px, 4px)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 3</span></span>
<span class="line"></span></code></pre></div><p>スラッシュで区切られたリストも移行期間中に利用可能になる予定です。まだ / で作成できないため、list.slash() 関数を追加して作成する予定です。また、list.join() 関数と list.append() 関数に $separator として &quot;スラッシュ&quot; を渡すことができるようになります。</p><div class="vp-code-group"><div class="tabs"><input type="radio" name="group-iAc5E" id="tab-OPp30E3" checked="checked"><label for="tab-OPp30E3">SCSS</label><input type="radio" name="group-iAc5E" id="tab-q30bVnu"><label for="tab-q30bVnu">CSS</label></div><div class="blocks"><div class="language-scss active"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">@use</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">sass:list</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">@use</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">sass:math</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">item3</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  $row</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> list</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">slash</span><span style="color:#89DDFF;">(</span><span style="color:#B2CCD6;">span</span><span style="color:#A6ACCD;"> math</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">div</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">6</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">),</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">7</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">grid-row</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> $row</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">item3</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">grid-row</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> span </span><span style="color:#F78C6C;">3</span><span style="color:#A6ACCD;"> / </span><span style="color:#F78C6C;">7</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div></div></div><p>互換性 (First-class calc):</p><ul><li>Dart Sass: since 1.40.0</li><li>LibSass: ✗</li><li>Ruby Sass: ✗</li></ul><p>また、割り算をcalc()式で囲むと、Sassはそれを一つの数値に単純化することができます。</p><div class="language-scss"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// WRONG, will not work in future Sass versions.</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">@debug</span><span style="color:#A6ACCD;"> (12px/4px)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 3</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// RIGHT, will work in future Sass versions.</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">@debug</span><span style="color:#A6ACCD;"> calc(12px / 4px)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 3</span></span>
<span class="line"></span></code></pre></div><h3 id="自動マイグレーション-1" tabindex="-1">自動マイグレーション <a class="header-anchor" href="#自動マイグレーション-1" aria-label="Permalink to &quot;自動マイグレーション&quot;">​</a></h3><p>Sass migrator を使用して、math.div() および list.slash() を使用するようにスタイルシートを自動的に更新することができます。</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">npm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">install</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-g</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">sass-migrator</span></span>
<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">sass-migrator</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">division</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;">**</span><span style="color:#C3E88D;">/</span><span style="color:#A6ACCD;">*</span><span style="color:#C3E88D;">.scss</span></span>
<span class="line"></span></code></pre></div><h2 id="function-units" tabindex="-1">Function Units <a class="header-anchor" href="#function-units" aria-label="Permalink to &quot;Function Units&quot;">​</a></h2><p>様々な組み込み関数が、許可する単位をより厳しくし、それらの単位をより一貫して処理するようになります。これにより、SassはCSS仕様との互換性を高め、より迅速にエラーを検出できるようになります。</p><h3 id="hue" tabindex="-1">Hue <a class="header-anchor" href="#hue" aria-label="Permalink to &quot;Hue&quot;">​</a></h3><p>互換性:</p><ul><li>Dart Sass: since 1.32.0</li><li>LibSass: ✗</li><li>Ruby Sass: ✗</li></ul><p>色の色相を指定する場合、CSSでは角度の単位（deg、grad、rad、turn）を指定することができます。また、単位を持たない数値も許容し、これはdegとして解釈されます。歴史的に、Sassは任意の単位を許容し、それをdegとして解釈してきました。これは特に問題で、有効な CSS 表現である hsl(0.5turn, 100%, 50%) が Sass によって許可されても、全く間違った解釈をされることを意味します。</p><p>この問題を修正し、SassをCSS仕様に沿うようにするため、複数のフェーズで変更を加えています。</p><h4 id="phase-1" tabindex="-1">Phase 1 <a class="header-anchor" href="#phase-1" aria-label="Permalink to &quot;Phase 1&quot;">​</a></h4><p>互換性:</p><ul><li>Dart Sass: since 1.32.0</li><li>LibSass: ✗</li><li>Ruby Sass: ✗</li></ul><p>当初、Sassは色相としてdeg以外の単位を持つ数値を渡すと非推奨の警告を出すだけでした。単位を持たない数値を渡すことはまだ可能です。</p><h4 id="phase-2" tabindex="-1">Phase 2 <a class="header-anchor" href="#phase-2" aria-label="Permalink to &quot;Phase 2&quot;">​</a></h4><p>互換性:</p><ul><li>Dart Sass: since 1.52.1</li><li>LibSass: ✗</li><li>Ruby Sass: ✗</li></ul><p>次に、色相パラメータの角度単位の扱い方をCSSの仕様に合わせました。つまり、grad、rad、turnの単位を持つ数値はdegに変換され、0.5turnは180degに、100gradは90degに、といった具合に変換されます。</p><p>この変更は CSS の互換性を維持するために必要なものであるため、Dart Sass の互換性ポリシーに従って、わずかなバージョンアップで実現されました。しかし、Sass が CSS 仕様に従ってすべての有効な CSS を解釈することを確実にするために、可能な限り小さな動作の変更にとどめています。</p><h4 id="phase-3" tabindex="-1">Phase 3 <a class="header-anchor" href="#phase-3" aria-label="Permalink to &quot;Phase 3&quot;">​</a></h4><p>互換性:</p><ul><li>Dart Sass: ✗</li><li>LibSass: ✗</li><li>Ruby Sass: ✗</li></ul><p>最後に、Dart Sass 2.0.0の色関数は、角度以外の単位を持つ色相パラメータを渡された場合、エラーを発生します。単位なしの色相はまだ許可されています。</p><h3 id="彩度と明度" tabindex="-1">彩度と明度 <a class="header-anchor" href="#彩度と明度" aria-label="Permalink to &quot;彩度と明度&quot;">​</a></h3><p>HSL 色の彩度と明度を指定する場合、CSS では % 単位しか許されていません。色相の場合とは異なり）単位のない数字も許されません。歴史的に、Sassはどんな単位でも許容し、それを%として解釈してきた。hsl(0, 100px, 50s)と書けば、Sassは赤色を返します。</p><p>この問題を解決し、SassをCSS仕様に沿うようにするために、2段階に分けて変更を行います。</p><h4 id="phase-1-1" tabindex="-1">Phase 1 <a class="header-anchor" href="#phase-1-1" aria-label="Permalink to &quot;Phase 1&quot;">​</a></h4><p>互換性:</p><ul><li>Dart Sass: since 1.32.0</li><li>LibSass: ✗</li><li>Ruby Sass: ✗</li></ul><p>現在、Sassでは、単位を持たない数値や、%以外の単位を明度や彩度として関数に渡すと、非推奨の警告が表示されるだけです。</p><h4 id="phase-2-1" tabindex="-1">Phase 2 <a class="header-anchor" href="#phase-2-1" aria-label="Permalink to &quot;Phase 2&quot;">​</a></h4><p>互換性:</p><ul><li>Dart Sass: ✗</li><li>LibSass: ✗</li><li>Ruby Sass: ✗</li></ul><p>Dart Sass 2.0.0では、彩度や明度のパラメータに単位がない、あるいは％でない単位が渡されると、色関数はエラーを発生させるようになっています。</p><h3 id="alpha" tabindex="-1">Alpha <a class="header-anchor" href="#alpha" aria-label="Permalink to &quot;Alpha&quot;">​</a></h3><p>色のアルファ値を指定する場合、CSS（Colors Level 4時点）では、0から1の間の単位なしの値、または0%から100%の間の%値のいずれかを許可しています。ほとんどの場合、Sassはこの動作に従いますが、関数color.adjust()とcolor.change()は歴史的にどんな単位でも許容し、それをユニットレスとして解釈してきました。color.change(red, $alpha: 1%) と書けば、Sassは不透明な色である黒を返してくれることさえあります。</p><p>この問題を解決し、SassをCSS仕様に沿うようにするために、3つのフェーズで変更を行います。</p><h4 id="phase-1-2" tabindex="-1">Phase 1 <a class="header-anchor" href="#phase-1-2" aria-label="Permalink to &quot;Phase 1&quot;">​</a></h4><p>互換性:</p><ul><li>Dart Sass: since 1.56.0</li><li>LibSass: ✗</li><li>Ruby Sass: ✗</li></ul><p>現在、Sassはアルファ値として、%を含む任意の単位の数値をcolor.change()またはcolor.adjust()に渡すと、非推奨の警告を出すだけです。</p><h4 id="phase-2-2" tabindex="-1">Phase 2 <a class="header-anchor" href="#phase-2-2" aria-label="Permalink to &quot;Phase 2&quot;">​</a></h4><p>互換性:</p><ul><li>Dart Sass: ✗</li><li>LibSass: ✗</li><li>Ruby Sass: ✗</li></ul><p>次に、color.change()とcolor.adjust()のアルファ引数で、%単位の扱い方を変更することにします。単位が%であるアルファは100%で割られ、0から1までの単位を持たない数値に変換されます。</p><p>この変更は、他のSass関数との整合性を高めるためのバグフィックスであるため、マイナーバージョンアップのみで行われる予定です。ユーザーがコードを調整し、バグを回避する時間を確保するため、フェーズ 1 がリリースされてから最低でも 3 ヶ月後に変更される予定です。</p><h4 id="phase-3-1" tabindex="-1">Phase 3 <a class="header-anchor" href="#phase-3-1" aria-label="Permalink to &quot;Phase 3&quot;">​</a></h4><p>互換性:</p><ul><li>Dart Sass: ✗</li><li>LibSass: ✗</li><li>Ruby Sass: ✗</li></ul><p>最後に、Dart Sass 2.0.0 の color.change() と color.adjust() は、アルファパラメータに%以外の単位が渡されるとエラーを投げます。単位なしのアルファはまだ許可されています。</p><h3 id="math-random" tabindex="-1">math.random() <a class="header-anchor" href="#math-random" aria-label="Permalink to &quot;math.random()&quot;">​</a></h3><p>math.random()関数は、歴史的に$limitの単位を無視し、単位のない値を返してきました。例えば math.random(100px) は &quot;px&quot; を削除し、42 のような値を返します。</p><p>Sassの将来のバージョンでは、$limit引数の単位を無視しなくなり、同じ単位を持つランダムな整数が返されるようになる予定です。</p><div class="language-scss"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// Future Sass, doesn&#39;t work yet!</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">@debug</span><span style="color:#A6ACCD;"> math.random(100px)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 42px</span></span>
<span class="line"></span></code></pre></div><h4 id="phase-1-3" tabindex="-1">Phase 1 <a class="header-anchor" href="#phase-1-3" aria-label="Permalink to &quot;Phase 1&quot;">​</a></h4><p>互換性:</p><ul><li>Dart Sass: since 1.54.5</li><li>LibSass: ✗</li><li>Ruby Sass: ✗</li></ul><p>現在、Sassは、math.random()に単位付きの$limitを渡すと、非推奨の警告を発します。</p><h4 id="phase-2-3" tabindex="-1">Phase 2 <a class="header-anchor" href="#phase-2-3" aria-label="Permalink to &quot;Phase 2&quot;">​</a></h4><p>互換性:</p><ul><li>Dart Sass: ✗</li><li>LibSass: ✗</li><li>Ruby Sass: ✗</li></ul><p>Dart Sass 2.0.0 では、単位付きの $limit 数を渡すとエラーになります。</p><h4 id="phase-3-2" tabindex="-1">Phase 3 <a class="header-anchor" href="#phase-3-2" aria-label="Permalink to &quot;Phase 3&quot;">​</a></h4><p>互換性:</p><ul><li>Dart Sass: ✗</li><li>LibSass: ✗</li><li>Ruby Sass: ✗</li></ul><p>Dart Sass 2.0.0 以降のマイナーリリースでは、 math.random() 関数に単位付きの $limit を渡すことが再び許可されるようになりました。これは、単位のない数値の代わりに、$limit と同じ単位のランダムな整数を返します。</p><h3 id="weight" tabindex="-1">Weight <a class="header-anchor" href="#weight" aria-label="Permalink to &quot;Weight&quot;">​</a></h3><p>color.mix() 関数と color.invert() 関数は、歴史的に $weight 引数が概念的にパーセンテージを表すにもかかわらず、その単位を無視しました。Sassの将来のバージョンでは、単位を%にすることが要求されます。</p><h4 id="phase-1-4" tabindex="-1">Phase 1 <a class="header-anchor" href="#phase-1-4" aria-label="Permalink to &quot;Phase 1&quot;">​</a></h4><p>互換性:</p><ul><li>Dart Sass: since 1.56.0</li><li>LibSass: ✗</li><li>Ruby Sass: ✗</li></ul><p>現在、Sassは、単位のない$weightや%以外の単位をcolor.mix()やcolor.invert()に渡すと、非推奨の警告を発します。</p><h4 id="phase-2-4" tabindex="-1">Phase 2 <a class="header-anchor" href="#phase-2-4" aria-label="Permalink to &quot;Phase 2&quot;">​</a></h4><p>互換性:</p><ul><li>Dart Sass: ✗</li><li>LibSass: ✗</li><li>Ruby Sass: ✗</li></ul><p>Dart Sass 2.0.0 では、color.mix() と color.invert() は、単位なしの $weight または%以外の単位が渡されるとエラーを投げます。</p><h3 id="index" tabindex="-1">Index <a class="header-anchor" href="#index" aria-label="Permalink to &quot;Index&quot;">​</a></h3><p>list.nth() 関数と list.set-nth() 関数は、歴史的に $n 引数の単位を無視してきました。Sassの将来のバージョンでは、単位は一切禁止される予定です。</p><h4 id="phase-1-5" tabindex="-1">Phase 1 <a class="header-anchor" href="#phase-1-5" aria-label="Permalink to &quot;Phase 1&quot;">​</a></h4><p>互換性:</p><ul><li>Dart Sass: since 1.56.0</li><li>LibSass: ✗</li><li>Ruby Sass: ✗</li></ul><p>現在、Sassは、単位のない$weightや%以外の単位をcolor.mix()やcolor.invert()に渡すと、非推奨の警告を発します。</p><h4 id="phase-2-5" tabindex="-1">Phase 2 <a class="header-anchor" href="#phase-2-5" aria-label="Permalink to &quot;Phase 2&quot;">​</a></h4><p>互換性:</p><ul><li>Dart Sass: ✗</li><li>LibSass: ✗</li><li>Ruby Sass: ✗</li></ul><p>Dart Sass 2.0.0 では、list.nth() および list.set-nth() は、インデックス $n に単位が渡されるとエラーを投げます。</p><h2 id="moz-document" tabindex="-1">-moz-document <a class="header-anchor" href="#moz-document" aria-label="Permalink to &quot;-moz-document&quot;">​</a></h2><p>Firefox では、かつて @-moz-document ルールがあり、特別なパースが必要でした。Firefoxのサポートが終了したため、Sassもそれらをパースするサポートを終了する方向で進めています。</p><p>Sass は歴史的に @-moz-document ルールの特別なパージングをサポートしてきました。Firefox がそれらのサポートを打ち切ったため、Sass も特別な解析のサポートを打ち切り、未知の at-rule として扱います。</p><p>1つだけ例外があります。空の url prefix 関数は、Firefox をターゲットにしたハックで使用されているため、まだ許可されています。</p><div class="vp-code-group"><div class="tabs"><input type="radio" name="group-qGJg2" id="tab-TL0CB0j" checked="checked"><label for="tab-TL0CB0j">SCSS</label><input type="radio" name="group-qGJg2" id="tab-yd1WwX0"><label for="tab-yd1WwX0">CSS</label></div><div class="blocks"><div class="language-scss active"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">@-</span><span style="color:#FFCB6B;">moz-document</span><span style="color:#A6ACCD;"> url-prefix() </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">error</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">color</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> red</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">@-moz-document</span><span style="color:#A6ACCD;"> url-prefix() </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">error</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">color</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> red</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div></div></div><h3 id="移行期間-3" tabindex="-1">移行期間 <a class="header-anchor" href="#移行期間-3" aria-label="Permalink to &quot;移行期間&quot;">​</a></h3><p>互換性:</p><ul><li>Dart Sass: since 1.7.2</li><li>LibSass: ✗</li><li>Ruby Sass: ✗</li></ul><p>まず、空の url-prefix のハックを除く @-moz-document のすべての使用法について非推奨の警告を出します。</p><p>Dart Sass 2.0 では、@-moz-document は未知の at-rule として扱われる予定です。</p><h2 id="複合セレクタの拡張" tabindex="-1">複合セレクタの拡張 <a class="header-anchor" href="#複合セレクタの拡張" aria-label="Permalink to &quot;複合セレクタの拡張&quot;">​</a></h2><p>LibSassは現在、.message.infoのような複合セレクタを拡張することができますが、その拡張方法は@extendが意図する方法とは一致しません。</p><p>互換性:</p><ul><li>Dart Sass: ✓</li><li>LibSass: ✗</li><li>Ruby Sass: ✗</li></ul><p>あるセレクタが別のセレクタを拡張すると、Sassは拡張子にマッチするすべての要素を、拡張されているクラスにもマッチするかのようにスタイルします。つまり、.heads-up {@extend .info} と書くと、HTMLの class=&quot;heads-up&quot; を class=&quot;heads-up info&quot; に置き換えたのと同じように動作します。</p><p>その論理に従えば、.heads-up {@extend .message.info} は class=&quot;heads-up&quot; を class=&quot;heads-up info message&quot; に置き換えたように動作すると思うでしょう。しかし、LibSassとRuby Sassの現在の動作はそうではありません。.infoまたは.messageを持つすべてのセレクタに.heads-upを追加するのではなく、.info.messageを一緒に持つセレクタだけに追加されます。</p><div class="language-scss"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// これらは両方とも延長されるはずですが、されません。</span></span>
<span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">message</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">border</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1px</span><span style="color:#A6ACCD;"> solid black</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">info</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">font-size</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1.5rem</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">heads-up</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;font-style:italic;">@extend</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">message</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">info</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>この問題を解決し、混乱を避け、実装をクリーンで効率的にするために、Dart Sassでは複合セレクタの拡張機能はサポートされておらず、LibSassの将来のバージョンで削除される予定です。互換性を保つため、ユーザーは各単純なセレクタを別々に拡張する必要があります。</p><div class="vp-code-group"><div class="tabs"><input type="radio" name="group-h5RHL" id="tab-KaQHUsx" checked="checked"><label for="tab-KaQHUsx">SCSS</label><input type="radio" name="group-h5RHL" id="tab-5bdIGrp"><label for="tab-5bdIGrp">CSS</label></div><div class="blocks"><div class="language-scss active"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">message</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">border</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1px</span><span style="color:#A6ACCD;"> solid black</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">info</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">font-size</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1.5rem</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">heads-up</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;font-style:italic;">@extend</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">message</span><span style="color:#A6ACCD;">, </span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">info</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">message</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">heads-up</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">border</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1px</span><span style="color:#A6ACCD;"> solid black</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">info</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">heads-up</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">font-size</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1.5rem</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div></div></div><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>⚠️ Heads up!</p><p>SassはCSSがスタイル付けするHTMLの詳細を知らないため、@extendは特定のHTMLに適用されない余分なセレクタを生成する必要がある場合があります。これは、複合セレクタの拡張から切り替えた場合に特に当てはまります。</p><p>ほとんどの場合、これらの余分なセレクタは何の問題も起こさず、gzip 圧縮された CSS に数バイト追加されるだけです。しかし、スタイルシートによっては、古い動作に大きく依存している場合があります。そのような場合は、複合セレクターをプレースホルダーセレクターに置き換えることをお勧めします。</p><div class="vp-code-group"><div class="tabs"><input type="radio" name="group-PAK7a" id="tab-gnz7LKC" checked="checked"><label for="tab-gnz7LKC">SCSS</label><input type="radio" name="group-PAK7a" id="tab-HYC1HRy"><label for="tab-HYC1HRy">CSS</label></div><div class="blocks"><div class="language-scss active"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// Instead of just \`.message.info\`.</span></span>
<span class="line"><span style="color:#89DDFF;">%</span><span style="color:#C792EA;">message-info</span><span style="color:#A6ACCD;">, </span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">message</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">info</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">border</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1px</span><span style="color:#A6ACCD;"> solid black</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">font-size</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1.5rem</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">heads-up</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">// Instead of \`.message.info\`.</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;font-style:italic;">@extend</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">%</span><span style="color:#C792EA;">message-info</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">heads-up</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">message</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">info</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">border</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1px</span><span style="color:#A6ACCD;"> solid black</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">font-size</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1.5rem</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div></div></div></div><h2 id="css-変数構文" tabindex="-1">CSS 変数構文 <a class="header-anchor" href="#css-変数構文" aria-label="Permalink to &quot;CSS 変数構文&quot;">​</a></h2><p>LibSass と Ruby Sass の古いバージョンでは、カスタムプロパティ宣言を他のプロパティ宣言と同様に解析し、SassScript のすべての式を値として使用することができました。しかし、これは CSS と互換性がありませんでした。</p><p>互換性:</p><ul><li>Dart Sass: ✓</li><li>LibSass: since 3.5.0</li><li>Ruby Sass: since 3.5.0</li></ul><p>CSS仕様では、カスタムプロパティ宣言にほとんどすべての文字列を使用することができます。これらの値は CSS プロパティとしては意味をなさないかもしれませんが、JavaScript からアクセスすることは可能です。SassScript の値として解析される場合、プレーン CSS として有効な構文が解析に失敗することがありました。たとえば、Polymer ライブラリでは、プレーン CSS ミキシンをサポートするためにこれを使用していました。</p><div class="vp-code-group"><div class="tabs"><input type="radio" name="group-JXxg5" id="tab-vVTPSGT" checked="checked"><label for="tab-vVTPSGT">SCSS</label><input type="radio" name="group-JXxg5" id="tab-7rLwOXM"><label for="tab-7rLwOXM">CSS</label></div><div class="blocks"><div class="language-scss active"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">:</span><span style="color:#C792EA;">root</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  --flex-theme: </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">border</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1px</span><span style="color:#A6ACCD;"> solid </span><span style="color:#82AAFF;">var</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">--theme-dark-blue</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">font-family</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">var</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">--theme-font-family</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">padding</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">var</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">--theme-wide-padding</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">background-color</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">var</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">--theme-light-blue</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">:</span><span style="color:#C792EA;">root</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  --flex-theme</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> {</span></span>
<span class="line"><span style="color:#A6ACCD;">    border: </span><span style="color:#F78C6C;">1px</span><span style="color:#A6ACCD;"> solid </span><span style="color:#82AAFF;">var</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">--theme-dark-blue</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">font-family</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">var</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">--theme-font-family</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">padding</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">var</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">--theme-wide-padding</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">background-color</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">var</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">--theme-light-blue</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"></span></code></pre></div></div></div><p>プレーン CSS との互換性を最大限に高めるため、最近のバージョンの Sass では、カスタム プロパティ値内の SassScript 式を補間内に記述することが要求されています。補間は古いバージョンの Sass でも動作するため、すべてのスタイルシートで使用することをお勧めします。</p><div class="vp-code-group"><div class="tabs"><input type="radio" name="group-Zgqz8" id="tab-ayI2JXQ" checked="checked"><label for="tab-ayI2JXQ">SCSS</label><input type="radio" name="group-Zgqz8" id="tab-SNt3eDE"><label for="tab-SNt3eDE">CSS</label></div><div class="blocks"><div class="language-scss active"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">$accent-color</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">#</span><span style="color:#A6ACCD;">fbbc04</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">:</span><span style="color:#C792EA;">root</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">// WRONG, will not work in recent Sass versions.</span></span>
<span class="line"><span style="color:#A6ACCD;">  --accent-color-wrong</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> $accent-color</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">// RIGHT, will work in all Sass versions.</span></span>
<span class="line"><span style="color:#A6ACCD;">  --accent-color-right</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">#{</span><span style="color:#A6ACCD;">$accent-color</span><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">:</span><span style="color:#C792EA;">root</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  --accent-color-wrong</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> $accent-color</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  --accent-color-right</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">#</span><span style="color:#A6ACCD;">fbbc04</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div></div></div><p>:::</p><p>⚠️ Heads up!</p><p>引用符で囲まれた文字列は、補間によって引用符が削除されるため、引用符を保持するために meta.inspect() 関数で囲む必要がある場合があります。</p><div class="vp-code-group"><div class="tabs"><input type="radio" name="group-X5tuc" id="tab-1jNzNNv" checked="checked"><label for="tab-1jNzNNv">scss</label><input type="radio" name="group-X5tuc" id="tab-AUKV0J8"><label for="tab-AUKV0J8">css</label></div><div class="blocks"><div class="language-scss active"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">@use</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">sass:meta</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">$font-family-monospace</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> Menlo</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> Consolas</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Courier New</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> monospace</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">:</span><span style="color:#C792EA;">root</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  --font-family-monospace</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">#{</span><span style="color:#A6ACCD;">meta</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">inspect</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">$font-family-monospace</span><span style="color:#89DDFF;">)};</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">:</span><span style="color:#C792EA;">root</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  --font-family-monospace</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> Menlo</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> Consolas</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Courier New</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> monospace</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div></div></div>`,189),e=[o];function t(c,r,i,D,y,C){return l(),a("div",null,e)}const h=s(p,[["render",t]]);export{d as __pageData,h as default};
