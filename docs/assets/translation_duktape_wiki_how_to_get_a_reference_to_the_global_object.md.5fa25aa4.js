import{_ as s,o as a,c as n,Q as l}from"./chunks/framework.43c433ff.js";const d=JSON.parse('{"title":"グローバルオブジェクトへの参照を取得する方法","description":"","frontmatter":{},"headers":[],"relativePath":"translation/duktape/wiki/how_to_get_a_reference_to_the_global_object.md","filePath":"translation/duktape/wiki/how_to_get_a_reference_to_the_global_object.md","lastUpdated":1676126774000}'),o={name:"translation/duktape/wiki/how_to_get_a_reference_to_the_global_object.md"},p=l(`<h1 id="グローバルオブジェクトへの参照を取得する方法" tabindex="-1">グローバルオブジェクトへの参照を取得する方法 <a class="header-anchor" href="#グローバルオブジェクトへの参照を取得する方法" aria-label="Permalink to &quot;グローバルオブジェクトへの参照を取得する方法&quot;">​</a></h1><p>ECMAScript にはグローバル・オブジェクトのための標準的な名前付きバインディングがないので、スクリプトは様々なイディオムを使ってグローバル・オブジェクトにアクセスします。Duktape 2.1以降では、<a href="https://github.com/tc39/proposal-global" target="_blank" rel="noreferrer">https://github.com/tc39/proposal-global</a> に基づいて、明示的なグローバル・バインディングが利用できます。</p><p>次のスニペットは、グローバル（プログラム）コード、evalコード、関数コードなど、どのコンテキストからでもグローバルオブジェクトに簡単にアクセスできます（暗号化されているとしても）。</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> globalObject </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Function</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;return this;&#39;</span><span style="color:#E1E4E8;">)();</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> globalObject </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Function</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;return this;&#39;</span><span style="color:#24292E;">)();</span></span></code></pre></div><p>globalは標準化される可能性が高いので、以下のようなpolyfillが望ましいかもしれません（<a href="https://github.com/svaarala/duktape/blob/master/polyfills/global.js%EF%BC%89%E3%80%82" target="_blank" rel="noreferrer">https://github.com/svaarala/duktape/blob/master/polyfills/global.js）。</a></p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">typeof</span><span style="color:#E1E4E8;"> global </span><span style="color:#F97583;">===</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;undefined&#39;</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    (</span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> () {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> global </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Function</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;return this;&#39;</span><span style="color:#E1E4E8;">)();</span></span>
<span class="line"><span style="color:#E1E4E8;">        Object.</span><span style="color:#B392F0;">defineProperty</span><span style="color:#E1E4E8;">(global, </span><span style="color:#9ECBFF;">&#39;global&#39;</span><span style="color:#E1E4E8;">, {</span></span>
<span class="line"><span style="color:#E1E4E8;">            value: global,</span></span>
<span class="line"><span style="color:#E1E4E8;">            writable: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">            enumerable: </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">            configurable: </span><span style="color:#79B8FF;">true</span></span>
<span class="line"><span style="color:#E1E4E8;">        });</span></span>
<span class="line"><span style="color:#E1E4E8;">    })();</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">typeof</span><span style="color:#24292E;"> global </span><span style="color:#D73A49;">===</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;undefined&#39;</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    (</span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> () {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">var</span><span style="color:#24292E;"> global </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Function</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;return this;&#39;</span><span style="color:#24292E;">)();</span></span>
<span class="line"><span style="color:#24292E;">        Object.</span><span style="color:#6F42C1;">defineProperty</span><span style="color:#24292E;">(global, </span><span style="color:#032F62;">&#39;global&#39;</span><span style="color:#24292E;">, {</span></span>
<span class="line"><span style="color:#24292E;">            value: global,</span></span>
<span class="line"><span style="color:#24292E;">            writable: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">            enumerable: </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">            configurable: </span><span style="color:#005CC5;">true</span></span>
<span class="line"><span style="color:#24292E;">        });</span></span>
<span class="line"><span style="color:#24292E;">    })();</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>new Function(...) は、引数として与えられたボディを持つ新しい関数を作成します。他の多くのコンテキストとは異なり、周囲のコードの厳密性は継承されないので、作成された関数は厳密ではないので、これは一貫してグローバルオブジェクトにバインドされます。</p>`,7),e=[p];function t(c,r,E,y,i,_){return a(),n("div",null,e)}const u=s(o,[["render",t]]);export{d as __pageData,u as default};
