import{_ as s,c as n,o as a,a as l}from"./app.75bfde98.js";const f=JSON.parse('{"title":"GLFWドキュメンテーション（日本語訳）","description":"","frontmatter":{},"headers":[{"level":2,"title":"ライセンス","slug":"ライセンス","link":"#ライセンス","children":[]},{"level":2,"title":"コード例","slug":"コード例","link":"#コード例","children":[]}],"relativePath":"translation/GLFW/index.md","lastUpdated":1676126774000}'),p={name:"translation/GLFW/index.md"},o=l(`<h1 id="glfwドキュメンテーション-日本語訳" tabindex="-1">GLFWドキュメンテーション（日本語訳） <a class="header-anchor" href="#glfwドキュメンテーション-日本語訳" aria-hidden="true">#</a></h1><p><a href="https://www.glfw.org" target="_blank" rel="noreferrer">原文</a></p><p><a href="https://www.glfw.org/docs/latest/" target="_blank" rel="noreferrer">HTMLドキュメント</a>にはチュートリアル・トピック別のガイド・APIリファレンスが含まれています。</p><p><a href="https://www.glfw.org/faq.html" target="_blank" rel="noreferrer">FAQ</a>はGLFWの設計・実装・使用に関する多くの一般的な質問に答えています。</p><h2 id="ライセンス" tabindex="-1">ライセンス <a class="header-anchor" href="#ライセンス" aria-hidden="true">#</a></h2><p>GLFWは<a href="https://www.glfw.org/license.html" target="_blank" rel="noreferrer">zlib/libpng</a>ライセンスに基づき改変・配布・クローズドソースソフトウェアでの利用を許可しています。</p><h2 id="コード例" tabindex="-1">コード例 <a class="header-anchor" href="#コード例" aria-hidden="true">#</a></h2><p>以下は、GLFWでウィンドウとOpenGLコンテキストをセットアップする短い例です。ここで使われている以外にも多くの関数があります。GLFWの簡単な紹介はHTMLドキュメントの<a href="https://www.glfw.org/docs/latest/quick.html" target="_blank" rel="noreferrer">Getting started</a>を参照してください。</p><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">#include</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">GLFW/glfw3.h</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">main</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">void</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    GLFWwindow</span><span style="color:#89DDFF;">*</span><span style="color:#F07178;"> window</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    /* ライブラリの初期化 */</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(!</span><span style="color:#82AAFF;">glfwInit</span><span style="color:#89DDFF;">())</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    /* ウィンドウモードのウィンドウとそのOpenGLコンテキストの作成 */</span></span>
<span class="line"><span style="color:#F07178;">    window </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">glfwCreateWindow</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">640</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">480</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Hello World</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">NULL,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">NULL);</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(!</span><span style="color:#F07178;">window</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#82AAFF;">glfwTerminate</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    /* ウィンドウのコンテキストをカレントにする */</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">glfwMakeContextCurrent</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">window</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    /* ユーザーがウィンドウを閉じるまでループする */</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">while</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(!</span><span style="color:#82AAFF;">glfwWindowShouldClose</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">window</span><span style="color:#89DDFF;">))</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">        /* レンダリングはこちら */</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#82AAFF;">glClear</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">GL_COLOR_BUFFER_BIT</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">        /* フロントバッファとバックバッファの入れ替え */</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#82AAFF;">glfwSwapBuffers</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">window</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">        /* イベントのポーリングと処理 */</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#82AAFF;">glfwPollEvents</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">glfwTerminate</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div>`,9),e=[o];function t(r,c,F,i,y,D){return a(),n("div",null,e)}const w=s(p,[["render",t]]);export{f as __pageData,w as default};
