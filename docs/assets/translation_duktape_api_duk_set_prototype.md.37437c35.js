import{_ as s,o as a,c as t,Q as o}from"./chunks/framework.43c433ff.js";const h=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"translation/duktape/api/duk_set_prototype.md","filePath":"translation/duktape/api/duk_set_prototype.md","lastUpdated":1676126774000}'),e={name:"translation/duktape/api/duk_set_prototype.md"},p=o(`<h2 id="duk-set-prototype" tabindex="-1">duk_set_prototype() <a class="header-anchor" href="#duk-set-prototype" aria-label="Permalink to &quot;duk_set_prototype()&quot;">​</a></h2><p>1.0.0 prototype object</p><h3 id="プロトタイプ" tabindex="-1">プロトタイプ <a class="header-anchor" href="#プロトタイプ" aria-label="Permalink to &quot;プロトタイプ&quot;">​</a></h3><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">duk_set_prototype</span><span style="color:#E1E4E8;">(duk_context </span><span style="color:#F97583;">*</span><span style="color:#FFAB70;">ctx</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">duk_idx_t</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">idx</span><span style="color:#E1E4E8;">);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">duk_set_prototype</span><span style="color:#24292E;">(duk_context </span><span style="color:#D73A49;">*</span><span style="color:#E36209;">ctx</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">duk_idx_t</span><span style="color:#24292E;"> </span><span style="color:#E36209;">idx</span><span style="color:#24292E;">);</span></span></code></pre></div><h3 id="スタック" tabindex="-1">スタック <a class="header-anchor" href="#スタック" aria-label="Permalink to &quot;スタック&quot;">​</a></h3><p>| ... | val | ... | proto | -&gt; | ... | val | ... |</p><h3 id="要約" tabindex="-1">要約 <a class="header-anchor" href="#要約" aria-label="Permalink to &quot;要約&quot;">​</a></h3><p>idx の値の内部プロトタイプをスタックの先頭の値（オブジェクトまたは未定義でなければならない）に設定します。対象値がオブジェクトでない場合、またはプロトタイプ値がオブジェクトまたは未定義 でない場合は、エラーをスローします。</p><p>ECMAScript のプロトタイプ操作プリミティブと異なり、本 API コールはプロトタイプループを作成することができます。Duktapeは長いプロトタイプ・チェーンやループしたプロトタイプ・チェーンを検出してエラーを投げますが、そのような動作は無限ループを避けるための最後の手段としてのみ意図されています。</p><h3 id="例" tabindex="-1">例 <a class="header-anchor" href="#例" aria-label="Permalink to &quot;例&quot;">​</a></h3><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">/* Create new object, internal prototype is Object.prototype by default. */</span></span>
<span class="line"><span style="color:#B392F0;">duk_push_object</span><span style="color:#E1E4E8;">(ctx);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">/* Change the object&#39;s internal prototype to object at index -3. */</span></span>
<span class="line"><span style="color:#B392F0;">duk_dup</span><span style="color:#E1E4E8;">(ctx, </span><span style="color:#F97583;">-</span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#B392F0;">duk_set_prototype</span><span style="color:#E1E4E8;">(ctx, </span><span style="color:#F97583;">-</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">);</span><span style="color:#6A737D;">  /* [ obj proto ] -&gt; [ obj ] */</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">/* Create new object, internal prototype is Object.prototype by default. */</span></span>
<span class="line"><span style="color:#6F42C1;">duk_push_object</span><span style="color:#24292E;">(ctx);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">/* Change the object&#39;s internal prototype to object at index -3. */</span></span>
<span class="line"><span style="color:#6F42C1;">duk_dup</span><span style="color:#24292E;">(ctx, </span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#6F42C1;">duk_set_prototype</span><span style="color:#24292E;">(ctx, </span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">);</span><span style="color:#6A737D;">  /* [ obj proto ] -&gt; [ obj ] */</span></span></code></pre></div><h3 id="参照" tabindex="-1">参照 <a class="header-anchor" href="#参照" aria-label="Permalink to &quot;参照&quot;">​</a></h3><p>duk_get_prototype</p>`,13),n=[p];function l(c,r,i,d,y,_){return a(),t("div",null,n)}const E=s(e,[["render",l]]);export{h as __pageData,E as default};
