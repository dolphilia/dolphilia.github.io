import{_ as E,C as t,o as d,c as u,k as p,a as n,H as s,w as a,Q as o}from"./chunks/framework.92ce8a2a.js";const ts=JSON.parse('{"title":"組み込みモジュール","description":"","frontmatter":{},"headers":[],"relativePath":"translation/sass/modules.md","filePath":"translation/sass/modules.md","lastUpdated":1676974355000}'),g={name:"translation/sass/modules.md"},h=o(`<h1 id="組み込みモジュール" tabindex="-1">組み込みモジュール <a class="header-anchor" href="#組み込みモジュール" aria-label="Permalink to &quot;組み込みモジュール&quot;">​</a></h1><nav class="table-of-contents"><ul><li><a href="#概要">概要</a></li><li><a href="#sass-color">sass:color</a></li><li><a href="#sass-list">sass:list</a></li><li><a href="#sass-map">sass:map</a></li><li><a href="#sass-math">sass:math</a><ul><li><a href="#変数">変数</a></li><li><a href="#バウンディング関数">バウンディング関数</a></li><li><a href="#距離関数">距離関数</a></li><li><a href="#指数関数">指数関数</a></li><li><a href="#三角関数">三角関数</a></li><li><a href="#ユニット関数">ユニット関数</a></li><li><a href="#その他の関数">その他の関数</a></li></ul></li><li><a href="#sass-meta">sass:meta</a><ul><li><a href="#mixins">Mixins</a></li><li><a href="#関数">関数</a></li></ul></li><li><a href="#sass-selector">sass:selector</a><ul><li><a href="#selector-values">Selector Values</a></li></ul></li><li><a href="#sass-string">sass:string</a></li></ul></nav><h2 id="概要" tabindex="-1">概要 <a class="header-anchor" href="#概要" aria-label="Permalink to &quot;概要&quot;">​</a></h2><p>互換性:</p><ul><li>Dart Sass: since 1.23.0</li><li>LibSass: ✗</li><li>Ruby Sass: ✗</li><li>▶</li></ul><p>Sass には、便利な関数 (および時折の mixin) を含む多くの組み込みモジュールがあります。これらのモジュールは、他のユーザ定義スタイルシートと同様に @use 規則でロードすることができ、その関数は他のモジュール・メンバーと同様に呼び出すことができます。すべての組み込みモジュールの URL は、Sass 自体の一部であることを示すために sass: で始まっています。</p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>⚠️ Heads up!</p><p>Sassモジュールシステムが導入される以前は、全てのSass関数が常にグローバルに利用可能でした。多くの関数は現在でもグローバルエイリアスを持っています（これらはドキュメントに記載されています）。Sass チームはこれらの使用を推奨しておらず、いずれは非推奨とする予定ですが、現時点では古い Sass バージョンや LibSass (モジュールシステムをまだサポートしていない) との互換性のために、これらの関数が残っています。</p><p>いくつかの関数は、新しいモジュールシステムでもグローバルにしか利用できません。これは、特別な評価動作 (if()) や、組み込みの CSS 関数 (rgb() と hsl()) の上に追加の動作を追加しているためです。これらは非推奨になることはなく、自由に使うことができます。</p></div><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-C6COj" id="tab-JKXJVDm" checked="checked"><label for="tab-JKXJVDm">SCSS</label><input type="radio" name="group-C6COj" id="tab-zuYff6y"><label for="tab-zuYff6y">CSS</label></div><div class="blocks"><div class="language-scss vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">@use</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;sass:color&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">.button</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FFAB70;">$primary-color</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">#6b717f</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">color</span><span style="color:#E1E4E8;">: </span><span style="color:#FFAB70;">$primary-color</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">border</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">1</span><span style="color:#F97583;">px</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">solid</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">color</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">scale</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">$primary-color</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">$lightness:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">20</span><span style="color:#F97583;">%</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">@use</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;sass:color&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">.button</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">$primary-color</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">#6b717f</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">color</span><span style="color:#24292E;">: </span><span style="color:#E36209;">$primary-color</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">border</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">1</span><span style="color:#D73A49;">px</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">solid</span><span style="color:#24292E;"> </span><span style="color:#E36209;">color</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">scale</span><span style="color:#24292E;">(</span><span style="color:#E36209;">$primary-color</span><span style="color:#24292E;">, </span><span style="color:#E36209;">$lightness:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">20</span><span style="color:#D73A49;">%</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">.button</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">color</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">#6b717f</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">border</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">1</span><span style="color:#F97583;">px</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">solid</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">#878d9a</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">.button</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">color</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">#6b717f</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">border</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">1</span><span style="color:#D73A49;">px</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">solid</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">#878d9a</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div></div></div><p>Sassには、以下の組み込みモジュールが用意されています。</p><ul><li>sass:math モジュールは、数値に対して操作する関数を提供します。</li><li>sass:string モジュールは、文字列の結合、検索、分割を簡単に行うことができるようにします。</li><li>sass:color モジュールは、既存の色に基づいて新しい色を生成し、カラーテーマを簡単に構築します。</li><li>sass:list モジュールは、リスト内の値にアクセスし、変更することができる。</li><li>sass:map モジュールは、マップ内のキーに関連付けられた値を検索することを可能にします。</li><li>sass:selector モジュールは、Sass の強力なセレクタエンジンにアクセスするためのモジュールです。</li><li>sass:meta モジュールは、Sass の内部動作の詳細を公開します。</li></ul><p>グローバル関数パーマリンクグローバル関数</p><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">hsl(</span><span style="color:#FFAB70;">$hue</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">$saturation</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">$lightness</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">hsl(</span><span style="color:#FFAB70;">$hue</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">$saturation</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">$lightness</span><span style="color:#E1E4E8;"> / </span><span style="color:#FFAB70;">$alpha</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">hsl(</span><span style="color:#FFAB70;">$hue</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">$saturation</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">$lightness</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">$alpha</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#79B8FF;">hsla</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">$hue</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">$saturation</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">$lightness</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#79B8FF;">hsla</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">$hue</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">$saturation</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">$lightness</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">$alpha</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#79B8FF;">hsla</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">$hue</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">$saturation</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">$lightness</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">$alpha:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">//=&gt; color</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">hsl(</span><span style="color:#E36209;">$hue</span><span style="color:#24292E;"> </span><span style="color:#E36209;">$saturation</span><span style="color:#24292E;"> </span><span style="color:#E36209;">$lightness</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">hsl(</span><span style="color:#E36209;">$hue</span><span style="color:#24292E;"> </span><span style="color:#E36209;">$saturation</span><span style="color:#24292E;"> </span><span style="color:#E36209;">$lightness</span><span style="color:#24292E;"> / </span><span style="color:#E36209;">$alpha</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">hsl(</span><span style="color:#E36209;">$hue</span><span style="color:#24292E;">, </span><span style="color:#E36209;">$saturation</span><span style="color:#24292E;">, </span><span style="color:#E36209;">$lightness</span><span style="color:#24292E;">, </span><span style="color:#E36209;">$alpha</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#005CC5;">hsla</span><span style="color:#24292E;">(</span><span style="color:#E36209;">$hue</span><span style="color:#24292E;"> </span><span style="color:#E36209;">$saturation</span><span style="color:#24292E;"> </span><span style="color:#E36209;">$lightness</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#005CC5;">hsla</span><span style="color:#24292E;">(</span><span style="color:#E36209;">$hue</span><span style="color:#24292E;"> </span><span style="color:#E36209;">$saturation</span><span style="color:#24292E;"> </span><span style="color:#E36209;">$lightness</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">/</span><span style="color:#24292E;"> </span><span style="color:#E36209;">$alpha</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#005CC5;">hsla</span><span style="color:#24292E;">(</span><span style="color:#E36209;">$hue</span><span style="color:#24292E;">, </span><span style="color:#E36209;">$saturation</span><span style="color:#24292E;">, </span><span style="color:#E36209;">$lightness</span><span style="color:#24292E;">, </span><span style="color:#E36209;">$alpha:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">//=&gt; color</span></span></code></pre></div><p>互換性 (Level 4 Syntax):</p><ul><li>Dart Sass: since 1.15.0</li><li>LibSass: ✗</li><li>Ruby Sass: ✗</li><li>▶</li></ul><p>互換性 (Percent Alpha):</p><ul><li>Dart Sass: ✓</li><li>LibSass: ✗</li><li>Ruby Sass: since 3.7.0</li><li>▶</li></ul><p>与えられた色相、彩度、明度、およびアルファチャンネルを持つ色を返します。</p><p>色相は 0deg から 360deg の間の数値で、単位を持たないこともあります。彩度・明度は 0% から 100% の間の数値で、単位はありません。アルファチャンネルは、0 から 1 の間の単位を持たない数値、または 0% から 100% の間のパーセントで指定します。</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>💡 Fun fact:</p><p>hsl()の引数の代わりに calc() や var() のような特殊な関数を渡すことができます。複数の引数の代わりに var() を使うことさえできます。色関数をこの方法で呼び出すと、呼び出されたときと同じシグネチャを使用した引用符なしの文字列が返されます。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> hsl(210deg 100% 20% / var(</span><span style="color:#FFAB70;">--opacity</span><span style="color:#E1E4E8;">)); </span><span style="color:#6A737D;">// hsl(210deg 100% 20% / var(--opacity))</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> hsla(var(</span><span style="color:#FFAB70;">--peach</span><span style="color:#E1E4E8;">), 20%); </span><span style="color:#6A737D;">// hsla(var(--peach), 20%)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> hsl(210deg 100% 20% / var(</span><span style="color:#E36209;">--opacity</span><span style="color:#24292E;">)); </span><span style="color:#6A737D;">// hsl(210deg 100% 20% / var(--opacity))</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> hsla(var(</span><span style="color:#E36209;">--peach</span><span style="color:#24292E;">), 20%); </span><span style="color:#6A737D;">// hsla(var(--peach), 20%)</span></span></code></pre></div><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>⚠️ Heads up!</p><p>スラッシュで区切られた値に対する Sass の特別なパースルールは、 hsl($hue $saturation $lightness / $alpha) シグネチャを使うときに $lightness や alpha の変数を渡すことを困難にしています。代わりに hsl(hue, $saturation, $lightness, $alpha) を使うことを検討してください。</p></div></div><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> hsl(210deg 100% 20%); </span><span style="color:#6A737D;">// #036</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> hsl(34, 35%, 92%); </span><span style="color:#6A737D;">// #f2ece4</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> hsl(210deg 100% 20% / 50%); </span><span style="color:#6A737D;">// rgba(0, 51, 102, 0.5)</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> hsla(34, 35%, 92%, 0.2); </span><span style="color:#6A737D;">// rgba(242, 236, 228, 0.2)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> hsl(210deg 100% 20%); </span><span style="color:#6A737D;">// #036</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> hsl(34, 35%, 92%); </span><span style="color:#6A737D;">// #f2ece4</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> hsl(210deg 100% 20% / 50%); </span><span style="color:#6A737D;">// rgba(0, 51, 102, 0.5)</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> hsla(34, 35%, 92%, 0.2); </span><span style="color:#6A737D;">// rgba(242, 236, 228, 0.2)</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">if(</span><span style="color:#FFAB70;">$condition</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">$if-true</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">$if-false</span><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">if(</span><span style="color:#E36209;">$condition</span><span style="color:#24292E;">, </span><span style="color:#E36209;">$if-true</span><span style="color:#24292E;">, </span><span style="color:#E36209;">$if-false</span><span style="color:#24292E;">)</span></span></code></pre></div><p>条件が真であればif-trueを、そうでなければif-falseを返します。</p><p>この関数は、返されない引数を評価しないという点で特別です。 そのため、未使用の引数がエラーを投げるような場合でも安全に呼び出すことができます。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> if(true, 10px, 15px); </span><span style="color:#6A737D;">// 10px</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> if(false, 10px, 15px); </span><span style="color:#6A737D;">// 15px</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> if(variable-defined(</span><span style="color:#FFAB70;">$var</span><span style="color:#E1E4E8;">), </span><span style="color:#FFAB70;">$var</span><span style="color:#E1E4E8;">, null); </span><span style="color:#6A737D;">// null</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> if(true, 10px, 15px); </span><span style="color:#6A737D;">// 10px</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> if(false, 10px, 15px); </span><span style="color:#6A737D;">// 15px</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> if(variable-defined(</span><span style="color:#E36209;">$var</span><span style="color:#24292E;">), </span><span style="color:#E36209;">$var</span><span style="color:#24292E;">, null); </span><span style="color:#6A737D;">// null</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">rgb(</span><span style="color:#FFAB70;">$red</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">$green</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">$blue</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">rgb(</span><span style="color:#FFAB70;">$red</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">$green</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">$blue</span><span style="color:#E1E4E8;"> / </span><span style="color:#FFAB70;">$alpha</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">rgb(</span><span style="color:#FFAB70;">$red</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">$green</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">$blue</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">$alpha</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#79B8FF;">rgb</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">$color</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">$alpha</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#79B8FF;">rgba</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">$red</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">$green</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">$blue</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#79B8FF;">rgba</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">$red</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">$green</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">$blue</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">$alpha</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#79B8FF;">rgba</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">$red</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">$green</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">$blue</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">$alpha:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#79B8FF;">rgba</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">$color</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">$alpha</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">//=&gt; color</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">rgb(</span><span style="color:#E36209;">$red</span><span style="color:#24292E;"> </span><span style="color:#E36209;">$green</span><span style="color:#24292E;"> </span><span style="color:#E36209;">$blue</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">rgb(</span><span style="color:#E36209;">$red</span><span style="color:#24292E;"> </span><span style="color:#E36209;">$green</span><span style="color:#24292E;"> </span><span style="color:#E36209;">$blue</span><span style="color:#24292E;"> / </span><span style="color:#E36209;">$alpha</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">rgb(</span><span style="color:#E36209;">$red</span><span style="color:#24292E;">, </span><span style="color:#E36209;">$green</span><span style="color:#24292E;">, </span><span style="color:#E36209;">$blue</span><span style="color:#24292E;">, </span><span style="color:#E36209;">$alpha</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#005CC5;">rgb</span><span style="color:#24292E;">(</span><span style="color:#E36209;">$color</span><span style="color:#24292E;">, </span><span style="color:#E36209;">$alpha</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#005CC5;">rgba</span><span style="color:#24292E;">(</span><span style="color:#E36209;">$red</span><span style="color:#24292E;"> </span><span style="color:#E36209;">$green</span><span style="color:#24292E;"> </span><span style="color:#E36209;">$blue</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#005CC5;">rgba</span><span style="color:#24292E;">(</span><span style="color:#E36209;">$red</span><span style="color:#24292E;"> </span><span style="color:#E36209;">$green</span><span style="color:#24292E;"> </span><span style="color:#E36209;">$blue</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">/</span><span style="color:#24292E;"> </span><span style="color:#E36209;">$alpha</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#005CC5;">rgba</span><span style="color:#24292E;">(</span><span style="color:#E36209;">$red</span><span style="color:#24292E;">, </span><span style="color:#E36209;">$green</span><span style="color:#24292E;">, </span><span style="color:#E36209;">$blue</span><span style="color:#24292E;">, </span><span style="color:#E36209;">$alpha:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#005CC5;">rgba</span><span style="color:#24292E;">(</span><span style="color:#E36209;">$color</span><span style="color:#24292E;">, </span><span style="color:#E36209;">$alpha</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">//=&gt; color</span></span></code></pre></div><p>互換性 (Level 4 Syntax):</p><ul><li>Dart Sass: since 1.15.0</li><li>LibSass: ✗</li><li>Ruby Sass: ✗</li><li>▶</li></ul><p>互換性 (Percent Alpha):</p><ul><li>Dart Sass: ✓</li><li>LibSass: ✗</li><li>Ruby Sass: since 3.7.0</li><li>▶</li></ul><p>red, $green, $blue、そしてオプションで $alpha が渡された場合、 与えられた赤、緑、青、アルファチャンネルを持つ色を返します。</p><p>各チャンネルは、0 から 255 までの単位を持たない数値、 あるいは 0% から 100% までのパーセンテージで指定することができます。アルファチャンネルは，0 から 1 までの単位を持たない数値，または 0 から 100 までのパーセントで指定します．</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>💡 Fun fact:</p><p>rgb()の引数の代わりに calc() や var() などの特殊な関数を渡すことができます。複数の引数の代わりに var() を使用することもできます。色関数をこの方法で呼び出すと、呼び出されたときと同じシグネチャを使用した引用符なしの文字列が返されます。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> rgb(0 51 102 / var(</span><span style="color:#FFAB70;">--opacity</span><span style="color:#E1E4E8;">)); </span><span style="color:#6A737D;">// rgb(0 51 102 / var(--opacity))</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> rgba(var(</span><span style="color:#FFAB70;">--peach</span><span style="color:#E1E4E8;">), 0.2); </span><span style="color:#6A737D;">// rgba(var(--peach), 0.2)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> rgb(0 51 102 / var(</span><span style="color:#E36209;">--opacity</span><span style="color:#24292E;">)); </span><span style="color:#6A737D;">// rgb(0 51 102 / var(--opacity))</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> rgba(var(</span><span style="color:#E36209;">--peach</span><span style="color:#24292E;">), 0.2); </span><span style="color:#6A737D;">// rgba(var(--peach), 0.2)</span></span></code></pre></div></div><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>⚠️ Heads up!</p><p>Sassのスラッシュで区切られた値の特別な解析ルールは、rgb($red $green $blue / alpha)署名を使用するときにblueまたはalphaの変数を渡すことを難しくします。代わりにrgb(red, $green, $blue, $alpha)を使用することを検討してください。</p></div><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> rgb(0 51 102); </span><span style="color:#6A737D;">// #036</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> rgb(95%, 92.5%, 89.5%); </span><span style="color:#6A737D;">// #f2ece4</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> rgb(0 51 102 / 50%); </span><span style="color:#6A737D;">// rgba(0, 51, 102, 0.5)</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> rgba(95%, 92.5%, 89.5%, 0.2); </span><span style="color:#6A737D;">// rgba(242, 236, 228, 0.2)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> rgb(0 51 102); </span><span style="color:#6A737D;">// #036</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> rgb(95%, 92.5%, 89.5%); </span><span style="color:#6A737D;">// #f2ece4</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> rgb(0 51 102 / 50%); </span><span style="color:#6A737D;">// rgba(0, 51, 102, 0.5)</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> rgba(95%, 92.5%, 89.5%, 0.2); </span><span style="color:#6A737D;">// rgba(242, 236, 228, 0.2)</span></span></code></pre></div><p>color と $alpha が渡された場合、これは $color に与えられた $alpha チャンネルを、 元のアルファチャンネルのかわりに付けて返します。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> rgb(#f2ece4, 50%); </span><span style="color:#6A737D;">// rgba(242, 236, 228, 0.5);</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> rgba(rgba(0, 51, 102, 0.5), 1); </span><span style="color:#6A737D;">// #003366</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> rgb(#f2ece4, 50%); </span><span style="color:#6A737D;">// rgba(242, 236, 228, 0.5);</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> rgba(rgba(0, 51, 102, 0.5), 1); </span><span style="color:#6A737D;">// #003366</span></span></code></pre></div><h2 id="sass-color" tabindex="-1">sass:color <a class="header-anchor" href="#sass-color" aria-label="Permalink to &quot;sass:color&quot;">​</a></h2><p>互換性:</p><ul><li>Dart Sass: since 1.23.0</li><li>LibSass: ✗</li><li>Ruby Sass: ✗</li><li>▶</li></ul><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">color.adjust(</span><span style="color:#FFAB70;">$color</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FFAB70;">$red</span><span style="color:#E1E4E8;">: null, </span><span style="color:#FFAB70;">$green</span><span style="color:#E1E4E8;">: null, </span><span style="color:#FFAB70;">$blue</span><span style="color:#E1E4E8;">: null,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FFAB70;">$hue</span><span style="color:#E1E4E8;">: null, </span><span style="color:#FFAB70;">$saturation</span><span style="color:#E1E4E8;">: null, </span><span style="color:#FFAB70;">$lightness</span><span style="color:#E1E4E8;">: null,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FFAB70;">$whiteness</span><span style="color:#E1E4E8;">: null, </span><span style="color:#FFAB70;">$blackness</span><span style="color:#E1E4E8;">: null,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FFAB70;">$alpha</span><span style="color:#E1E4E8;">: null)</span></span>
<span class="line"><span style="color:#79B8FF;">adjust-color</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">...</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">//=&gt; color</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">color.adjust(</span><span style="color:#E36209;">$color</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">$red</span><span style="color:#24292E;">: null, </span><span style="color:#E36209;">$green</span><span style="color:#24292E;">: null, </span><span style="color:#E36209;">$blue</span><span style="color:#24292E;">: null,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">$hue</span><span style="color:#24292E;">: null, </span><span style="color:#E36209;">$saturation</span><span style="color:#24292E;">: null, </span><span style="color:#E36209;">$lightness</span><span style="color:#24292E;">: null,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">$whiteness</span><span style="color:#24292E;">: null, </span><span style="color:#E36209;">$blackness</span><span style="color:#24292E;">: null,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">$alpha</span><span style="color:#24292E;">: null)</span></span>
<span class="line"><span style="color:#005CC5;">adjust-color</span><span style="color:#24292E;">(</span><span style="color:#E36209;">...</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">//=&gt; color</span></span></code></pre></div><p>互換性 ($whiteness and $blackness):</p><ul><li>Dart Sass: since 1.28.0</li><li>LibSass: ✗</li><li>Ruby Sass: ✗</li></ul><p>color の 1 つまたは複数のプロパティを固定値で増減します。</p><p>各キーワード引数に渡された値を、色の対応するプロパティに追加し、調整後の色を返します。RGB プロパティ (red、green、および blue) と HSL プロパティ (hue、$saturation、および lightness) を同時に指定したり、それらのいずれかと HWB プロパティ (hue、$whiteness、および $blackness) を同時に指定するとエラーになります。</p><p>オプションの引数は、すべて数字でなければなりません。red、green、blueの各引数は、単位を持たず、-255から255の間（この値を含む）でなければなりません。hueは、単位がdegであるか、または単位なしである必要があります。saturation、lightness、whiteness、$blacknessは-100%から100%の間でなければならず、無単位であってはな りません。alphaは、-1以上1以下（単位なし）でなければなりません。</p><p>こちらも参照してください。</p><ul><li>色のプロパティを流動的に拡大縮小する color.scale()。</li><li>色のプロパティを設定するには color.change() を使用します。</li></ul><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> color.adjust(#6b717f, </span><span style="color:#FFAB70;">$red</span><span style="color:#E1E4E8;">: 15); </span><span style="color:#6A737D;">// #7a717f</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> color.adjust(#d2e1dd, </span><span style="color:#FFAB70;">$red</span><span style="color:#E1E4E8;">: -10, </span><span style="color:#FFAB70;">$blue</span><span style="color:#E1E4E8;">: 10); </span><span style="color:#6A737D;">// #c8e1e7</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> color.adjust(#998099, </span><span style="color:#FFAB70;">$lightness</span><span style="color:#E1E4E8;">: -30%, </span><span style="color:#FFAB70;">$alpha</span><span style="color:#E1E4E8;">: -0.4); </span><span style="color:#6A737D;">// rgba(71, 57, 71, 0.6)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> color.adjust(#6b717f, </span><span style="color:#E36209;">$red</span><span style="color:#24292E;">: 15); </span><span style="color:#6A737D;">// #7a717f</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> color.adjust(#d2e1dd, </span><span style="color:#E36209;">$red</span><span style="color:#24292E;">: -10, </span><span style="color:#E36209;">$blue</span><span style="color:#24292E;">: 10); </span><span style="color:#6A737D;">// #c8e1e7</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> color.adjust(#998099, </span><span style="color:#E36209;">$lightness</span><span style="color:#24292E;">: -30%, </span><span style="color:#E36209;">$alpha</span><span style="color:#24292E;">: -0.4); </span><span style="color:#6A737D;">// rgba(71, 57, 71, 0.6)</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">adjust-hue(</span><span style="color:#FFAB70;">$color</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">$degrees</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">//=&gt; color</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">adjust-hue(</span><span style="color:#E36209;">$color</span><span style="color:#24292E;">, </span><span style="color:#E36209;">$degrees</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">//=&gt; color</span></span></code></pre></div><p>color の色相を増減します。</p><p>hue は、-360deg から 360deg (この値を含む) までの数値で、 $color の色相に加算します。単位を持たないこともできますが、deg 以外の単位を持つことはできません。</p><p>色の属性を調整する color.adjust() も参照してください。</p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>⚠️ Heads up!</p><p>adjust-hue()はadjust()と冗長なので、新しいモジュールシステムには直接含まれません。adjust-hue($color, amount) の代わりに、 color.adjust(color, $hue: $amount) と書くことができます。</p></div><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// Hue 222deg becomes 282deg.</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> adjust-hue(#6b717f, 60deg); </span><span style="color:#6A737D;">// #796b7f</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// Hue 164deg becomes 104deg.</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> adjust-hue(#d2e1dd, -60deg); </span><span style="color:#6A737D;">// #d6e1d2</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// Hue 210deg becomes 255deg.</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> adjust-hue(#036, 45); </span><span style="color:#6A737D;">// #1a0066</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// Hue 222deg becomes 282deg.</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> adjust-hue(#6b717f, 60deg); </span><span style="color:#6A737D;">// #796b7f</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// Hue 164deg becomes 104deg.</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> adjust-hue(#d2e1dd, -60deg); </span><span style="color:#6A737D;">// #d6e1d2</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// Hue 210deg becomes 255deg.</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> adjust-hue(#036, 45); </span><span style="color:#6A737D;">// #1a0066</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">color.alpha(</span><span style="color:#FFAB70;">$color</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">alpha(</span><span style="color:#FFAB70;">$color</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">opacity(</span><span style="color:#FFAB70;">$color</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">//=&gt; number</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">color.alpha(</span><span style="color:#E36209;">$color</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">alpha(</span><span style="color:#E36209;">$color</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">opacity(</span><span style="color:#E36209;">$color</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">//=&gt; number</span></span></code></pre></div><p>color のアルファチャンネルを 0 から 1 の間の数値で返します。</p><p>特殊なケースとして、これは Internet Explorer の alpha(opacity=20) という構文もサポートしており、その場合は引用符で囲まれていない文字列を返します。</p><p>こちらも参照ください。</p><ul><li>color.red() は色の赤チャンネルを取得します。</li><li>color.green() は、色の緑チャンネルを取得します。</li><li>color.blue() は、色の青チャンネルを取得します。</li><li>color.hue() は、色の色相を取得します。</li><li>color.saturation() は、色の彩度を取得します。</li><li>color.lightness() は、色の明度を取得します。</li></ul><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> color.alpha(#e1d7d2); </span><span style="color:#6A737D;">// 1</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> color.opacity(rgb(210, 225, 221, 0.4)); </span><span style="color:#6A737D;">// 0.4</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> alpha(opacity=20); </span><span style="color:#6A737D;">// alpha(opacity=20)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> color.alpha(#e1d7d2); </span><span style="color:#6A737D;">// 1</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> color.opacity(rgb(210, 225, 221, 0.4)); </span><span style="color:#6A737D;">// 0.4</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> alpha(opacity=20); </span><span style="color:#6A737D;">// alpha(opacity=20)</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">color.blackness(</span><span style="color:#FFAB70;">$color</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">//=&gt; number</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">color.blackness(</span><span style="color:#E36209;">$color</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">//=&gt; number</span></span></code></pre></div><p>互換性:</p><ul><li>Dart Sass: since 1.28.0</li><li>LibSass: ✗</li><li>Ruby Sass: ✗</li></ul><p>0%から100%の間の数値として$colorのHWB黒さを返します。</p><p>こちらも参照ください。</p><ul><li>色の赤チャンネルを取得するには color.red() を使用します。</li><li>色の緑チャネルを得るには color.green() を使用します。</li><li>color.hue() は、色の色相を取得します。</li><li>color.saturation() は、色の彩度を取得します。</li><li>color.lightness() は、色の明度を取得します。</li><li>color.whiteness() は、色の白色度を取得します。</li><li>color.alpha() は、色のアルファチャンネルを取得します。</li></ul><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> color.blackness(#e1d7d2); </span><span style="color:#6A737D;">// 11.7647058824%</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> color.blackness(white); </span><span style="color:#6A737D;">// 0%</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> color.blackness(black); </span><span style="color:#6A737D;">// 100%</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> color.blackness(#e1d7d2); </span><span style="color:#6A737D;">// 11.7647058824%</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> color.blackness(white); </span><span style="color:#6A737D;">// 0%</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> color.blackness(black); </span><span style="color:#6A737D;">// 100%</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">color.blue(</span><span style="color:#FFAB70;">$color</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">blue(</span><span style="color:#FFAB70;">$color</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">//=&gt; number</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">color.blue(</span><span style="color:#E36209;">$color</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">blue(</span><span style="color:#E36209;">$color</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">//=&gt; number</span></span></code></pre></div><p>color の青チャンネルを 0 から 255 までの数で返します。</p><p>こちらも参照ください。</p><ul><li>色の赤チャンネルを取得するには color.red() を使用します。</li><li>色の緑チャネルを得るには color.green() を使用します。</li><li>color.hue() は、色の色相を取得します。</li><li>color.saturation() は、色の彩度を取得します。</li><li>color.lightness() は、色の明度を取得します。</li><li>color.whiteness() は、色の白色度を取得します。</li><li>color.blackness() は、色の黒さを取得します。</li><li>color.alpha() は、色のアルファチャンネルを取得します。</li></ul><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> color.blue(#e1d7d2); </span><span style="color:#6A737D;">// 210</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> color.blue(white); </span><span style="color:#6A737D;">// 255</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> color.blue(black); </span><span style="color:#6A737D;">// 0</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> color.blue(#e1d7d2); </span><span style="color:#6A737D;">// 210</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> color.blue(white); </span><span style="color:#6A737D;">// 255</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> color.blue(black); </span><span style="color:#6A737D;">// 0</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">color.change(</span><span style="color:#FFAB70;">$color</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FFAB70;">$red</span><span style="color:#E1E4E8;">: null, </span><span style="color:#FFAB70;">$green</span><span style="color:#E1E4E8;">: null, </span><span style="color:#FFAB70;">$blue</span><span style="color:#E1E4E8;">: null,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FFAB70;">$hue</span><span style="color:#E1E4E8;">: null, </span><span style="color:#FFAB70;">$saturation</span><span style="color:#E1E4E8;">: null, </span><span style="color:#FFAB70;">$lightness</span><span style="color:#E1E4E8;">: null,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FFAB70;">$whiteness</span><span style="color:#E1E4E8;">: null, </span><span style="color:#FFAB70;">$blackness</span><span style="color:#E1E4E8;">: null,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FFAB70;">$alpha</span><span style="color:#E1E4E8;">: null)</span></span>
<span class="line"><span style="color:#79B8FF;">change-color</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">...</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">//=&gt; color</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">color.change(</span><span style="color:#E36209;">$color</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">$red</span><span style="color:#24292E;">: null, </span><span style="color:#E36209;">$green</span><span style="color:#24292E;">: null, </span><span style="color:#E36209;">$blue</span><span style="color:#24292E;">: null,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">$hue</span><span style="color:#24292E;">: null, </span><span style="color:#E36209;">$saturation</span><span style="color:#24292E;">: null, </span><span style="color:#E36209;">$lightness</span><span style="color:#24292E;">: null,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">$whiteness</span><span style="color:#24292E;">: null, </span><span style="color:#E36209;">$blackness</span><span style="color:#24292E;">: null,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">$alpha</span><span style="color:#24292E;">: null)</span></span>
<span class="line"><span style="color:#005CC5;">change-color</span><span style="color:#24292E;">(</span><span style="color:#E36209;">...</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">//=&gt; color</span></span></code></pre></div><p>互換性 ($whiteness and $blackness):</p><ul><li>Dart Sass: since 1.28.0</li><li>LibSass: ✗</li><li>Ruby Sass: ✗</li></ul><p>色の1つまたは複数のプロパティを新しい値に設定します。</p><p>各キーワード引数に渡された値を、色の対応するプロパティの代わりに使用し、 変更後の色を返します。RGB プロパティ (red、green、および blue) と HSL プロパティ (hue、$saturation、および lightness) を同時に指定したり、それらのいずれかと HWB プロパティ (hue、$whiteness、および $blackness) を同時に指定するとエラーになります。</p><p>オプションの引数は、すべて数字でなければなりません。red、green、blueの各引数は、単位を持たず、0から255の間（この値を含む）でなければなりません。hueは、単位がdegであるか、または単位なしである必要があります。saturation、lightness、whiteness、$blacknessは0%から100%の間でなければならず、無単位であってはな りません。alpha引数は、0から1（を含む）の間の単位なしである必要があります。</p><p>こちらも参照してください。</p><ul><li>色のプロパティを流動的に拡大縮小する color.scale()。</li><li>色のプロパティを固定値で調整する color.adjust()。</li></ul><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> color.change(#6b717f, </span><span style="color:#FFAB70;">$red</span><span style="color:#E1E4E8;">: 100); </span><span style="color:#6A737D;">// #64717f</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> color.change(#d2e1dd, </span><span style="color:#FFAB70;">$red</span><span style="color:#E1E4E8;">: 100, </span><span style="color:#FFAB70;">$blue</span><span style="color:#E1E4E8;">: 50); </span><span style="color:#6A737D;">// #64e132</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> color.change(#998099, </span><span style="color:#FFAB70;">$lightness</span><span style="color:#E1E4E8;">: 30%, </span><span style="color:#FFAB70;">$alpha</span><span style="color:#E1E4E8;">: 0.5); </span><span style="color:#6A737D;">// rgba(85, 68, 85, 0.5)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> color.change(#6b717f, </span><span style="color:#E36209;">$red</span><span style="color:#24292E;">: 100); </span><span style="color:#6A737D;">// #64717f</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> color.change(#d2e1dd, </span><span style="color:#E36209;">$red</span><span style="color:#24292E;">: 100, </span><span style="color:#E36209;">$blue</span><span style="color:#24292E;">: 50); </span><span style="color:#6A737D;">// #64e132</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> color.change(#998099, </span><span style="color:#E36209;">$lightness</span><span style="color:#24292E;">: 30%, </span><span style="color:#E36209;">$alpha</span><span style="color:#24292E;">: 0.5); </span><span style="color:#6A737D;">// rgba(85, 68, 85, 0.5)</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">color.complement(</span><span style="color:#FFAB70;">$color</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">complement(</span><span style="color:#FFAB70;">$color</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">//=&gt; color</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">color.complement(</span><span style="color:#E36209;">$color</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">complement(</span><span style="color:#E36209;">$color</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">//=&gt; color</span></span></code></pre></div><p>colorのRGB補数を返します。</p><p>これは color.adjust($color, $hue: 180deg) と同じです。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// Hue 222deg becomes 42deg.</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> color.complement(#6b717f); </span><span style="color:#6A737D;">// #7f796b</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// Hue 164deg becomes 344deg.</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> color.complement(#d2e1dd); </span><span style="color:#6A737D;">// #e1d2d6</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// Hue 210deg becomes 30deg.</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> color.complement(#036); </span><span style="color:#6A737D;">// #663300</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// Hue 222deg becomes 42deg.</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> color.complement(#6b717f); </span><span style="color:#6A737D;">// #7f796b</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// Hue 164deg becomes 344deg.</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> color.complement(#d2e1dd); </span><span style="color:#6A737D;">// #e1d2d6</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// Hue 210deg becomes 30deg.</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> color.complement(#036); </span><span style="color:#6A737D;">// #663300</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">darken(</span><span style="color:#FFAB70;">$color</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">$amount</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">//=&gt; color</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">darken(</span><span style="color:#E36209;">$color</span><span style="color:#24292E;">, </span><span style="color:#E36209;">$amount</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">//=&gt; color</span></span></code></pre></div><p>色を濃くします。</p><p>amountは0%から100%の間の数値でなければなりません（これを含む）。colorのHSL明度をその値だけ下げます。</p>`,99),b={class:"warning custom-block"},F=p("p",{class:"custom-block-title"},"WARNING",-1),A=p("p",null,"⚠️ Heads up!",-1),v=p("p",null,"darken()関数は、明るさを一定量減少させますが、これはしばしば望ましい効果ではありません。ある色をある割合で暗くするには、代わりに color.scale() を使用します。",-1),m={class:"katex"},D={class:"katex-mathml"},$=o('<span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.69444em;"></span><span class="strut bottom" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:0.01968em;">l</span><span class="mord mathit">i</span><span class="mord mathit" style="margin-right:0.03588em;">g</span><span class="mord mathit">h</span><span class="mord mathit">t</span><span class="mord mathit">n</span><span class="mord mathit">e</span><span class="mord mathit">s</span><span class="mord mathit">s</span><span class="mrel">:</span><span class="mord">−</span></span></span>',1),k=o(`<div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// #036は明度20%なので、darken()で30%減算しても黒が返ってくるだけです。</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> darken(#036, 30%); </span><span style="color:#6A737D;">// black</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// scale()の代わりに、元々あった色より30%暗くします。</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> color.scale(#036, </span><span style="color:#FFAB70;">$lightness</span><span style="color:#E1E4E8;">: -30%); </span><span style="color:#6A737D;">// #002447</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// #036は明度20%なので、darken()で30%減算しても黒が返ってくるだけです。</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> darken(#036, 30%); </span><span style="color:#6A737D;">// black</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// scale()の代わりに、元々あった色より30%暗くします。</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> color.scale(#036, </span><span style="color:#E36209;">$lightness</span><span style="color:#24292E;">: -30%); </span><span style="color:#6A737D;">// #002447</span></span></code></pre></div>`,1),q=o(`<div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// Lightness 92% becomes 72%.</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> darken(#b37399, 20%); </span><span style="color:#6A737D;">// #7c4465</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// Lightness 85% becomes 45%.</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> darken(#f2ece4, 40%); </span><span style="color:#6A737D;">// #b08b5a</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// Lightness 20% becomes 0%.</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> darken(#036, 30%); </span><span style="color:#6A737D;">// black</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// Lightness 92% becomes 72%.</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> darken(#b37399, 20%); </span><span style="color:#6A737D;">// #7c4465</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// Lightness 85% becomes 45%.</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> darken(#f2ece4, 40%); </span><span style="color:#6A737D;">// #b08b5a</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// Lightness 20% becomes 0%.</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> darken(#036, 30%); </span><span style="color:#6A737D;">// black</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">desaturate(</span><span style="color:#FFAB70;">$color</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">$amount</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">//=&gt; color</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">desaturate(</span><span style="color:#E36209;">$color</span><span style="color:#24292E;">, </span><span style="color:#E36209;">$amount</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">//=&gt; color</span></span></code></pre></div><p>色彩の彩度を低くします。</p><p>amountは0%から100%（を含む）の間の数値でなければなりません。その値だけ、$color の HSL 彩度を下げます。</p>`,5),C={class:"warning custom-block"},B=p("p",{class:"custom-block-title"},"WARNING",-1),x=p("p",null,"⚠️ Heads up!",-1),f=p("p",null,"desaturate() 関数は彩度を一定量下げるものですが、これは望ましい効果でないことがよくあります。ある色の彩度を一定量だけ下げるには、代わりに color.scale() を使用します。",-1),_={class:"katex"},w={class:"katex-mathml"},S=o('<span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.65952em;"></span><span class="strut bottom" style="height:0.74285em;vertical-align:-0.08333em;"></span><span class="base textstyle uncramped"><span class="mord mathit">s</span><span class="mord mathit">a</span><span class="mord mathit">t</span><span class="mord mathit">u</span><span class="mord mathit" style="margin-right:0.02778em;">r</span><span class="mord mathit">a</span><span class="mord mathit">t</span><span class="mord mathit">i</span><span class="mord mathit">o</span><span class="mord mathit">n</span><span class="mrel">:</span><span class="mord">−</span></span></span>',1),H=o(`<div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// #d2e1ddは彩度20%なので、desaturate()で30%減算してもグレーが返ってくるだけです。</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> desaturate(#d2e1dd, 30%); </span><span style="color:#6A737D;">// #dadada</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// scale()の代わりに、元々あった彩度より30%低い彩度にします。</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> color.scale(#6b717f, </span><span style="color:#FFAB70;">$saturation</span><span style="color:#E1E4E8;">: -30%); </span><span style="color:#6A737D;">// #6e727c</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// #d2e1ddは彩度20%なので、desaturate()で30%減算してもグレーが返ってくるだけです。</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> desaturate(#d2e1dd, 30%); </span><span style="color:#6A737D;">// #dadada</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// scale()の代わりに、元々あった彩度より30%低い彩度にします。</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> color.scale(#6b717f, </span><span style="color:#E36209;">$saturation</span><span style="color:#24292E;">: -30%); </span><span style="color:#6A737D;">// #6e727c</span></span></code></pre></div>`,1),R=o(`<div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// Saturation 100% becomes 80%.</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> desaturate(#036, 20%); </span><span style="color:#6A737D;">// #0a335c</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// Saturation 35% becomes 15%.</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> desaturate(#f2ece4, 20%); </span><span style="color:#6A737D;">// #eeebe8</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// Saturation 20% becomes 0%.</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> desaturate(#d2e1dd, 30%); </span><span style="color:#6A737D;">// #dadada</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// Saturation 100% becomes 80%.</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> desaturate(#036, 20%); </span><span style="color:#6A737D;">// #0a335c</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// Saturation 35% becomes 15%.</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> desaturate(#f2ece4, 20%); </span><span style="color:#6A737D;">// #eeebe8</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// Saturation 20% becomes 0%.</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> desaturate(#d2e1dd, 30%); </span><span style="color:#6A737D;">// #dadada</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">color.grayscale(</span><span style="color:#FFAB70;">$color</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">grayscale(</span><span style="color:#FFAB70;">$color</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">//=&gt; color</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">color.grayscale(</span><span style="color:#E36209;">$color</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">grayscale(</span><span style="color:#E36209;">$color</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">//=&gt; color</span></span></code></pre></div><p>color と同じ明度の灰色を返します。</p><p>これは color.change($color, $saturation: 0%) と同じです。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> color.grayscale(#6b717f); </span><span style="color:#6A737D;">// #757575</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> color.grayscale(#d2e1dd); </span><span style="color:#6A737D;">// #dadada</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> color.grayscale(#036); </span><span style="color:#6A737D;">// #333333</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> color.grayscale(#6b717f); </span><span style="color:#6A737D;">// #757575</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> color.grayscale(#d2e1dd); </span><span style="color:#6A737D;">// #dadada</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> color.grayscale(#036); </span><span style="color:#6A737D;">// #333333</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">color.green(</span><span style="color:#FFAB70;">$color</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">green(</span><span style="color:#FFAB70;">$color</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">//=&gt; number</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">color.green(</span><span style="color:#E36209;">$color</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">green(</span><span style="color:#E36209;">$color</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">//=&gt; number</span></span></code></pre></div><p>color の緑チャンネルを 0 から 255 までの数で返します。</p><p>こちらも参照ください。</p><ul><li>色の赤チャンネルを取得するには color.red() を使用します。</li><li>色の青チャンネルを得るには color.blue() を使用します。</li><li>color.hue() は色の色相を取得します。</li><li>color.saturation() は、色の彩度を取得します。</li><li>color.lightness() は、色の明度を取得します。</li><li>color.whiteness() は、色の白色度を取得します。</li><li>color.blackness() は、色の黒さを取得します。</li><li>color.alpha() は、色のアルファチャンネルを取得します。</li></ul><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> color.green(#e1d7d2); </span><span style="color:#6A737D;">// 215</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> color.green(white); </span><span style="color:#6A737D;">// 255</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> color.green(black); </span><span style="color:#6A737D;">// 0</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> color.green(#e1d7d2); </span><span style="color:#6A737D;">// 215</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> color.green(white); </span><span style="color:#6A737D;">// 255</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> color.green(black); </span><span style="color:#6A737D;">// 0</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">color.hue(</span><span style="color:#FFAB70;">$color</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">hue(</span><span style="color:#FFAB70;">$color</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">//=&gt; number</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">color.hue(</span><span style="color:#E36209;">$color</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">hue(</span><span style="color:#E36209;">$color</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">//=&gt; number</span></span></code></pre></div><p>color の色相を 0deg から 360deg の間の数値で返します。</p><p>こちらも参照ください。</p><ul><li>色の赤チャンネルを取得するには color.red() を使用します。</li><li>色の緑チャネルを得るには color.green() を使用します。</li><li>color.blue() は、色の青チャンネルを取得します。</li><li>color.saturation() は、色の彩度を取得します。</li><li>color.lightness() は、色の明度を取得します。</li><li>color.whiteness() は、色の白色度を取得します。</li><li>color.blackness() は、色の黒さを取得します。</li><li>color.alpha() は、色のアルファチャンネルを取得します。</li></ul><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> color.hue(#e1d7d2); </span><span style="color:#6A737D;">// 20deg</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> color.hue(#f2ece4); </span><span style="color:#6A737D;">// 34.2857142857deg</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> color.hue(#dadbdf); </span><span style="color:#6A737D;">// 228deg</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> color.hue(#e1d7d2); </span><span style="color:#6A737D;">// 20deg</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> color.hue(#f2ece4); </span><span style="color:#6A737D;">// 34.2857142857deg</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> color.hue(#dadbdf); </span><span style="color:#6A737D;">// 228deg</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">color.hwb(</span><span style="color:#FFAB70;">$hue</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">$whiteness</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">$blackness</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">color.hwb(</span><span style="color:#FFAB70;">$hue</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">$whiteness</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">$blackness</span><span style="color:#E1E4E8;"> / </span><span style="color:#FFAB70;">$alpha</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">color.hwb(</span><span style="color:#FFAB70;">$hue</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">$whiteness</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">$blackness</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">$alpha</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">//=&gt; color</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">color.hwb(</span><span style="color:#E36209;">$hue</span><span style="color:#24292E;"> </span><span style="color:#E36209;">$whiteness</span><span style="color:#24292E;"> </span><span style="color:#E36209;">$blackness</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">color.hwb(</span><span style="color:#E36209;">$hue</span><span style="color:#24292E;"> </span><span style="color:#E36209;">$whiteness</span><span style="color:#24292E;"> </span><span style="color:#E36209;">$blackness</span><span style="color:#24292E;"> / </span><span style="color:#E36209;">$alpha</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">color.hwb(</span><span style="color:#E36209;">$hue</span><span style="color:#24292E;">, </span><span style="color:#E36209;">$whiteness</span><span style="color:#24292E;">, </span><span style="color:#E36209;">$blackness</span><span style="color:#24292E;">, </span><span style="color:#E36209;">$alpha</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">//=&gt; color</span></span></code></pre></div><p>互換性:</p><ul><li>Dart Sass: since 1.28.0</li><li>LibSass: ✗</li><li>Ruby Sass: ✗</li></ul><p>与えられた色相、白さ、黒さ、および与えられたアルファチャンネルを持つ色を返します。</p><p>色相は 0deg から 360deg (この値を含む) の間の数値です。白色度および黒色度は、0% から 100% の間の数値です（この値を含む）。色相は無単位でもよいが、白さと黒さは単位を持たなければならない。アルファチャンネルは、0 から 1 の間の単位を持たない数値、または 0 から 100 の間のパーセントで指定することができます。</p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>⚠️ Heads up!</p><p>Sassのスラッシュで区切られた値の特別なパースルールは、 color.hwb($hue $whiteness $blackness / alpha) シグネチャを使うときにblackness や alpha の変数を渡すことを困難にしています。代わりに color.hwb(hue, $whiteness, $blackness, $alpha) を使うことを検討してください。</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">\`\`\`scss</span></span>
<span class="line"><span style="color:#e1e4e8;">@debug color.hwb(210, 0%, 60%); // #036</span></span>
<span class="line"><span style="color:#e1e4e8;">@debug color.hwb(34, 89%, 5%); // #f2ece4</span></span>
<span class="line"><span style="color:#e1e4e8;">@debug color.hwb(210 0% 60% / 0.5); // rgba(0, 51, 102, 0.5)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">\`\`\`scss</span></span>
<span class="line"><span style="color:#24292e;">@debug color.hwb(210, 0%, 60%); // #036</span></span>
<span class="line"><span style="color:#24292e;">@debug color.hwb(34, 89%, 5%); // #f2ece4</span></span>
<span class="line"><span style="color:#24292e;">@debug color.hwb(210 0% 60% / 0.5); // rgba(0, 51, 102, 0.5)</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">color.ie-hex-str(</span><span style="color:#FFAB70;">$color</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">ie-hex-str(</span><span style="color:#FFAB70;">$color</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">//=&gt; unquoted string</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">color.ie-hex-str(</span><span style="color:#E36209;">$color</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">ie-hex-str(</span><span style="color:#E36209;">$color</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">//=&gt; unquoted string</span></span></code></pre></div><p>Internet Explorerの-ms-filterプロパティで期待される#AARRGGBB形式の$colorを表す引用符なしの文字列を返します。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> color.ie-hex-str(#b37399); </span><span style="color:#6A737D;">// #FFB37399</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> color.ie-hex-str(#808c99); </span><span style="color:#6A737D;">// #FF808C99</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> color.ie-hex-str(rgba(242, 236, 228, 0.6)); </span><span style="color:#6A737D;">// #99F2ECE4</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> color.ie-hex-str(#b37399); </span><span style="color:#6A737D;">// #FFB37399</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> color.ie-hex-str(#808c99); </span><span style="color:#6A737D;">// #FF808C99</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> color.ie-hex-str(rgba(242, 236, 228, 0.6)); </span><span style="color:#6A737D;">// #99F2ECE4</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">color.invert(</span><span style="color:#FFAB70;">$color</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">$weight</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">100</span><span style="color:#F97583;">%</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#79B8FF;">invert</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">$color</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">$weight:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">100</span><span style="color:#F97583;">%</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">//=&gt; color</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">color.invert(</span><span style="color:#E36209;">$color</span><span style="color:#24292E;">, </span><span style="color:#E36209;">$weight</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">100</span><span style="color:#D73A49;">%</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#005CC5;">invert</span><span style="color:#24292E;">(</span><span style="color:#E36209;">$color</span><span style="color:#24292E;">, </span><span style="color:#E36209;">$weight:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">100</span><span style="color:#D73A49;">%</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">//=&gt; color</span></span></code></pre></div><p>color の逆数または負の値を返します。</p><p>重み付けは、0%から100% (この値を含む) の間の数値でなければなりません。重みが大きいと結果は負に近くなり、小さいと $color に近くなります。重み50%は常に#808080を生成します。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> color.invert(#b37399); </span><span style="color:#6A737D;">// #4c8c66</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> color.invert(black); </span><span style="color:#6A737D;">// white</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> color.invert(#550e0c, 20%); </span><span style="color:#6A737D;">// #663b3a</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> color.invert(#b37399); </span><span style="color:#6A737D;">// #4c8c66</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> color.invert(black); </span><span style="color:#6A737D;">// white</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> color.invert(#550e0c, 20%); </span><span style="color:#6A737D;">// #663b3a</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">lighten(</span><span style="color:#FFAB70;">$color</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">$amount</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">//=&gt; color</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">lighten(</span><span style="color:#E36209;">$color</span><span style="color:#24292E;">, </span><span style="color:#E36209;">$amount</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">//=&gt; color</span></span></code></pre></div><p>カラーを薄くします。</p><p>amountは0%から100%（を含む）の間の数値でなければなりません。その値だけ、$color の HSL 明度を増加させます。</p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>⚠️ Heads up!</p><p>lighten() 関数は、 明度を一定量だけ上げるものですが、これは望ましい効果ではないことがよくあります。ある色をある割合で明るくするには、代わりに scale() を使用します。</p><p>lighten() は通常、色を明るくする最良の方法ではないため、新しいモジュールシステムには直接含まれません。しかし、既存の挙動を維持する必要がある場合は、 lighten($color, amount) は adjust(color, $lightness: $amount) と書くことができます。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// #e1d7d2は明度85%なので、lighten()で30%追加しても白になるだけです。</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> lighten(#e1d7d2, 30%); </span><span style="color:#6A737D;">// white</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// scale()の代わりに、元々あったものより30%軽くします。</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> color.scale(#e1d7d2, </span><span style="color:#FFAB70;">$lightness</span><span style="color:#E1E4E8;">: 30%); </span><span style="color:#6A737D;">// #eae3e0</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// #e1d7d2は明度85%なので、lighten()で30%追加しても白になるだけです。</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> lighten(#e1d7d2, 30%); </span><span style="color:#6A737D;">// white</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// scale()の代わりに、元々あったものより30%軽くします。</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> color.scale(#e1d7d2, </span><span style="color:#E36209;">$lightness</span><span style="color:#24292E;">: 30%); </span><span style="color:#6A737D;">// #eae3e0</span></span></code></pre></div></div></div><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// Lightness 46% becomes 66%.</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> lighten(#6b717f, 20%); </span><span style="color:#6A737D;">// #a1a5af</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// Lightness 20% becomes 80%.</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> lighten(#036, 60%); </span><span style="color:#6A737D;">// #99ccff</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// Lightness 85% becomes 100%.</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> lighten(#e1d7d2, 30%); </span><span style="color:#6A737D;">// white</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// Lightness 46% becomes 66%.</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> lighten(#6b717f, 20%); </span><span style="color:#6A737D;">// #a1a5af</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// Lightness 20% becomes 80%.</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> lighten(#036, 60%); </span><span style="color:#6A737D;">// #99ccff</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// Lightness 85% becomes 100%.</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> lighten(#e1d7d2, 30%); </span><span style="color:#6A737D;">// white</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">color.lightness(</span><span style="color:#FFAB70;">$color</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">lightness(</span><span style="color:#FFAB70;">$color</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">//=&gt; number</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">color.lightness(</span><span style="color:#E36209;">$color</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">lightness(</span><span style="color:#E36209;">$color</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">//=&gt; number</span></span></code></pre></div><p>0%から100%の間の数値として$colorのHSL明度を返します。</p><p>See also:</p><ul><li>color.red() は、色の赤チャンネルを取得するためのものです。</li><li>color.green() は色の緑チャンネルを取得します。</li><li>color.blue() は色の青チャンネルを取得します。</li><li>color.hue() は色の色相を取得します。</li><li>color.saturation() は色の彩度を取得します。</li><li>color.whiteness() は色の白色度を取得します。</li><li>color.blackness() は色の黒さを取得します。</li><li>color.alpha() は、色のアルファチャンネルを取得します。</li></ul><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> color.lightness(#e1d7d2); </span><span style="color:#6A737D;">// 85.2941176471%</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> color.lightness(#f2ece4); </span><span style="color:#6A737D;">// 92.1568627451%</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> color.lightness(#dadbdf); </span><span style="color:#6A737D;">// 86.4705882353%</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> color.lightness(#e1d7d2); </span><span style="color:#6A737D;">// 85.2941176471%</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> color.lightness(#f2ece4); </span><span style="color:#6A737D;">// 92.1568627451%</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> color.lightness(#dadbdf); </span><span style="color:#6A737D;">// 86.4705882353%</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">color.mix(</span><span style="color:#FFAB70;">$color1</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">$color2</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">$weight</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">50</span><span style="color:#F97583;">%</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#79B8FF;">mix</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">$color1</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">$color2</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">$weight:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">50</span><span style="color:#F97583;">%</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">//=&gt; color</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">color.mix(</span><span style="color:#E36209;">$color1</span><span style="color:#24292E;">, </span><span style="color:#E36209;">$color2</span><span style="color:#24292E;">, </span><span style="color:#E36209;">$weight</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">50</span><span style="color:#D73A49;">%</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#005CC5;">mix</span><span style="color:#24292E;">(</span><span style="color:#E36209;">$color1</span><span style="color:#24292E;">, </span><span style="color:#E36209;">$color2</span><span style="color:#24292E;">, </span><span style="color:#E36209;">$weight:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">50</span><span style="color:#D73A49;">%</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">//=&gt; color</span></span></code></pre></div><p>color1 と $color2 を混ぜた色を返します。</p><p>各色の重みと相対的な不透明度の両方が、 結果に含まれる各色の量を決定します。重み付けは、0% から 100% (この値を含む) の間の数値でなければなりません。重みが大きければ大きいほど、$color1 を多く使うべきであり、小さければ小さいほど $color2 を多く使うべきであると示します。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> color.mix(#036, #d2e1dd); </span><span style="color:#6A737D;">// #698aa2</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> color.mix(#036, #d2e1dd, 75%); </span><span style="color:#6A737D;">// #355f84</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> color.mix(#036, #d2e1dd, 25%); </span><span style="color:#6A737D;">// #9eb6bf</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> color.mix(rgba(242, 236, 228, 0.5), #6b717f); </span><span style="color:#6A737D;">// rgba(141, 144, 152, 0.75)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> color.mix(#036, #d2e1dd); </span><span style="color:#6A737D;">// #698aa2</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> color.mix(#036, #d2e1dd, 75%); </span><span style="color:#6A737D;">// #355f84</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> color.mix(#036, #d2e1dd, 25%); </span><span style="color:#6A737D;">// #9eb6bf</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> color.mix(rgba(242, 236, 228, 0.5), #6b717f); </span><span style="color:#6A737D;">// rgba(141, 144, 152, 0.75)</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">opacify(</span><span style="color:#FFAB70;">$color</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">$amount</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">fade-in(</span><span style="color:#FFAB70;">$color</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">$amount</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">//=&gt; color</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">opacify(</span><span style="color:#E36209;">$color</span><span style="color:#24292E;">, </span><span style="color:#E36209;">$amount</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">fade-in(</span><span style="color:#E36209;">$color</span><span style="color:#24292E;">, </span><span style="color:#E36209;">$amount</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">//=&gt; color</span></span></code></pre></div><p>color をより不透明にします。</p><p>amount は、0 から 1 までの数字でなければなりません（この値を含む）。color のアルファチャンネルをその分増加させます。</p>`,41),N={class:"warning custom-block"},T=p("p",{class:"custom-block-title"},"WARNING",-1),L=p("p",null,"⚠️ Heads up!",-1),I=p("p",null,"opacify() 関数はアルファチャンネルを固定値で増加させますが、これは望ましい効果ではないことがよくあります。ある色を以前より一定割合だけ不透明にするには、代わりに scale() を使用します。",-1),j={class:"katex"},P={class:"katex-mathml"},V=o('<span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.69444em;"></span><span class="strut bottom" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathit">a</span><span class="mord mathit" style="margin-right:0.01968em;">l</span><span class="mord mathit">p</span><span class="mord mathit">h</span><span class="mord mathit">a</span><span class="mrel">:</span><span class="mord">−</span></span></span>',1),W=o(`<div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// rgba(#036, 0.7) はアルファ 0.7 なので、opacify() で 0.3 を加えると、完全に不透明な色が返されます。</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> opacify(rgba(#036, 0.7), 0.3); </span><span style="color:#6A737D;">// #036</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// scale() の代わりに、元々あったものより30%不透明化されます。</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> color.scale(rgba(#036, 0.7), </span><span style="color:#FFAB70;">$alpha</span><span style="color:#E1E4E8;">: 30%); </span><span style="color:#6A737D;">// rgba(0, 51, 102, 0.79)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// rgba(#036, 0.7) はアルファ 0.7 なので、opacify() で 0.3 を加えると、完全に不透明な色が返されます。</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> opacify(rgba(#036, 0.7), 0.3); </span><span style="color:#6A737D;">// #036</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// scale() の代わりに、元々あったものより30%不透明化されます。</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> color.scale(rgba(#036, 0.7), </span><span style="color:#E36209;">$alpha</span><span style="color:#24292E;">: 30%); </span><span style="color:#6A737D;">// rgba(0, 51, 102, 0.79)</span></span></code></pre></div>`,1),G=o(`<div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> opacify(rgba(#6b717f, 0.5), 0.2); </span><span style="color:#6A737D;">// rgba(107, 113, 127, 0.7)</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> fade-in(rgba(#e1d7d2, 0.5), 0.4); </span><span style="color:#6A737D;">// rgba(225, 215, 210, 0.9)</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> opacify(rgba(#036, 0.7), 0.3); </span><span style="color:#6A737D;">// #036</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> opacify(rgba(#6b717f, 0.5), 0.2); </span><span style="color:#6A737D;">// rgba(107, 113, 127, 0.7)</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> fade-in(rgba(#e1d7d2, 0.5), 0.4); </span><span style="color:#6A737D;">// rgba(225, 215, 210, 0.9)</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> opacify(rgba(#036, 0.7), 0.3); </span><span style="color:#6A737D;">// #036</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">color.red(</span><span style="color:#FFAB70;">$color</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">red(</span><span style="color:#FFAB70;">$color</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">//=&gt; number</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">color.red(</span><span style="color:#E36209;">$color</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">red(</span><span style="color:#E36209;">$color</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">//=&gt; number</span></span></code></pre></div><p>color の赤チャンネルを 0 から 255 までの数で返します。</p><p>こちらも参照ください。</p><ul><li>色の緑チャネルを取得するには color.green() を使用します。</li><li>色の青チャンネルを得るには color.blue() を使用します。</li><li>color.hue() は色の色相を取得します。</li><li>color.saturation() は、色の彩度を取得します。</li><li>color.lightness() は、色の明度を取得します。</li><li>color.whiteness() は、色の白色度を取得します。</li><li>color.blackness() は、色の黒さを取得します。</li><li>color.alpha() は、色のアルファチャンネルを取得します。</li></ul><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> color.red(#e1d7d2); </span><span style="color:#6A737D;">// 225</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> color.red(white); </span><span style="color:#6A737D;">// 255</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> color.red(black); </span><span style="color:#6A737D;">// 0</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> color.red(#e1d7d2); </span><span style="color:#6A737D;">// 225</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> color.red(white); </span><span style="color:#6A737D;">// 255</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> color.red(black); </span><span style="color:#6A737D;">// 0</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">saturate(</span><span style="color:#FFAB70;">$color</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">$amount</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">saturate(</span><span style="color:#FFAB70;">$color</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">$amount</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">//=&gt; color</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">saturate(</span><span style="color:#E36209;">$color</span><span style="color:#24292E;">, </span><span style="color:#E36209;">$amount</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">saturate(</span><span style="color:#E36209;">$color</span><span style="color:#24292E;">, </span><span style="color:#E36209;">$amount</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">//=&gt; color</span></span></code></pre></div><p>カラーをより飽和状態にします。</p><p>amountは0%から100%（を含む）の間の数値でなければなりません。その値だけ、$color の HSL 彩度を増加させます。</p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>⚠️ Heads up!</p><p>saturate()関数は、彩度を一定量上げるものですが、これはしばしば望ましい効果ではありません。ある色の彩度を以前より一定割合高くするには、代わりに scale() を使用します。</p><p>saturate() は通常、色をより飽和させる最良の方法ではないため、新しいモジュールシステムには直接含まれていません。しかし、既存の動作を維持しなければならない場合、 saturate($color, amount) は adjust(color, $saturation: $amount) と書くことができます。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// #0e4982は彩度80%なので、saturate()で30%を追加すると彩度100%になります。</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> saturate(#0e4982, 30%); </span><span style="color:#6A737D;">// #004990</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// scale()の代わりに、元々あった彩度より30%高い彩度にします。</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> color.scale(#0e4982, </span><span style="color:#FFAB70;">$saturation</span><span style="color:#E1E4E8;">: 30%); </span><span style="color:#6A737D;">// #0a4986</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// #0e4982は彩度80%なので、saturate()で30%を追加すると彩度100%になります。</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> saturate(#0e4982, 30%); </span><span style="color:#6A737D;">// #004990</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// scale()の代わりに、元々あった彩度より30%高い彩度にします。</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> color.scale(#0e4982, </span><span style="color:#E36209;">$saturation</span><span style="color:#24292E;">: 30%); </span><span style="color:#6A737D;">// #0a4986</span></span></code></pre></div></div><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// Saturation 50% becomes 70%.</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> saturate(#c69, 20%); </span><span style="color:#6A737D;">// #e05299</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// Saturation 35% becomes 85%.</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> desaturate(#f2ece4, 50%); </span><span style="color:#6A737D;">// #ebebeb</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// Saturation 80% becomes 100%.</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> saturate(#0e4982, 30%)  // #004990</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// Saturation 50% becomes 70%.</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> saturate(#c69, 20%); </span><span style="color:#6A737D;">// #e05299</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// Saturation 35% becomes 85%.</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> desaturate(#f2ece4, 50%); </span><span style="color:#6A737D;">// #ebebeb</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// Saturation 80% becomes 100%.</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> saturate(#0e4982, 30%)  // #004990</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">color.saturation(</span><span style="color:#FFAB70;">$color</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">saturation(</span><span style="color:#FFAB70;">$color</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">//=&gt; number</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">color.saturation(</span><span style="color:#E36209;">$color</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">saturation(</span><span style="color:#E36209;">$color</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">//=&gt; number</span></span></code></pre></div><p>color の HSL 彩度を 0% から 100% の間の数値で返します。</p><p>こちらも参照ください。</p><ul><li>色の赤チャンネルを取得するには color.red() を使用します。</li><li>色の緑チャネルを得るには color.green() を使用します。</li><li>color.blue() は、色の青チャンネルを取得します。</li><li>color.hue() は、色の色相を取得します。</li><li>color.lightness() は、色の明度を取得します。</li><li>color.whiteness() は、色の白色度を取得します。</li><li>color.blackness() は、色の黒さを取得します。</li><li>color.alpha() は、色のアルファチャンネルを取得します。</li></ul><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> color.saturation(#e1d7d2); </span><span style="color:#6A737D;">// 20%</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> color.saturation(#f2ece4); </span><span style="color:#6A737D;">// 30%</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> color.saturation(#dadbdf); </span><span style="color:#6A737D;">// 7.2463768116%</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> color.saturation(#e1d7d2); </span><span style="color:#6A737D;">// 20%</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> color.saturation(#f2ece4); </span><span style="color:#6A737D;">// 30%</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> color.saturation(#dadbdf); </span><span style="color:#6A737D;">// 7.2463768116%</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">color.scale(</span><span style="color:#FFAB70;">$color</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FFAB70;">$red</span><span style="color:#E1E4E8;">: null, </span><span style="color:#FFAB70;">$green</span><span style="color:#E1E4E8;">: null, </span><span style="color:#FFAB70;">$blue</span><span style="color:#E1E4E8;">: null,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FFAB70;">$saturation</span><span style="color:#E1E4E8;">: null, </span><span style="color:#FFAB70;">$lightness</span><span style="color:#E1E4E8;">: null,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FFAB70;">$whiteness</span><span style="color:#E1E4E8;">: null, </span><span style="color:#FFAB70;">$blackness</span><span style="color:#E1E4E8;">: null,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FFAB70;">$alpha</span><span style="color:#E1E4E8;">: null)</span></span>
<span class="line"><span style="color:#79B8FF;">scale-color</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">...</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">//=&gt; color</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">color.scale(</span><span style="color:#E36209;">$color</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">$red</span><span style="color:#24292E;">: null, </span><span style="color:#E36209;">$green</span><span style="color:#24292E;">: null, </span><span style="color:#E36209;">$blue</span><span style="color:#24292E;">: null,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">$saturation</span><span style="color:#24292E;">: null, </span><span style="color:#E36209;">$lightness</span><span style="color:#24292E;">: null,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">$whiteness</span><span style="color:#24292E;">: null, </span><span style="color:#E36209;">$blackness</span><span style="color:#24292E;">: null,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">$alpha</span><span style="color:#24292E;">: null)</span></span>
<span class="line"><span style="color:#005CC5;">scale-color</span><span style="color:#24292E;">(</span><span style="color:#E36209;">...</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">//=&gt; color</span></span></code></pre></div><p>互換性 ($whiteness and $blackness):</p><ul><li>Dart Sass: since 1.28.0</li><li>LibSass: ✗</li><li>Ruby Sass: ✗</li></ul><p>colorの1つまたは複数のプロパティを流動的にスケーリングします。</p><p>各キーワード引数は、-100% から 100% (これを含む) の間の数値でなければなりません。これは、対応するプロパティを元の位置から最大値 (引数が正の場合) または最小値 (引数が負の場合) に向かってどれだけ移動させるべきかを表します。これは、例えば$lightness: 50%は、すべての色を完全に白にすることなく、50%最大の明るさに近づけることを意味します。</p><p>RGBプロパティ（red、green、blue）とHSLプロパティ（saturation、lightness）、またはそれらのいずれかとHWBプロパティ（whiteness、$blackness）を同時に指定することはエラーとなります。</p><p>こちらもご覧ください。</p><ul><li>色のプロパティを一定量だけ変化させる color.adjust() も参照してください。</li><li>色のプロパティを設定する color.change()。</li></ul><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> color.scale(#6b717f, </span><span style="color:#FFAB70;">$red</span><span style="color:#E1E4E8;">: 15%); </span><span style="color:#6A737D;">// #81717f</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> color.scale(#d2e1dd, </span><span style="color:#FFAB70;">$lightness</span><span style="color:#E1E4E8;">: -10%, </span><span style="color:#FFAB70;">$saturation</span><span style="color:#E1E4E8;">: 10%); </span><span style="color:#6A737D;">// #b3d4cb</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> color.scale(#998099, </span><span style="color:#FFAB70;">$alpha</span><span style="color:#E1E4E8;">: -40%); </span><span style="color:#6A737D;">// rgba(153, 128, 153, 0.6)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> color.scale(#6b717f, </span><span style="color:#E36209;">$red</span><span style="color:#24292E;">: 15%); </span><span style="color:#6A737D;">// #81717f</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> color.scale(#d2e1dd, </span><span style="color:#E36209;">$lightness</span><span style="color:#24292E;">: -10%, </span><span style="color:#E36209;">$saturation</span><span style="color:#24292E;">: 10%); </span><span style="color:#6A737D;">// #b3d4cb</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> color.scale(#998099, </span><span style="color:#E36209;">$alpha</span><span style="color:#24292E;">: -40%); </span><span style="color:#6A737D;">// rgba(153, 128, 153, 0.6)</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">transparentize(</span><span style="color:#FFAB70;">$color</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">$amount</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">fade-out(</span><span style="color:#FFAB70;">$color</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">$amount</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">//=&gt; color</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">transparentize(</span><span style="color:#E36209;">$color</span><span style="color:#24292E;">, </span><span style="color:#E36209;">$amount</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">fade-out(</span><span style="color:#E36209;">$color</span><span style="color:#24292E;">, </span><span style="color:#E36209;">$amount</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">//=&gt; color</span></span></code></pre></div><p>カラーをより透明にします。</p><p>amount は、0 から 1 までの数字でなければなりません（この値を含む）。color のアルファチャンネルをその値だけ減らします。</p>`,33),z={class:"warning custom-block"},U=p("p",{class:"custom-block-title"},"WARNING",-1),M=p("p",null,"⚠️ Heads up!",-1),X=p("p",null,"transparentize() 関数はアルファチャンネルを固定量だけ減少させますが、これはしばしば望ましい効果ではありません。ある色を以前より一定割合だけ透明にするには、代わりに color.scale() を使用します。",-1),Z={class:"katex"},J={class:"katex-mathml"},O=o('<span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.69444em;"></span><span class="strut bottom" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathit">a</span><span class="mord mathit" style="margin-right:0.01968em;">l</span><span class="mord mathit">p</span><span class="mord mathit">h</span><span class="mord mathit">a</span><span class="mrel">:</span><span class="mord">−</span></span></span>',1),Y=o(`<div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// rgba(#036, 0.3) はアルファ 0.3 なので、transparentize() で 0.3 を引くと完全に透明な色が返されます。</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> transparentize(rgba(#036, 0.3), 0.3); </span><span style="color:#6A737D;">// rgba(0, 51, 102, 0)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// scale()は、その代わりに、元々あったものより30％透明度を高くします。</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> color.scale(rgba(#036, 0.3), </span><span style="color:#FFAB70;">$alpha</span><span style="color:#E1E4E8;">: -30%); </span><span style="color:#6A737D;">// rgba(0, 51, 102, 0.21)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// rgba(#036, 0.3) はアルファ 0.3 なので、transparentize() で 0.3 を引くと完全に透明な色が返されます。</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> transparentize(rgba(#036, 0.3), 0.3); </span><span style="color:#6A737D;">// rgba(0, 51, 102, 0)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// scale()は、その代わりに、元々あったものより30％透明度を高くします。</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> color.scale(rgba(#036, 0.3), </span><span style="color:#E36209;">$alpha</span><span style="color:#24292E;">: -30%); </span><span style="color:#6A737D;">// rgba(0, 51, 102, 0.21)</span></span></code></pre></div>`,1),K=o(`<div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> transparentize(rgba(#6b717f, 0.5), 0.2)  // rgba(107, 113, 127, 0.3)</span></span>
<span class="line"><span style="color:#E1E4E8;">@debug fade-out(rgba(#e1d7d2, 0.5), 0.4)  // rgba(225, 215, 210, 0.1)</span></span>
<span class="line"><span style="color:#E1E4E8;">@debug transparentize(rgba(#036, 0.3), 0.3)  // rgba(0, 51, 102, 0)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> transparentize(rgba(#6b717f, 0.5), 0.2)  // rgba(107, 113, 127, 0.3)</span></span>
<span class="line"><span style="color:#24292E;">@debug fade-out(rgba(#e1d7d2, 0.5), 0.4)  // rgba(225, 215, 210, 0.1)</span></span>
<span class="line"><span style="color:#24292E;">@debug transparentize(rgba(#036, 0.3), 0.3)  // rgba(0, 51, 102, 0)</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">color.whiteness(</span><span style="color:#FFAB70;">$color</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">//=&gt; number </span></span>
<span class="line"><span style="color:#E1E4E8;">互換性:</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">color.whiteness(</span><span style="color:#E36209;">$color</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">//=&gt; number </span></span>
<span class="line"><span style="color:#24292E;">互換性:</span></span></code></pre></div><ul><li>Dart Sass: since 1.28.0</li><li>LibSass: ✗</li><li>Ruby Sass: ✗</li></ul><p>color の HWB 白色度を 0% から 100% の間の数値で返します。</p><p>こちらも参照ください。</p><ul><li>color.red() は、色の赤チャンネルを取得するためのものです。</li><li>color.green() は、色の緑チャンネルを取得します。</li><li>color.hue() は、色の色相を取得します。</li><li>color.saturation() は、色の彩度を取得します。</li><li>color.lightness() は、色の明度を取得します。</li><li>color.blackness() は、色の黒さを取得します。</li><li>color.alpha() は、色のアルファチャンネルを取得します。</li></ul><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> color.whiteness(#e1d7d2); </span><span style="color:#6A737D;">// 82.3529411765%</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> color.whiteness(white); </span><span style="color:#6A737D;">// 100%</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> color.whiteness(black); </span><span style="color:#6A737D;">// 0%</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> color.whiteness(#e1d7d2); </span><span style="color:#6A737D;">// 82.3529411765%</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> color.whiteness(white); </span><span style="color:#6A737D;">// 100%</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> color.whiteness(black); </span><span style="color:#6A737D;">// 0%</span></span></code></pre></div><h2 id="sass-list" tabindex="-1">sass:list <a class="header-anchor" href="#sass-list" aria-label="Permalink to &quot;sass:list&quot;">​</a></h2><p>互換性:</p><ul><li>Dart Sass: since 1.23.0</li><li>LibSass: ✗</li><li>Ruby Sass: ✗</li><li>▶</li></ul><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>💡 Fun fact:</p><p>Sass では、すべてのマップは、各キー/バリュー・ペアの 2 要素リストを含むリストとしてカウントされます。例えば、(1: 2, 3: 4) は (1 2, 3 4) とカウントされます。ですから、これらの関数はすべてマップに対しても有効です。</p><p>個々の値もリストとしてカウントされます。これらの関数はすべて、1pxを値1pxを含むリストとして扱います。</p></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">list.append(</span><span style="color:#FFAB70;">$list</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">$val</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">$separator</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">auto</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#79B8FF;">append</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">$list</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">$val</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">$separator:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">auto</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">//=&gt; list</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">list.append(</span><span style="color:#E36209;">$list</span><span style="color:#24292E;">, </span><span style="color:#E36209;">$val</span><span style="color:#24292E;">, </span><span style="color:#E36209;">$separator</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">auto</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#005CC5;">append</span><span style="color:#24292E;">(</span><span style="color:#E36209;">$list</span><span style="color:#24292E;">, </span><span style="color:#E36209;">$val</span><span style="color:#24292E;">, </span><span style="color:#E36209;">$separator:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">auto</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">//=&gt; list</span></span></code></pre></div><p>listのコピーに$valを末尾に追加したものを返します。</p><p>separator がカンマ、スペース、スラッシュの場合、返すリストはそれぞれカンマ区切り、スペース区切り、スラッシュ区切りとなります。auto (デフォルト) の場合は、list と同じ区切り文字を使用します (list に区切り文字がない場合は空白を使用します)。それ以外の値は許されません。</p><p>list.join()とは異なり、$valがリストの場合は、 そのすべての要素が返されるリストに追加されるのではなく、 返されるリストの中にネストされることに注意しましょう。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> list.append(10px 20px, 30px); </span><span style="color:#6A737D;">// 10px 20px 30px</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> list.append((blue, red), green); </span><span style="color:#6A737D;">// blue, red, green</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> list.append(10px 20px, 30px 40px); </span><span style="color:#6A737D;">// 10px 20px (30px 40px)</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> list.append(10px, 20px, </span><span style="color:#FFAB70;">$separator</span><span style="color:#E1E4E8;">: comma); </span><span style="color:#6A737D;">// 10px, 20px</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> list.append((blue, red), green, </span><span style="color:#FFAB70;">$separator</span><span style="color:#E1E4E8;">: space); </span><span style="color:#6A737D;">// blue red green</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> list.append(10px 20px, 30px); </span><span style="color:#6A737D;">// 10px 20px 30px</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> list.append((blue, red), green); </span><span style="color:#6A737D;">// blue, red, green</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> list.append(10px 20px, 30px 40px); </span><span style="color:#6A737D;">// 10px 20px (30px 40px)</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> list.append(10px, 20px, </span><span style="color:#E36209;">$separator</span><span style="color:#24292E;">: comma); </span><span style="color:#6A737D;">// 10px, 20px</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> list.append((blue, red), green, </span><span style="color:#E36209;">$separator</span><span style="color:#24292E;">: space); </span><span style="color:#6A737D;">// blue red green</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">list.index(</span><span style="color:#FFAB70;">$list</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">$value</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">index(</span><span style="color:#FFAB70;">$list</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">$value</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">//=&gt; number | null</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">list.index(</span><span style="color:#E36209;">$list</span><span style="color:#24292E;">, </span><span style="color:#E36209;">$value</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">index(</span><span style="color:#E36209;">$list</span><span style="color:#24292E;">, </span><span style="color:#E36209;">$value</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">//=&gt; number | null</span></span></code></pre></div><p>リスト内の$valueのインデックスを返します。</p><p>値がlist内に存在しない場合、これはnullを返します。値がlist内に複数回出現する場合、これは、その最初の出現のインデックスを返します。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> list.index(1px solid red, 1px); </span><span style="color:#6A737D;">// 1</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> list.index(1px solid red, solid); </span><span style="color:#6A737D;">// 2</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> list.index(1px solid red, dashed); </span><span style="color:#6A737D;">// null</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> list.index(1px solid red, 1px); </span><span style="color:#6A737D;">// 1</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> list.index(1px solid red, solid); </span><span style="color:#6A737D;">// 2</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> list.index(1px solid red, dashed); </span><span style="color:#6A737D;">// null</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">list.is-bracketed(</span><span style="color:#FFAB70;">$list</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">is-bracketed(</span><span style="color:#FFAB70;">$list</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">//=&gt; boolean</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">list.is-bracketed(</span><span style="color:#E36209;">$list</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">is-bracketed(</span><span style="color:#E36209;">$list</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">//=&gt; boolean</span></span></code></pre></div><p>リストが角括弧を持つかどうかを返します。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> list.is-bracketed(1px 2px 3px); </span><span style="color:#6A737D;">// false</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> list.is-bracketed([1px, 2px, 3px]); </span><span style="color:#6A737D;">// true</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> list.is-bracketed(1px 2px 3px); </span><span style="color:#6A737D;">// false</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> list.is-bracketed([1px, 2px, 3px]); </span><span style="color:#6A737D;">// true</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">list.join(</span><span style="color:#FFAB70;">$list1</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">$list2</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">$separator</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">auto</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">$bracketed</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">auto</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#79B8FF;">join</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">$list1</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">$list2</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">$separator:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">auto</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">$bracketed:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">auto</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">//=&gt; list</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">list.join(</span><span style="color:#E36209;">$list1</span><span style="color:#24292E;">, </span><span style="color:#E36209;">$list2</span><span style="color:#24292E;">, </span><span style="color:#E36209;">$separator</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">auto</span><span style="color:#24292E;">, </span><span style="color:#E36209;">$bracketed</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">auto</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#005CC5;">join</span><span style="color:#24292E;">(</span><span style="color:#E36209;">$list1</span><span style="color:#24292E;">, </span><span style="color:#E36209;">$list2</span><span style="color:#24292E;">, </span><span style="color:#E36209;">$separator:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">auto</span><span style="color:#24292E;">, </span><span style="color:#E36209;">$bracketed:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">auto</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">//=&gt; list</span></span></code></pre></div><p>list1の要素に続いて$list2の要素を含む新しいリストを返します。</p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>⚠️ Heads up!</p><p>個々の値は単一要素のリストとしてカウントされるので、 list.join() を使ってリストの末尾に値を追加することが可能です。しかし、これは推奨されません。なぜなら、その値がリストである場合、連結されてしまうため、おそらくあなたが期待しているものとは異なるからです。</p><p>代わりに list.append() を使用して、リストにひとつの値を追加します。list.join() は、ふたつのリストをひとつにまとめるときだけ使用します。 separator がカンマ、スペース、スラッシュの場合は、それぞれカンマ区切り、スペース区切り、スラッシュ区切りのリストが返されます。auto (デフォルト) の場合、返されるリストは、list1 がセパレータを持つ場合はそれと同じセパレータを使い、list2 がセパレータを持つ場合はそれ以外のものを使い、$space の場合はそれ以外のものを用います。それ以外の値は許されません。</p></div><p>bracketedがauto(デフォルト)の場合、list1が括弧付きであれば、返されるリストも括弧付きになります。それ以外の場合は、bracketed が真であれば角括弧が付き、$bracketed が偽であれば括弧が付きません。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> list.join(10px 20px, 30px 40px); </span><span style="color:#6A737D;">// 10px 20px 30px 40px</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> list.join((blue, red), (#abc, #def)); </span><span style="color:#6A737D;">// blue, red, #abc, #def</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> list.join(10px, 20px); </span><span style="color:#6A737D;">// 10px 20px</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> list.join(10px, 20px, </span><span style="color:#FFAB70;">$separator</span><span style="color:#E1E4E8;">: comma); </span><span style="color:#6A737D;">// 10px, 20px</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> list.join((blue, red), (#abc, #def), </span><span style="color:#FFAB70;">$separator</span><span style="color:#E1E4E8;">: space); </span><span style="color:#6A737D;">// blue red #abc #def</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> list.join([10px], 20px); </span><span style="color:#6A737D;">// [10px 20px]</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> list.join(10px, 20px, </span><span style="color:#FFAB70;">$bracketed</span><span style="color:#E1E4E8;">: true); </span><span style="color:#6A737D;">// [10px 20px]</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> list.join(10px 20px, 30px 40px); </span><span style="color:#6A737D;">// 10px 20px 30px 40px</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> list.join((blue, red), (#abc, #def)); </span><span style="color:#6A737D;">// blue, red, #abc, #def</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> list.join(10px, 20px); </span><span style="color:#6A737D;">// 10px 20px</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> list.join(10px, 20px, </span><span style="color:#E36209;">$separator</span><span style="color:#24292E;">: comma); </span><span style="color:#6A737D;">// 10px, 20px</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> list.join((blue, red), (#abc, #def), </span><span style="color:#E36209;">$separator</span><span style="color:#24292E;">: space); </span><span style="color:#6A737D;">// blue red #abc #def</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> list.join([10px], 20px); </span><span style="color:#6A737D;">// [10px 20px]</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> list.join(10px, 20px, </span><span style="color:#E36209;">$bracketed</span><span style="color:#24292E;">: true); </span><span style="color:#6A737D;">// [10px 20px]</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">list.length(</span><span style="color:#FFAB70;">$list</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">length(</span><span style="color:#FFAB70;">$list</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">//=&gt; number</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">list.length(</span><span style="color:#E36209;">$list</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">length(</span><span style="color:#E36209;">$list</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">//=&gt; number</span></span></code></pre></div><p>listの長さを返します。</p><p>これは、マップ内のペアの数を返すこともできます。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> list.length(10px); </span><span style="color:#6A737D;">// 1</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> list.length(10px 20px 30px); </span><span style="color:#6A737D;">// 3</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> list.length((width: 10px, height: 20px)); </span><span style="color:#6A737D;">// 2</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> list.length(10px); </span><span style="color:#6A737D;">// 1</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> list.length(10px 20px 30px); </span><span style="color:#6A737D;">// 3</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> list.length((width: 10px, height: 20px)); </span><span style="color:#6A737D;">// 2</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">list.separator(</span><span style="color:#FFAB70;">$list</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">list-separator(</span><span style="color:#FFAB70;">$list</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">//=&gt; unquoted string</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">list.separator(</span><span style="color:#E36209;">$list</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">list-separator(</span><span style="color:#E36209;">$list</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">//=&gt; unquoted string</span></span></code></pre></div><p>listが使用するセパレータの名前（スペース、カンマ、スラッシュのいずれか）を返します。</p><p>もし$listがセパレータを持たない場合、スペースを返します。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> list.separator(1px 2px 3px); </span><span style="color:#6A737D;">// space</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> list.separator(1px, 2px, 3px); </span><span style="color:#6A737D;">// comma</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> list.separator(</span><span style="color:#9ECBFF;">&#39;Helvetica&#39;</span><span style="color:#E1E4E8;">); </span><span style="color:#6A737D;">// space</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> list.separator(()); </span><span style="color:#6A737D;">// space</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> list.separator(1px 2px 3px); </span><span style="color:#6A737D;">// space</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> list.separator(1px, 2px, 3px); </span><span style="color:#6A737D;">// comma</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> list.separator(</span><span style="color:#032F62;">&#39;Helvetica&#39;</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">// space</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> list.separator(()); </span><span style="color:#6A737D;">// space</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">list.nth(</span><span style="color:#FFAB70;">$list</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">$n</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">nth(</span><span style="color:#FFAB70;">$list</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">$n</span><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">list.nth(</span><span style="color:#E36209;">$list</span><span style="color:#24292E;">, </span><span style="color:#E36209;">$n</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">nth(</span><span style="color:#E36209;">$list</span><span style="color:#24292E;">, </span><span style="color:#E36209;">$n</span><span style="color:#24292E;">)</span></span></code></pre></div><p>listのインデックス$nにある要素を返します。</p><p>nが負の場合は、listの末尾から数えます。インデックスnに要素がない場合は、エラーをスローします。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> list.nth(10px 12px 16px, 2); </span><span style="color:#6A737D;">// 12px</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> list.nth([line1, line2, line3], -1); </span><span style="color:#6A737D;">// line3</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> list.nth(10px 12px 16px, 2); </span><span style="color:#6A737D;">// 12px</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> list.nth([line1, line2, line3], -1); </span><span style="color:#6A737D;">// line3</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">list.set-nth(</span><span style="color:#FFAB70;">$list</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">$n</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">$value</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">set-nth(</span><span style="color:#FFAB70;">$list</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">$n</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">$value</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">//=&gt; list</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">list.set-nth(</span><span style="color:#E36209;">$list</span><span style="color:#24292E;">, </span><span style="color:#E36209;">$n</span><span style="color:#24292E;">, </span><span style="color:#E36209;">$value</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">set-nth(</span><span style="color:#E36209;">$list</span><span style="color:#24292E;">, </span><span style="color:#E36209;">$n</span><span style="color:#24292E;">, </span><span style="color:#E36209;">$value</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">//=&gt; list</span></span></code></pre></div><p>インデックスnの要素をvalueに置き換えた$listのコピーを返します。</p><p>nが負の場合は、listの末尾から数えます。インデックスnに要素が存在しない場合は、エラーをスローします。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> list.set-nth(10px 20px 30px, 1, 2em); </span><span style="color:#6A737D;">// 2em 20px 30px</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> list.set-nth(10px 20px 30px, -1, 8em); </span><span style="color:#6A737D;">// 10px, 20px, 8em</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> list.set-nth((Helvetica, Arial, sans-serif), 3, Roboto); </span><span style="color:#6A737D;">// Helvetica, Arial, Roboto</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> list.set-nth(10px 20px 30px, 1, 2em); </span><span style="color:#6A737D;">// 2em 20px 30px</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> list.set-nth(10px 20px 30px, -1, 8em); </span><span style="color:#6A737D;">// 10px, 20px, 8em</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> list.set-nth((Helvetica, Arial, sans-serif), 3, Roboto); </span><span style="color:#6A737D;">// Helvetica, Arial, Roboto</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">list.slash(</span><span style="color:#FFAB70;">$elements</span><span style="color:#E1E4E8;">...) </span><span style="color:#6A737D;">//=&gt; list</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">list.slash(</span><span style="color:#E36209;">$elements</span><span style="color:#24292E;">...) </span><span style="color:#6A737D;">//=&gt; list</span></span></code></pre></div><p>要素を含む、スラッシュで区切られたリストを返します。</p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>⚠️ Heads up!</p><p>この関数は、スラッシュで区切られたリストを作成するための一時的な解決策です。最終的には、1px / 2px / solid のように文字通りスラッシュで記述することになりますが、当面はスラッシュは分割のために使用されるので、古い構文が削除されるまで Sass は新しい構文のためにスラッシュを使用することはできません。</p></div><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> list.slash(1px, 50px, 100px); </span><span style="color:#6A737D;">// 1px / 50px / 100px</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> list.slash(1px, 50px, 100px); </span><span style="color:#6A737D;">// 1px / 50px / 100px</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">list.zip(</span><span style="color:#FFAB70;">$lists</span><span style="color:#E1E4E8;">...)</span></span>
<span class="line"><span style="color:#E1E4E8;">zip(</span><span style="color:#FFAB70;">$lists</span><span style="color:#E1E4E8;">...) </span><span style="color:#6A737D;">//=&gt; list</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">list.zip(</span><span style="color:#E36209;">$lists</span><span style="color:#24292E;">...)</span></span>
<span class="line"><span style="color:#24292E;">zip(</span><span style="color:#E36209;">$lists</span><span style="color:#24292E;">...) </span><span style="color:#6A737D;">//=&gt; list</span></span></code></pre></div><p>lists に含まれるすべてのリストを、1つのサブリストにまとめます。</p><p>返されたリストの各要素は、lists のその位置のすべての要素を含みます。返されるリストの長さは、lists の中で最も短いリストと同じです。</p><p>返されるリストは常にカンマで区切られ、サブリストは常にスペースで区切られます。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> list.zip(10px 50px 100px, short mid long); </span><span style="color:#6A737D;">// 10px short, 50px mid, 100px long</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> list.zip(10px 50px 100px, short mid); </span><span style="color:#6A737D;">// 10px short, 50px mid</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> list.zip(10px 50px 100px, short mid long); </span><span style="color:#6A737D;">// 10px short, 50px mid, 100px long</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> list.zip(10px 50px 100px, short mid); </span><span style="color:#6A737D;">// 10px short, 50px mid</span></span></code></pre></div><h2 id="sass-map" tabindex="-1">sass:map <a class="header-anchor" href="#sass-map" aria-label="Permalink to &quot;sass:map&quot;">​</a></h2><p>互換性:</p><ul><li>Dart Sass: since 1.23.0</li><li>LibSass: ✗</li><li>Ruby Sass: ✗</li><li>▶</li></ul><p>:::</p><p>💡 Fun fact:</p><p>Sassライブラリやデザインシステムは、ネストされたマップ（マップを含むマップを含むマップ）として表現される設定を共有し、上書きする傾向があります。</p><p>ネストされたマップを操作しやすくするために、いくつかのマップ関数は深い操作をサポートしています。例えば、複数のキーを map.get() に渡すと、それらのキーを辿って目的のネストされたマップを見つけます。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#FFAB70;">$config</span><span style="color:#E1E4E8;">: (</span><span style="color:#79B8FF;">a</span><span style="color:#E1E4E8;">: (</span><span style="color:#79B8FF;">b</span><span style="color:#E1E4E8;">: (</span><span style="color:#79B8FF;">c</span><span style="color:#E1E4E8;">: d)));</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> map.get(</span><span style="color:#FFAB70;">$config</span><span style="color:#E1E4E8;">, a, b, c); </span><span style="color:#6A737D;">// d</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#E36209;">$config</span><span style="color:#24292E;">: (</span><span style="color:#005CC5;">a</span><span style="color:#24292E;">: (</span><span style="color:#005CC5;">b</span><span style="color:#24292E;">: (</span><span style="color:#005CC5;">c</span><span style="color:#24292E;">: d)));</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> map.get(</span><span style="color:#E36209;">$config</span><span style="color:#24292E;">, a, b, c); </span><span style="color:#6A737D;">// d</span></span></code></pre></div><p>:::</p><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#85E89D;">map</span><span style="color:#E1E4E8;">.deep-merge(</span><span style="color:#FFAB70;">$map1</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">$map2</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">//=&gt; map</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#22863A;">map</span><span style="color:#24292E;">.deep-merge(</span><span style="color:#E36209;">$map1</span><span style="color:#24292E;">, </span><span style="color:#E36209;">$map2</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">//=&gt; map</span></span></code></pre></div><p>互換性:</p><ul><li>Dart Sass: since 1.27.0</li><li>LibSass: ✗</li><li>Ruby Sass: ✗</li></ul><p>map.merge()と同じ。ただし、ネストしたマップの値も再帰的にマージされる。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#FFAB70;">$helvetica-light</span><span style="color:#E1E4E8;">: (</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">&quot;weights&quot;</span><span style="color:#E1E4E8;">: (</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;lightest&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">100</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;light&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">300</span></span>
<span class="line"><span style="color:#E1E4E8;">  )</span></span>
<span class="line"><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#FFAB70;">$helvetica-heavy</span><span style="color:#E1E4E8;">: (</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">&quot;weights&quot;</span><span style="color:#E1E4E8;">: (</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;medium&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">500</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;bold&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">700</span></span>
<span class="line"><span style="color:#E1E4E8;">  )</span></span>
<span class="line"><span style="color:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> map.deep-merge(</span><span style="color:#FFAB70;">$helvetica-light</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">$helvetica-heavy</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#6A737D;">// (</span></span>
<span class="line"><span style="color:#6A737D;">//   &quot;weights&quot;: (</span></span>
<span class="line"><span style="color:#6A737D;">//     &quot;lightest&quot;: 100,</span></span>
<span class="line"><span style="color:#6A737D;">//     &quot;light&quot;: 300,</span></span>
<span class="line"><span style="color:#6A737D;">//     &quot;medium&quot;: 500,</span></span>
<span class="line"><span style="color:#6A737D;">//     &quot;bold&quot;: 700</span></span>
<span class="line"><span style="color:#6A737D;">//   )</span></span>
<span class="line"><span style="color:#6A737D;">// )</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> map.merge(</span><span style="color:#FFAB70;">$helvetica-light</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">$helvetica-heavy</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#6A737D;">// (</span></span>
<span class="line"><span style="color:#6A737D;">//   &quot;weights&quot;: (</span></span>
<span class="line"><span style="color:#6A737D;">//     &quot;medium: 500,</span></span>
<span class="line"><span style="color:#6A737D;">//     &quot;bold&quot;: 700</span></span>
<span class="line"><span style="color:#6A737D;">//   )</span></span>
<span class="line"><span style="color:#6A737D;">// )</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#E36209;">$helvetica-light</span><span style="color:#24292E;">: (</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">&quot;weights&quot;</span><span style="color:#24292E;">: (</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;lightest&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">100</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;light&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">300</span></span>
<span class="line"><span style="color:#24292E;">  )</span></span>
<span class="line"><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#E36209;">$helvetica-heavy</span><span style="color:#24292E;">: (</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">&quot;weights&quot;</span><span style="color:#24292E;">: (</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;medium&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">500</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;bold&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">700</span></span>
<span class="line"><span style="color:#24292E;">  )</span></span>
<span class="line"><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> map.deep-merge(</span><span style="color:#E36209;">$helvetica-light</span><span style="color:#24292E;">, </span><span style="color:#E36209;">$helvetica-heavy</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#6A737D;">// (</span></span>
<span class="line"><span style="color:#6A737D;">//   &quot;weights&quot;: (</span></span>
<span class="line"><span style="color:#6A737D;">//     &quot;lightest&quot;: 100,</span></span>
<span class="line"><span style="color:#6A737D;">//     &quot;light&quot;: 300,</span></span>
<span class="line"><span style="color:#6A737D;">//     &quot;medium&quot;: 500,</span></span>
<span class="line"><span style="color:#6A737D;">//     &quot;bold&quot;: 700</span></span>
<span class="line"><span style="color:#6A737D;">//   )</span></span>
<span class="line"><span style="color:#6A737D;">// )</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> map.merge(</span><span style="color:#E36209;">$helvetica-light</span><span style="color:#24292E;">, </span><span style="color:#E36209;">$helvetica-heavy</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#6A737D;">// (</span></span>
<span class="line"><span style="color:#6A737D;">//   &quot;weights&quot;: (</span></span>
<span class="line"><span style="color:#6A737D;">//     &quot;medium: 500,</span></span>
<span class="line"><span style="color:#6A737D;">//     &quot;bold&quot;: 700</span></span>
<span class="line"><span style="color:#6A737D;">//   )</span></span>
<span class="line"><span style="color:#6A737D;">// )</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#85E89D;">map</span><span style="color:#E1E4E8;">.deep-remove(</span><span style="color:#FFAB70;">$map</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">$key</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">$keys</span><span style="color:#E1E4E8;">...) </span><span style="color:#6A737D;">//=&gt; map</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#22863A;">map</span><span style="color:#24292E;">.deep-remove(</span><span style="color:#E36209;">$map</span><span style="color:#24292E;">, </span><span style="color:#E36209;">$key</span><span style="color:#24292E;">, </span><span style="color:#E36209;">$keys</span><span style="color:#24292E;">...) </span><span style="color:#6A737D;">//=&gt; map</span></span></code></pre></div><p>互換性:</p><ul><li>Dart Sass: since 1.27.0</li><li>LibSass: ✗</li><li>Ruby Sass: ✗</li></ul><p>keysが空の場合、keyに関連する値を除いたmapのコピーを返します。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#FFAB70;">$font-weights</span><span style="color:#E1E4E8;">: (</span><span style="color:#9ECBFF;">&quot;regular&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">400</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;medium&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">500</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;bold&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">700</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> map.deep-remove(</span><span style="color:#FFAB70;">$font-weights</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;regular&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#6A737D;">// (&quot;medium&quot;: 500, &quot;bold&quot;: 700)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#E36209;">$font-weights</span><span style="color:#24292E;">: (</span><span style="color:#032F62;">&quot;regular&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">400</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;medium&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">500</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;bold&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">700</span><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> map.deep-remove(</span><span style="color:#E36209;">$font-weights</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;regular&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#6A737D;">// (&quot;medium&quot;: 500, &quot;bold&quot;: 700)</span></span></code></pre></div><p>keysが空でない場合、keyを含み$keysの最後のキーを除くキーの集合を左から右へ辿って、更新対象の入れ子マップを探す。</p><p>対象となるマップが keys の最後のキーに関連付けられた値を持っていない場合、map のコピーを返します。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#FFAB70;">$fonts</span><span style="color:#E1E4E8;">: (</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">&quot;Helvetica&quot;</span><span style="color:#E1E4E8;">: (</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;weights&quot;</span><span style="color:#E1E4E8;">: (</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;regular&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">400</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;medium&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">500</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;bold&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">700</span></span>
<span class="line"><span style="color:#E1E4E8;">    )</span></span>
<span class="line"><span style="color:#E1E4E8;">  )</span></span>
<span class="line"><span style="color:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> map.deep-remove(</span><span style="color:#FFAB70;">$fonts</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;Helvetica&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;weights&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;regular&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#6A737D;">// (</span></span>
<span class="line"><span style="color:#6A737D;">//   &quot;Helvetica&quot;: (</span></span>
<span class="line"><span style="color:#6A737D;">//     &quot;weights: (</span></span>
<span class="line"><span style="color:#6A737D;">//       &quot;medium&quot;: 500,</span></span>
<span class="line"><span style="color:#6A737D;">//       &quot;bold&quot;: 700</span></span>
<span class="line"><span style="color:#6A737D;">//     )</span></span>
<span class="line"><span style="color:#6A737D;">//   )</span></span>
<span class="line"><span style="color:#6A737D;">// )</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#E36209;">$fonts</span><span style="color:#24292E;">: (</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">&quot;Helvetica&quot;</span><span style="color:#24292E;">: (</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;weights&quot;</span><span style="color:#24292E;">: (</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;regular&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">400</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;medium&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">500</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;bold&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">700</span></span>
<span class="line"><span style="color:#24292E;">    )</span></span>
<span class="line"><span style="color:#24292E;">  )</span></span>
<span class="line"><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> map.deep-remove(</span><span style="color:#E36209;">$fonts</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;Helvetica&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;weights&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;regular&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#6A737D;">// (</span></span>
<span class="line"><span style="color:#6A737D;">//   &quot;Helvetica&quot;: (</span></span>
<span class="line"><span style="color:#6A737D;">//     &quot;weights: (</span></span>
<span class="line"><span style="color:#6A737D;">//       &quot;medium&quot;: 500,</span></span>
<span class="line"><span style="color:#6A737D;">//       &quot;bold&quot;: 700</span></span>
<span class="line"><span style="color:#6A737D;">//     )</span></span>
<span class="line"><span style="color:#6A737D;">//   )</span></span>
<span class="line"><span style="color:#6A737D;">// )</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#85E89D;">map</span><span style="color:#E1E4E8;">.get(</span><span style="color:#FFAB70;">$map</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">$key</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">$keys</span><span style="color:#E1E4E8;">...)</span></span>
<span class="line"><span style="color:#E1E4E8;">map-get(</span><span style="color:#FFAB70;">$map</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">$key</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">$keys</span><span style="color:#E1E4E8;">...)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#22863A;">map</span><span style="color:#24292E;">.get(</span><span style="color:#E36209;">$map</span><span style="color:#24292E;">, </span><span style="color:#E36209;">$key</span><span style="color:#24292E;">, </span><span style="color:#E36209;">$keys</span><span style="color:#24292E;">...)</span></span>
<span class="line"><span style="color:#24292E;">map-get(</span><span style="color:#E36209;">$map</span><span style="color:#24292E;">, </span><span style="color:#E36209;">$key</span><span style="color:#24292E;">, </span><span style="color:#E36209;">$keys</span><span style="color:#24292E;">...)</span></span></code></pre></div><p>もしkeysが空の場合、keyに関連する$mapの値を返します。</p><p>mapに$keyに関連する値がない場合は、nullを返します。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#FFAB70;">$font-weights</span><span style="color:#E1E4E8;">: (</span><span style="color:#9ECBFF;">&quot;regular&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">400</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;medium&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">500</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;bold&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">700</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> map.get(</span><span style="color:#FFAB70;">$font-weights</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;medium&quot;</span><span style="color:#E1E4E8;">); </span><span style="color:#6A737D;">// 500</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> map.get(</span><span style="color:#FFAB70;">$font-weights</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;extra-bold&quot;</span><span style="color:#E1E4E8;">); </span><span style="color:#6A737D;">// null</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#E36209;">$font-weights</span><span style="color:#24292E;">: (</span><span style="color:#032F62;">&quot;regular&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">400</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;medium&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">500</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;bold&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">700</span><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> map.get(</span><span style="color:#E36209;">$font-weights</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;medium&quot;</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">// 500</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> map.get(</span><span style="color:#E36209;">$font-weights</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;extra-bold&quot;</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">// null</span></span></code></pre></div><p>互換性:</p><ul><li>Dart Sass: since 1.27.0</li><li>LibSass: ✗</li><li>Ruby Sass: ✗</li><li>▶</li></ul><p>keysが空でない場合、keyを含み$keysの最後のキーを除くキーの集合を左から右にたどり、検索対象のネストしたマップを見つける。</p><p>$keysの最後のキーに関連付けられた、対象となるマップ内の値を返します。</p><p>マップにそのキーに関連する値がない場合、または $keys 内のいずれかのキーがマップから外れている場合、あるいはマップでない値を参照している場合は null を返します。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#FFAB70;">$fonts</span><span style="color:#E1E4E8;">: (</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">&quot;Helvetica&quot;</span><span style="color:#E1E4E8;">: (</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;weights&quot;</span><span style="color:#E1E4E8;">: (</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;regular&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">400</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;medium&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">500</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;bold&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">700</span></span>
<span class="line"><span style="color:#E1E4E8;">    )</span></span>
<span class="line"><span style="color:#E1E4E8;">  )</span></span>
<span class="line"><span style="color:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> map.get(</span><span style="color:#FFAB70;">$fonts</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;Helvetica&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;weights&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;regular&quot;</span><span style="color:#E1E4E8;">); </span><span style="color:#6A737D;">// 400</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> map.get(</span><span style="color:#FFAB70;">$fonts</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;Helvetica&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;colors&quot;</span><span style="color:#E1E4E8;">); </span><span style="color:#6A737D;">// null</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#E36209;">$fonts</span><span style="color:#24292E;">: (</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">&quot;Helvetica&quot;</span><span style="color:#24292E;">: (</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;weights&quot;</span><span style="color:#24292E;">: (</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;regular&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">400</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;medium&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">500</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;bold&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">700</span></span>
<span class="line"><span style="color:#24292E;">    )</span></span>
<span class="line"><span style="color:#24292E;">  )</span></span>
<span class="line"><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> map.get(</span><span style="color:#E36209;">$fonts</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;Helvetica&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;weights&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;regular&quot;</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">// 400</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> map.get(</span><span style="color:#E36209;">$fonts</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;Helvetica&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;colors&quot;</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">// null</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#85E89D;">map</span><span style="color:#E1E4E8;">.has-key(</span><span style="color:#FFAB70;">$map</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">$key</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">$keys</span><span style="color:#E1E4E8;">...)</span></span>
<span class="line"><span style="color:#E1E4E8;">map-has-key(</span><span style="color:#FFAB70;">$map</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">$key</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">$keys</span><span style="color:#E1E4E8;">...) </span><span style="color:#6A737D;">//=&gt; boolean</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#22863A;">map</span><span style="color:#24292E;">.has-key(</span><span style="color:#E36209;">$map</span><span style="color:#24292E;">, </span><span style="color:#E36209;">$key</span><span style="color:#24292E;">, </span><span style="color:#E36209;">$keys</span><span style="color:#24292E;">...)</span></span>
<span class="line"><span style="color:#24292E;">map-has-key(</span><span style="color:#E36209;">$map</span><span style="color:#24292E;">, </span><span style="color:#E36209;">$key</span><span style="color:#24292E;">, </span><span style="color:#E36209;">$keys</span><span style="color:#24292E;">...) </span><span style="color:#6A737D;">//=&gt; boolean</span></span></code></pre></div><p>keys が空の場合、map に $key に対応する値が含まれているかどうかを返します。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#FFAB70;">$font-weights</span><span style="color:#E1E4E8;">: (</span><span style="color:#9ECBFF;">&quot;regular&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">400</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;medium&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">500</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;bold&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">700</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> map.has-key(</span><span style="color:#FFAB70;">$font-weights</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;regular&quot;</span><span style="color:#E1E4E8;">); </span><span style="color:#6A737D;">// true</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> map.has-key(</span><span style="color:#FFAB70;">$font-weights</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;bolder&quot;</span><span style="color:#E1E4E8;">); </span><span style="color:#6A737D;">// false</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#E36209;">$font-weights</span><span style="color:#24292E;">: (</span><span style="color:#032F62;">&quot;regular&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">400</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;medium&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">500</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;bold&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">700</span><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> map.has-key(</span><span style="color:#E36209;">$font-weights</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;regular&quot;</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">// true</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> map.has-key(</span><span style="color:#E36209;">$font-weights</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;bolder&quot;</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">// false</span></span></code></pre></div><p>互換性:</p><ul><li>Dart Sass: since 1.27.0</li><li>LibSass: ✗</li><li>Ruby Sass: ✗</li><li>▶</li></ul><p>If $keys is not empty, follows the set of keys including $key and excluding the last key in $keys, from left to right, to find the nested map targeted for searching.</p><p>Returns true if the targeted map contains a value associated with the last key in $keys.</p><p>Returns false if it does not, or if any key in $keys is missing from a map or references a value that is not a map.</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#FFAB70;">$fonts</span><span style="color:#E1E4E8;">: (</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">&quot;Helvetica&quot;</span><span style="color:#E1E4E8;">: (</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;weights&quot;</span><span style="color:#E1E4E8;">: (</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;regular&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">400</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;medium&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">500</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;bold&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">700</span></span>
<span class="line"><span style="color:#E1E4E8;">    )</span></span>
<span class="line"><span style="color:#E1E4E8;">  )</span></span>
<span class="line"><span style="color:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> map.has-key(</span><span style="color:#FFAB70;">$fonts</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;Helvetica&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;weights&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;regular&quot;</span><span style="color:#E1E4E8;">); </span><span style="color:#6A737D;">// true</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> map.has-key(</span><span style="color:#FFAB70;">$fonts</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;Helvetica&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;colors&quot;</span><span style="color:#E1E4E8;">); </span><span style="color:#6A737D;">// false</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#E36209;">$fonts</span><span style="color:#24292E;">: (</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">&quot;Helvetica&quot;</span><span style="color:#24292E;">: (</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;weights&quot;</span><span style="color:#24292E;">: (</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;regular&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">400</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;medium&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">500</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;bold&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">700</span></span>
<span class="line"><span style="color:#24292E;">    )</span></span>
<span class="line"><span style="color:#24292E;">  )</span></span>
<span class="line"><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> map.has-key(</span><span style="color:#E36209;">$fonts</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;Helvetica&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;weights&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;regular&quot;</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">// true</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> map.has-key(</span><span style="color:#E36209;">$fonts</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;Helvetica&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;colors&quot;</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">// false</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#85E89D;">map</span><span style="color:#E1E4E8;">.keys(</span><span style="color:#FFAB70;">$map</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">map-keys(</span><span style="color:#FFAB70;">$map</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">//=&gt; list</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#22863A;">map</span><span style="color:#24292E;">.keys(</span><span style="color:#E36209;">$map</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">map-keys(</span><span style="color:#E36209;">$map</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">//=&gt; list</span></span></code></pre></div><p>$mapに含まれるすべてのキーのカンマ区切りリストを返します。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#FFAB70;">$font-weights</span><span style="color:#E1E4E8;">: (</span><span style="color:#9ECBFF;">&quot;regular&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">400</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;medium&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">500</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;bold&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">700</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> map.keys(</span><span style="color:#FFAB70;">$font-weights</span><span style="color:#E1E4E8;">); </span><span style="color:#6A737D;">// &quot;regular&quot;, &quot;medium&quot;, &quot;bold&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#E36209;">$font-weights</span><span style="color:#24292E;">: (</span><span style="color:#032F62;">&quot;regular&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">400</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;medium&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">500</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;bold&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">700</span><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> map.keys(</span><span style="color:#E36209;">$font-weights</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">// &quot;regular&quot;, &quot;medium&quot;, &quot;bold&quot;</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#85E89D;">map</span><span style="color:#E1E4E8;">.merge(</span><span style="color:#FFAB70;">$map1</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">$map2</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">map-merge(</span><span style="color:#FFAB70;">$map1</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">$map2</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#85E89D;">map</span><span style="color:#E1E4E8;">.merge(</span><span style="color:#FFAB70;">$map1</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">$keys</span><span style="color:#E1E4E8;">..., </span><span style="color:#FFAB70;">$map2</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">map-merge(</span><span style="color:#FFAB70;">$map1</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">$keys</span><span style="color:#E1E4E8;">..., </span><span style="color:#FFAB70;">$map2</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">//=&gt; map</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#22863A;">map</span><span style="color:#24292E;">.merge(</span><span style="color:#E36209;">$map1</span><span style="color:#24292E;">, </span><span style="color:#E36209;">$map2</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">map-merge(</span><span style="color:#E36209;">$map1</span><span style="color:#24292E;">, </span><span style="color:#E36209;">$map2</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#22863A;">map</span><span style="color:#24292E;">.merge(</span><span style="color:#E36209;">$map1</span><span style="color:#24292E;">, </span><span style="color:#E36209;">$keys</span><span style="color:#24292E;">..., </span><span style="color:#E36209;">$map2</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">map-merge(</span><span style="color:#E36209;">$map1</span><span style="color:#24292E;">, </span><span style="color:#E36209;">$keys</span><span style="color:#24292E;">..., </span><span style="color:#E36209;">$map2</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">//=&gt; map</span></span></code></pre></div><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>⚠️ Heads up!</p><p>実際には、map.merge($map1, $keys..., map2) への実際の引数は map.merge(map1, $args...) として渡されます。ここでは、説明のために $map1, $keys..., $map2 と記述しています。</p></div><p>キーが渡されない場合、$map1 と $map2 の両方からすべてのキーと値を含む新しいマップを返します。</p><p>map1とmap2の両方が同じキーを持つ場合、map2の値が優先されます。</p><p>返されたマップの中で $map1 にも含まれるキーはすべて、 $map1 と同じ順番で並びます。map2からの新しいキーは、マップの末尾に表示されます。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#FFAB70;">$light-weights</span><span style="color:#E1E4E8;">: (</span><span style="color:#9ECBFF;">&quot;lightest&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">100</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;light&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">300</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#FFAB70;">$heavy-weights</span><span style="color:#E1E4E8;">: (</span><span style="color:#9ECBFF;">&quot;medium&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">500</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;bold&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">700</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> map.merge(</span><span style="color:#FFAB70;">$light-weights</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">$heavy-weights</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#6A737D;">// (&quot;lightest&quot;: 100, &quot;light&quot;: 300, &quot;medium&quot;: 500, &quot;bold&quot;: 700)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#E36209;">$light-weights</span><span style="color:#24292E;">: (</span><span style="color:#032F62;">&quot;lightest&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">100</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;light&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">300</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#E36209;">$heavy-weights</span><span style="color:#24292E;">: (</span><span style="color:#032F62;">&quot;medium&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">500</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;bold&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">700</span><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> map.merge(</span><span style="color:#E36209;">$light-weights</span><span style="color:#24292E;">, </span><span style="color:#E36209;">$heavy-weights</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#6A737D;">// (&quot;lightest&quot;: 100, &quot;light&quot;: 300, &quot;medium&quot;: 500, &quot;bold&quot;: 700)</span></span></code></pre></div><p>互換性:</p><ul><li>Dart Sass: since 1.27.0</li><li>LibSass: ✗</li><li>Ruby Sass: ✗</li><li>▶</li></ul><p>keysが空でない場合、keysをたどってマージ対象のネストされたマップを探します。keysの中のいずれかのキーがマップから外れているか、マップでない値を参照している場合、そのキーの値を空のマップに設定します。</p><p>対象となるマップが、対象となるマップと $map2 の両方のすべてのキーと値を含む新しいマップに置き換えられた $map1 のコピーを返します。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#FFAB70;">$fonts</span><span style="color:#E1E4E8;">: (</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">&quot;Helvetica&quot;</span><span style="color:#E1E4E8;">: (</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;weights&quot;</span><span style="color:#E1E4E8;">: (</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;lightest&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">100</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;light&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">300</span></span>
<span class="line"><span style="color:#E1E4E8;">    )</span></span>
<span class="line"><span style="color:#E1E4E8;">  )</span></span>
<span class="line"><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#FFAB70;">$heavy-weights</span><span style="color:#E1E4E8;">: (</span><span style="color:#9ECBFF;">&quot;medium&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">500</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;bold&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">700</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> map.merge(</span><span style="color:#FFAB70;">$fonts</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;Helvetica&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;weights&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">$heavy-weights</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#6A737D;">// (</span></span>
<span class="line"><span style="color:#6A737D;">//   &quot;Helvetica&quot;: (</span></span>
<span class="line"><span style="color:#6A737D;">//     &quot;weights&quot;: (</span></span>
<span class="line"><span style="color:#6A737D;">//       &quot;lightest&quot;: 100,</span></span>
<span class="line"><span style="color:#6A737D;">//       &quot;light&quot;: 300,</span></span>
<span class="line"><span style="color:#6A737D;">//       &quot;medium&quot;: 500,</span></span>
<span class="line"><span style="color:#6A737D;">//       &quot;bold&quot;: 700</span></span>
<span class="line"><span style="color:#6A737D;">//     )</span></span>
<span class="line"><span style="color:#6A737D;">//   )</span></span>
<span class="line"><span style="color:#6A737D;">// )</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#E36209;">$fonts</span><span style="color:#24292E;">: (</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">&quot;Helvetica&quot;</span><span style="color:#24292E;">: (</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;weights&quot;</span><span style="color:#24292E;">: (</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;lightest&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">100</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;light&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">300</span></span>
<span class="line"><span style="color:#24292E;">    )</span></span>
<span class="line"><span style="color:#24292E;">  )</span></span>
<span class="line"><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#E36209;">$heavy-weights</span><span style="color:#24292E;">: (</span><span style="color:#032F62;">&quot;medium&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">500</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;bold&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">700</span><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> map.merge(</span><span style="color:#E36209;">$fonts</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;Helvetica&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;weights&quot;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">$heavy-weights</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#6A737D;">// (</span></span>
<span class="line"><span style="color:#6A737D;">//   &quot;Helvetica&quot;: (</span></span>
<span class="line"><span style="color:#6A737D;">//     &quot;weights&quot;: (</span></span>
<span class="line"><span style="color:#6A737D;">//       &quot;lightest&quot;: 100,</span></span>
<span class="line"><span style="color:#6A737D;">//       &quot;light&quot;: 300,</span></span>
<span class="line"><span style="color:#6A737D;">//       &quot;medium&quot;: 500,</span></span>
<span class="line"><span style="color:#6A737D;">//       &quot;bold&quot;: 700</span></span>
<span class="line"><span style="color:#6A737D;">//     )</span></span>
<span class="line"><span style="color:#6A737D;">//   )</span></span>
<span class="line"><span style="color:#6A737D;">// )</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#85E89D;">map</span><span style="color:#E1E4E8;">.remove(</span><span style="color:#FFAB70;">$map</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">$keys</span><span style="color:#E1E4E8;">...)</span></span>
<span class="line"><span style="color:#E1E4E8;">map-remove(</span><span style="color:#FFAB70;">$map</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">$keys</span><span style="color:#E1E4E8;">...) </span><span style="color:#6A737D;">//=&gt; map</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#22863A;">map</span><span style="color:#24292E;">.remove(</span><span style="color:#E36209;">$map</span><span style="color:#24292E;">, </span><span style="color:#E36209;">$keys</span><span style="color:#24292E;">...)</span></span>
<span class="line"><span style="color:#24292E;">map-remove(</span><span style="color:#E36209;">$map</span><span style="color:#24292E;">, </span><span style="color:#E36209;">$keys</span><span style="color:#24292E;">...) </span><span style="color:#6A737D;">//=&gt; map</span></span></code></pre></div><p>キーに関連する値を除いた $map のコピーを返します。</p><p>もしkeysのキーがmapに関連する値を持っていない場合、それは無視されます。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#FFAB70;">$font-weights</span><span style="color:#E1E4E8;">: (</span><span style="color:#9ECBFF;">&quot;regular&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">400</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;medium&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">500</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;bold&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">700</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> map.remove(</span><span style="color:#FFAB70;">$font-weights</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;regular&quot;</span><span style="color:#E1E4E8;">); </span><span style="color:#6A737D;">// (&quot;medium&quot;: 500, &quot;bold&quot;: 700)</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> map.remove(</span><span style="color:#FFAB70;">$font-weights</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;regular&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;bold&quot;</span><span style="color:#E1E4E8;">); </span><span style="color:#6A737D;">// (&quot;medium&quot;: 500)</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> map.remove(</span><span style="color:#FFAB70;">$font-weights</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;bolder&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#6A737D;">// (&quot;regular&quot;: 400, &quot;medium&quot;: 500, &quot;bold&quot;: 700)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#E36209;">$font-weights</span><span style="color:#24292E;">: (</span><span style="color:#032F62;">&quot;regular&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">400</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;medium&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">500</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;bold&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">700</span><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> map.remove(</span><span style="color:#E36209;">$font-weights</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;regular&quot;</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">// (&quot;medium&quot;: 500, &quot;bold&quot;: 700)</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> map.remove(</span><span style="color:#E36209;">$font-weights</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;regular&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;bold&quot;</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">// (&quot;medium&quot;: 500)</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> map.remove(</span><span style="color:#E36209;">$font-weights</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;bolder&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#6A737D;">// (&quot;regular&quot;: 400, &quot;medium&quot;: 500, &quot;bold&quot;: 700)</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#85E89D;">map</span><span style="color:#E1E4E8;">.set(</span><span style="color:#FFAB70;">$map</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">$key</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">$value</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#85E89D;">map</span><span style="color:#E1E4E8;">.set(</span><span style="color:#FFAB70;">$map</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">$keys</span><span style="color:#E1E4E8;">..., </span><span style="color:#FFAB70;">$key</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">$value</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">//=&gt; map</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#22863A;">map</span><span style="color:#24292E;">.set(</span><span style="color:#E36209;">$map</span><span style="color:#24292E;">, </span><span style="color:#E36209;">$key</span><span style="color:#24292E;">, </span><span style="color:#E36209;">$value</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#22863A;">map</span><span style="color:#24292E;">.set(</span><span style="color:#E36209;">$map</span><span style="color:#24292E;">, </span><span style="color:#E36209;">$keys</span><span style="color:#24292E;">..., </span><span style="color:#E36209;">$key</span><span style="color:#24292E;">, </span><span style="color:#E36209;">$value</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">//=&gt; map</span></span></code></pre></div><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>⚠️ Heads up!</p><p>実際には、map.set($map, $keys..., $key, value)の実際の引数は、map.set(map, args...)として渡されています。ここでは説明のために、map, $keys..., $key, $valueと記述しています。</p></div><p>キーが渡されない場合、keyの値をvalueに設定した$mapのコピーを返します。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#FFAB70;">$font-weights</span><span style="color:#E1E4E8;">: (</span><span style="color:#9ECBFF;">&quot;regular&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">400</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;medium&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">500</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;bold&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">700</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> map.set(</span><span style="color:#FFAB70;">$font-weights</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;regular&quot;</span><span style="color:#E1E4E8;">, 300);</span></span>
<span class="line"><span style="color:#6A737D;">// (&quot;regular&quot;: 300, &quot;medium&quot;: 500, &quot;bold&quot;: 700)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#E36209;">$font-weights</span><span style="color:#24292E;">: (</span><span style="color:#032F62;">&quot;regular&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">400</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;medium&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">500</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;bold&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">700</span><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> map.set(</span><span style="color:#E36209;">$font-weights</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;regular&quot;</span><span style="color:#24292E;">, 300);</span></span>
<span class="line"><span style="color:#6A737D;">// (&quot;regular&quot;: 300, &quot;medium&quot;: 500, &quot;bold&quot;: 700)</span></span></code></pre></div><p>互換性:</p><ul><li>Dart Sass: since 1.27.0</li><li>LibSass: ✗</li><li>Ruby Sass: ✗</li><li>▶</li></ul><p>keyが渡された場合、$keysをたどって更新対象のネストされたマップを探します。keysに含まれるキーがマップにない場合、あるいはマップでない値を参照している場合、 そのキーの値を空のマップに設定します。</p><p>ターゲット・マップのkeyの値をvalueに設定した$mapのコピーを返します。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#FFAB70;">$fonts</span><span style="color:#E1E4E8;">: (</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">&quot;Helvetica&quot;</span><span style="color:#E1E4E8;">: (</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;weights&quot;</span><span style="color:#E1E4E8;">: (</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;regular&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">400</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;medium&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">500</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;bold&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">700</span></span>
<span class="line"><span style="color:#E1E4E8;">    )</span></span>
<span class="line"><span style="color:#E1E4E8;">  )</span></span>
<span class="line"><span style="color:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> map.set(</span><span style="color:#FFAB70;">$fonts</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;Helvetica&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;weights&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;regular&quot;</span><span style="color:#E1E4E8;">, 300);</span></span>
<span class="line"><span style="color:#6A737D;">// (</span></span>
<span class="line"><span style="color:#6A737D;">//   &quot;Helvetica&quot;: (</span></span>
<span class="line"><span style="color:#6A737D;">//     &quot;weights&quot;: (</span></span>
<span class="line"><span style="color:#6A737D;">//       &quot;regular&quot;: 300,</span></span>
<span class="line"><span style="color:#6A737D;">//       &quot;medium&quot;: 500,</span></span>
<span class="line"><span style="color:#6A737D;">//       &quot;bold&quot;: 700</span></span>
<span class="line"><span style="color:#6A737D;">//     )</span></span>
<span class="line"><span style="color:#6A737D;">//   )</span></span>
<span class="line"><span style="color:#6A737D;">// )</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#E36209;">$fonts</span><span style="color:#24292E;">: (</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">&quot;Helvetica&quot;</span><span style="color:#24292E;">: (</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;weights&quot;</span><span style="color:#24292E;">: (</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;regular&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">400</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;medium&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">500</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;bold&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">700</span></span>
<span class="line"><span style="color:#24292E;">    )</span></span>
<span class="line"><span style="color:#24292E;">  )</span></span>
<span class="line"><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> map.set(</span><span style="color:#E36209;">$fonts</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;Helvetica&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;weights&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;regular&quot;</span><span style="color:#24292E;">, 300);</span></span>
<span class="line"><span style="color:#6A737D;">// (</span></span>
<span class="line"><span style="color:#6A737D;">//   &quot;Helvetica&quot;: (</span></span>
<span class="line"><span style="color:#6A737D;">//     &quot;weights&quot;: (</span></span>
<span class="line"><span style="color:#6A737D;">//       &quot;regular&quot;: 300,</span></span>
<span class="line"><span style="color:#6A737D;">//       &quot;medium&quot;: 500,</span></span>
<span class="line"><span style="color:#6A737D;">//       &quot;bold&quot;: 700</span></span>
<span class="line"><span style="color:#6A737D;">//     )</span></span>
<span class="line"><span style="color:#6A737D;">//   )</span></span>
<span class="line"><span style="color:#6A737D;">// )</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#85E89D;">map</span><span style="color:#E1E4E8;">.values(</span><span style="color:#FFAB70;">$map</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">map-values(</span><span style="color:#FFAB70;">$map</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">//=&gt; list</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#22863A;">map</span><span style="color:#24292E;">.values(</span><span style="color:#E36209;">$map</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">map-values(</span><span style="color:#E36209;">$map</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">//=&gt; list</span></span></code></pre></div><p>$mapに含まれるすべての値をカンマ区切りで返します。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#FFAB70;">$font-weights</span><span style="color:#E1E4E8;">: (</span><span style="color:#9ECBFF;">&quot;regular&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">400</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;medium&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">500</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;bold&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">700</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> map.values(</span><span style="color:#FFAB70;">$font-weights</span><span style="color:#E1E4E8;">); </span><span style="color:#6A737D;">// 400, 500, 700</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#E36209;">$font-weights</span><span style="color:#24292E;">: (</span><span style="color:#032F62;">&quot;regular&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">400</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;medium&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">500</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;bold&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">700</span><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> map.values(</span><span style="color:#E36209;">$font-weights</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">// 400, 500, 700</span></span></code></pre></div><h2 id="sass-math" tabindex="-1">sass:math <a class="header-anchor" href="#sass-math" aria-label="Permalink to &quot;sass:math&quot;">​</a></h2><p>互換性:</p><ul><li>Dart Sass: since 1.23.0</li><li>LibSass: ✗</li><li>Ruby Sass: ✗</li><li>▶</li></ul><h3 id="変数" tabindex="-1">変数 <a class="header-anchor" href="#変数" aria-label="Permalink to &quot;変数&quot;">​</a></h3><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#FFAB70;">math</span><span style="color:#E1E4E8;">.</span><span style="color:#FFAB70;">$e</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#E36209;">math</span><span style="color:#24292E;">.</span><span style="color:#E36209;">$e</span></span></code></pre></div><p>互換性:</p><ul><li>Dart Sass: since 1.25.0</li><li>LibSass: ✗</li><li>Ruby Sass: ✗</li></ul><p>数学定数eの値に等しい。</p><div class="language-Scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">Scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">math</span><span style="color:#E1E4E8;">.</span><span style="color:#FFAB70;">$e</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">// 2.7182818285</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> </span><span style="color:#E36209;">math</span><span style="color:#24292E;">.</span><span style="color:#E36209;">$e</span><span style="color:#24292E;">; </span><span style="color:#6A737D;">// 2.7182818285</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#FFAB70;">math</span><span style="color:#E1E4E8;">.</span><span style="color:#FFAB70;">$pi</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#E36209;">math</span><span style="color:#24292E;">.</span><span style="color:#E36209;">$pi</span></span></code></pre></div><p>互換性:</p><ul><li>Dart Sass: since 1.25.0</li><li>LibSass: ✗</li><li>Ruby Sass: ✗</li></ul><p>数学定数πの値に等しい。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">math</span><span style="color:#E1E4E8;">.</span><span style="color:#FFAB70;">$pi</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">// 3.1415926536</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> </span><span style="color:#E36209;">math</span><span style="color:#24292E;">.</span><span style="color:#E36209;">$pi</span><span style="color:#24292E;">; </span><span style="color:#6A737D;">// 3.1415926536</span></span></code></pre></div><h3 id="バウンディング関数" tabindex="-1">バウンディング関数 <a class="header-anchor" href="#バウンディング関数" aria-label="Permalink to &quot;バウンディング関数&quot;">​</a></h3><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#85E89D;">math</span><span style="color:#E1E4E8;">.ceil(</span><span style="color:#FFAB70;">$number</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">ceil(</span><span style="color:#FFAB70;">$number</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">//=&gt; number</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#22863A;">math</span><span style="color:#24292E;">.ceil(</span><span style="color:#E36209;">$number</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">ceil(</span><span style="color:#E36209;">$number</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">//=&gt; number</span></span></code></pre></div><p>$numberを次の最も大きい整数に切り上げます。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> math.ceil(4); </span><span style="color:#6A737D;">// 4</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> math.ceil(4.2); </span><span style="color:#6A737D;">// 5</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> math.ceil(4.9); </span><span style="color:#6A737D;">// 5</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> math.ceil(4); </span><span style="color:#6A737D;">// 4</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> math.ceil(4.2); </span><span style="color:#6A737D;">// 5</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> math.ceil(4.9); </span><span style="color:#6A737D;">// 5</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#85E89D;">math</span><span style="color:#E1E4E8;">.clamp(</span><span style="color:#FFAB70;">$min</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">$number</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">$max</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">//=&gt; number</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#22863A;">math</span><span style="color:#24292E;">.clamp(</span><span style="color:#E36209;">$min</span><span style="color:#24292E;">, </span><span style="color:#E36209;">$number</span><span style="color:#24292E;">, </span><span style="color:#E36209;">$max</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">//=&gt; number</span></span></code></pre></div><p>互換性:</p><ul><li>Dart Sass: since 1.25.0</li><li>LibSass: ✗</li><li>Ruby Sass: ✗</li></ul><p>$number を $min から $max までの範囲に制限します。number が $min より小さい場合は $min を、 $max より大きい場合は $max を返します。</p><p>min、number、$maxは、互換性のある単位を持つか、すべて単位なしである必要があります。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> math.clamp(-1, 0, 1); </span><span style="color:#6A737D;">// 0</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> math.clamp(1px, -1px, 10px); </span><span style="color:#6A737D;">// 1px</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> math.clamp(-1in, 1cm, 10mm); </span><span style="color:#6A737D;">// 10mm</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> math.clamp(-1, 0, 1); </span><span style="color:#6A737D;">// 0</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> math.clamp(1px, -1px, 10px); </span><span style="color:#6A737D;">// 1px</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> math.clamp(-1in, 1cm, 10mm); </span><span style="color:#6A737D;">// 10mm</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#85E89D;">math</span><span style="color:#E1E4E8;">.floor(</span><span style="color:#FFAB70;">$number</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">floor(</span><span style="color:#FFAB70;">$number</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">//=&gt; number</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#22863A;">math</span><span style="color:#24292E;">.floor(</span><span style="color:#E36209;">$number</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">floor(</span><span style="color:#E36209;">$number</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">//=&gt; number</span></span></code></pre></div><p>$numberを切り捨て、次の最小の整数にします。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> math.floor(4); </span><span style="color:#6A737D;">// 4</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> math.floor(4.2); </span><span style="color:#6A737D;">// 4</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> math.floor(4.9); </span><span style="color:#6A737D;">// 4</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> math.floor(4); </span><span style="color:#6A737D;">// 4</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> math.floor(4.2); </span><span style="color:#6A737D;">// 4</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> math.floor(4.9); </span><span style="color:#6A737D;">// 4</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#85E89D;">math</span><span style="color:#E1E4E8;">.max(</span><span style="color:#FFAB70;">$number</span><span style="color:#E1E4E8;">...)</span></span>
<span class="line"><span style="color:#E1E4E8;">max(</span><span style="color:#FFAB70;">$number</span><span style="color:#E1E4E8;">...) </span><span style="color:#6A737D;">//=&gt; number</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#22863A;">math</span><span style="color:#24292E;">.max(</span><span style="color:#E36209;">$number</span><span style="color:#24292E;">...)</span></span>
<span class="line"><span style="color:#24292E;">max(</span><span style="color:#E36209;">$number</span><span style="color:#24292E;">...) </span><span style="color:#6A737D;">//=&gt; number</span></span></code></pre></div><p>1つまたは複数の数値のうち、最も大きい数値を返します。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> math.max(1px, 4px); </span><span style="color:#6A737D;">// 4px</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFAB70;">$widths</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">50</span><span style="color:#F97583;">px</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">30</span><span style="color:#F97583;">px</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">100</span><span style="color:#F97583;">px</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> math.max(</span><span style="color:#FFAB70;">$widths</span><span style="color:#E1E4E8;">...); </span><span style="color:#6A737D;">// 100px</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> math.max(1px, 4px); </span><span style="color:#6A737D;">// 4px</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E36209;">$widths</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">50</span><span style="color:#D73A49;">px</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">30</span><span style="color:#D73A49;">px</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">100</span><span style="color:#D73A49;">px</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> math.max(</span><span style="color:#E36209;">$widths</span><span style="color:#24292E;">...); </span><span style="color:#6A737D;">// 100px</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#85E89D;">math</span><span style="color:#E1E4E8;">.min(</span><span style="color:#FFAB70;">$number</span><span style="color:#E1E4E8;">...)</span></span>
<span class="line"><span style="color:#E1E4E8;">min(</span><span style="color:#FFAB70;">$number</span><span style="color:#E1E4E8;">...) </span><span style="color:#6A737D;">//=&gt; number</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#22863A;">math</span><span style="color:#24292E;">.min(</span><span style="color:#E36209;">$number</span><span style="color:#24292E;">...)</span></span>
<span class="line"><span style="color:#24292E;">min(</span><span style="color:#E36209;">$number</span><span style="color:#24292E;">...) </span><span style="color:#6A737D;">//=&gt; number</span></span></code></pre></div><p>1つまたは複数の数値のうち、最も小さい数値を返します。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> math.min(1px, 4px); </span><span style="color:#6A737D;">// 1px</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFAB70;">$widths</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">50</span><span style="color:#F97583;">px</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">30</span><span style="color:#F97583;">px</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">100</span><span style="color:#F97583;">px</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> math.min(</span><span style="color:#FFAB70;">$widths</span><span style="color:#E1E4E8;">...); </span><span style="color:#6A737D;">// 30px</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> math.min(1px, 4px); </span><span style="color:#6A737D;">// 1px</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E36209;">$widths</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">50</span><span style="color:#D73A49;">px</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">30</span><span style="color:#D73A49;">px</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">100</span><span style="color:#D73A49;">px</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> math.min(</span><span style="color:#E36209;">$widths</span><span style="color:#24292E;">...); </span><span style="color:#6A737D;">// 30px</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#85E89D;">math</span><span style="color:#E1E4E8;">.round(</span><span style="color:#FFAB70;">$number</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">round(</span><span style="color:#FFAB70;">$number</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">//=&gt; number</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#22863A;">math</span><span style="color:#24292E;">.round(</span><span style="color:#E36209;">$number</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">round(</span><span style="color:#E36209;">$number</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">//=&gt; number</span></span></code></pre></div><p>最も近い整数に $number を丸めます。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> math.round(4); </span><span style="color:#6A737D;">// 4</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> math.round(4.2); </span><span style="color:#6A737D;">// 4</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> math.round(4.9); </span><span style="color:#6A737D;">// 5</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> math.round(4); </span><span style="color:#6A737D;">// 4</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> math.round(4.2); </span><span style="color:#6A737D;">// 4</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> math.round(4.9); </span><span style="color:#6A737D;">// 5</span></span></code></pre></div><h3 id="距離関数" tabindex="-1">距離関数 <a class="header-anchor" href="#距離関数" aria-label="Permalink to &quot;距離関数&quot;">​</a></h3><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#85E89D;">math</span><span style="color:#E1E4E8;">.abs(</span><span style="color:#FFAB70;">$number</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">abs(</span><span style="color:#FFAB70;">$number</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">//=&gt; number</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#22863A;">math</span><span style="color:#24292E;">.abs(</span><span style="color:#E36209;">$number</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">abs(</span><span style="color:#E36209;">$number</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">//=&gt; number</span></span></code></pre></div><p>numberの絶対値を返します。numberが負の場合は-numberを、正の場合はnumberをそのまま返します。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> math.abs(10px); </span><span style="color:#6A737D;">// 10px</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> math.abs(-10px); </span><span style="color:#6A737D;">// 10px</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> math.abs(10px); </span><span style="color:#6A737D;">// 10px</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> math.abs(-10px); </span><span style="color:#6A737D;">// 10px</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#85E89D;">math</span><span style="color:#E1E4E8;">.hypot(</span><span style="color:#FFAB70;">$number</span><span style="color:#E1E4E8;">...) </span><span style="color:#6A737D;">//=&gt; number</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#22863A;">math</span><span style="color:#24292E;">.hypot(</span><span style="color:#E36209;">$number</span><span style="color:#24292E;">...) </span><span style="color:#6A737D;">//=&gt; number</span></span></code></pre></div><p>互換性:</p><ul><li>Dart Sass: since 1.25.0</li><li>LibSass: ✗</li><li>Ruby Sass: ✗</li></ul><p>各$numberに等しい成分を持つ、n次元ベクトルの長さを返します。例えば、a, b, cの3つの数に対して、これはa² + b² + c²の平方根を返します。</p><p>数値はすべて互換性のある単位を持つか、すべて単位を持たないかのどちらかでなければなりません。そして、数値の単位が異なる場合があるので、出力は最初の数値の単位をとります。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> math.hypot(3, 4); </span><span style="color:#6A737D;">// 5</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFAB70;">$lengths</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">1</span><span style="color:#F97583;">in</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">10</span><span style="color:#F97583;">cm</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">50</span><span style="color:#F97583;">px</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> math.hypot(</span><span style="color:#FFAB70;">$lengths</span><span style="color:#E1E4E8;">...); </span><span style="color:#6A737D;">// 4.0952775683in</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> math.hypot(3, 4); </span><span style="color:#6A737D;">// 5</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E36209;">$lengths</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">1</span><span style="color:#D73A49;">in</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">10</span><span style="color:#D73A49;">cm</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">50</span><span style="color:#D73A49;">px</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> math.hypot(</span><span style="color:#E36209;">$lengths</span><span style="color:#24292E;">...); </span><span style="color:#6A737D;">// 4.0952775683in</span></span></code></pre></div><h3 id="指数関数" tabindex="-1">指数関数 <a class="header-anchor" href="#指数関数" aria-label="Permalink to &quot;指数関数&quot;">​</a></h3><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#85E89D;">math</span><span style="color:#E1E4E8;">.log(</span><span style="color:#FFAB70;">$number</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">$base</span><span style="color:#E1E4E8;">: null) </span><span style="color:#6A737D;">//=&gt; number</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#22863A;">math</span><span style="color:#24292E;">.log(</span><span style="color:#E36209;">$number</span><span style="color:#24292E;">, </span><span style="color:#E36209;">$base</span><span style="color:#24292E;">: null) </span><span style="color:#6A737D;">//=&gt; number</span></span></code></pre></div><p>互換性:</p><ul><li>Dart Sass: since 1.25.0</li><li>LibSass: ✗</li><li>Ruby Sass: ✗</li></ul><p>numberのbaseに対する対数を返します。baseがNULLの場合は、自然対数を計算します。</p><p>numberとbaseは無単位でなければならない。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> math.log(10); </span><span style="color:#6A737D;">// 2.302585093</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> math.log(10, 10); </span><span style="color:#6A737D;">// 1</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> math.log(10); </span><span style="color:#6A737D;">// 2.302585093</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> math.log(10, 10); </span><span style="color:#6A737D;">// 1</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#85E89D;">math</span><span style="color:#E1E4E8;">.pow(</span><span style="color:#FFAB70;">$base</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">$exponent</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">//=&gt; number</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#22863A;">math</span><span style="color:#24292E;">.pow(</span><span style="color:#E36209;">$base</span><span style="color:#24292E;">, </span><span style="color:#E36209;">$exponent</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">//=&gt; number</span></span></code></pre></div><p>互換性:</p><ul><li>Dart Sass: since 1.25.0</li><li>LibSass: ✗</li><li>Ruby Sass: ✗</li></ul><p>baseをexponentのべき乗に引き上げます。</p><p>baseとexponentは無単位でなければなりません。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> math.pow(10, 2); </span><span style="color:#6A737D;">// 100</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> math.pow(100, math.div(1, 3)); </span><span style="color:#6A737D;">// 4.6415888336</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> math.pow(5, -2); </span><span style="color:#6A737D;">// 0.04</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> math.pow(10, 2); </span><span style="color:#6A737D;">// 100</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> math.pow(100, math.div(1, 3)); </span><span style="color:#6A737D;">// 4.6415888336</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> math.pow(5, -2); </span><span style="color:#6A737D;">// 0.04</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#85E89D;">math</span><span style="color:#E1E4E8;">.sqrt(</span><span style="color:#FFAB70;">$number</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">//=&gt; number</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#22863A;">math</span><span style="color:#24292E;">.sqrt(</span><span style="color:#E36209;">$number</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">//=&gt; number</span></span></code></pre></div><p>互換性:</p><ul><li>Dart Sass: since 1.25.0</li><li>LibSass: ✗</li><li>Ruby Sass: ✗</li></ul><p>$numberの平方根を返します。</p><p>$numberは無単位でなければなりません。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> math.sqrt(100); </span><span style="color:#6A737D;">// 10</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> math.sqrt(math.div(1, 3)); </span><span style="color:#6A737D;">// 0.5773502692</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> math.sqrt(-1); </span><span style="color:#6A737D;">// NaN</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> math.sqrt(100); </span><span style="color:#6A737D;">// 10</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> math.sqrt(math.div(1, 3)); </span><span style="color:#6A737D;">// 0.5773502692</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> math.sqrt(-1); </span><span style="color:#6A737D;">// NaN</span></span></code></pre></div><h3 id="三角関数" tabindex="-1">三角関数 <a class="header-anchor" href="#三角関数" aria-label="Permalink to &quot;三角関数&quot;">​</a></h3><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#85E89D;">math</span><span style="color:#E1E4E8;">.cos(</span><span style="color:#FFAB70;">$number</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">//=&gt; number</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#22863A;">math</span><span style="color:#24292E;">.cos(</span><span style="color:#E36209;">$number</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">//=&gt; number</span></span></code></pre></div><p>互換性:</p><ul><li>Dart Sass: since 1.25.0</li><li>LibSass: ✗</li><li>Ruby Sass: ✗</li></ul><p>$numberのcosを返します。</p><p>$numberは角度（単位はdegと互換性があること）または単位なしである必要があります。numberに単位がない場合は、radであるとみなされます。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> math.cos(100deg); </span><span style="color:#6A737D;">// -0.1736481777</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> math.cos(1rad); </span><span style="color:#6A737D;">// 0.5403023059</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> math.cos(1); </span><span style="color:#6A737D;">// 0.5403023059</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> math.cos(100deg); </span><span style="color:#6A737D;">// -0.1736481777</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> math.cos(1rad); </span><span style="color:#6A737D;">// 0.5403023059</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> math.cos(1); </span><span style="color:#6A737D;">// 0.5403023059</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#85E89D;">math</span><span style="color:#E1E4E8;">.sin(</span><span style="color:#FFAB70;">$number</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">//=&gt; number</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#22863A;">math</span><span style="color:#24292E;">.sin(</span><span style="color:#E36209;">$number</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">//=&gt; number</span></span></code></pre></div><p>互換性:</p><ul><li>Dart Sass: since 1.25.0</li><li>LibSass: ✗</li><li>Ruby Sass: ✗</li></ul><p>$numberの正弦を返します。</p><p>$numberは角度（単位はdegと互換性があること）または単位なしである必要があります。numberに単位がない場合は、radであるとみなされます。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> math.sin(100deg); </span><span style="color:#6A737D;">// 0.984807753</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> math.sin(1rad); </span><span style="color:#6A737D;">// 0.8414709848</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> math.sin(1); </span><span style="color:#6A737D;">// 0.8414709848</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> math.sin(100deg); </span><span style="color:#6A737D;">// 0.984807753</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> math.sin(1rad); </span><span style="color:#6A737D;">// 0.8414709848</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> math.sin(1); </span><span style="color:#6A737D;">// 0.8414709848</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#85E89D;">math</span><span style="color:#E1E4E8;">.tan(</span><span style="color:#FFAB70;">$number</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">//=&gt; number</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#22863A;">math</span><span style="color:#24292E;">.tan(</span><span style="color:#E36209;">$number</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">//=&gt; number</span></span></code></pre></div><p>互換性:</p><ul><li>Dart Sass: since 1.25.0</li><li>LibSass: ✗</li><li>Ruby Sass: ✗</li></ul><p>numberのタンジェントを返します。</p><p>$numberは角度（単位はdegと互換性があること）または単位なしである必要があります。numberに単位がない場合は、radであると見なされます。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> math.tan(100deg); </span><span style="color:#6A737D;">// -5.6712818196</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> math.tan(1rad); </span><span style="color:#6A737D;">// 1.5574077247</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> math.tan(1); </span><span style="color:#6A737D;">// 1.5574077247</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> math.tan(100deg); </span><span style="color:#6A737D;">// -5.6712818196</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> math.tan(1rad); </span><span style="color:#6A737D;">// 1.5574077247</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> math.tan(1); </span><span style="color:#6A737D;">// 1.5574077247</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#85E89D;">math</span><span style="color:#E1E4E8;">.acos(</span><span style="color:#FFAB70;">$number</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">//=&gt; number</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#22863A;">math</span><span style="color:#24292E;">.acos(</span><span style="color:#E36209;">$number</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">//=&gt; number</span></span></code></pre></div><p>互換性:</p><ul><li>Dart Sass: since 1.25.0</li><li>LibSass: ✗</li><li>Ruby Sass: ✗</li></ul><p>$numberのアークサインをdegで返します。</p><p>$numberは無単位でなければなりません。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> math.acos(0.5); </span><span style="color:#6A737D;">// 60deg</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> math.acos(2); </span><span style="color:#6A737D;">// NaNdeg</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> math.acos(0.5); </span><span style="color:#6A737D;">// 60deg</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> math.acos(2); </span><span style="color:#6A737D;">// NaNdeg</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#85E89D;">math</span><span style="color:#E1E4E8;">.asin(</span><span style="color:#FFAB70;">$number</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">//=&gt; number</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#22863A;">math</span><span style="color:#24292E;">.asin(</span><span style="color:#E36209;">$number</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">//=&gt; number</span></span></code></pre></div><p>互換性:</p><ul><li>Dart Sass: since 1.25.0</li><li>LibSass: ✗</li><li>Ruby Sass: ✗</li></ul><p>$numberのアークサインをdegで返します。</p><p>$numberは無単位でなければなりません。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> math.asin(0.5); </span><span style="color:#6A737D;">// 30deg</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> math.asin(2); </span><span style="color:#6A737D;">// NaNdeg</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> math.asin(0.5); </span><span style="color:#6A737D;">// 30deg</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> math.asin(2); </span><span style="color:#6A737D;">// NaNdeg</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#85E89D;">math</span><span style="color:#E1E4E8;">.atan(</span><span style="color:#FFAB70;">$number</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">//=&gt; number</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#22863A;">math</span><span style="color:#24292E;">.atan(</span><span style="color:#E36209;">$number</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">//=&gt; number</span></span></code></pre></div><p>互換性:</p><ul><li>Dart Sass: since 1.25.0</li><li>LibSass: ✗</li><li>Ruby Sass: ✗</li></ul><p>$numberのアークタンジェントをdegで返します。</p><p>$numberは無単位でなければなりません。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> math.atan(10); </span><span style="color:#6A737D;">// 84.2894068625deg</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> math.atan(10); </span><span style="color:#6A737D;">// 84.2894068625deg</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#85E89D;">math</span><span style="color:#E1E4E8;">.atan2(</span><span style="color:#FFAB70;">$y</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">$x</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">//=&gt; number</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#22863A;">math</span><span style="color:#24292E;">.atan2(</span><span style="color:#E36209;">$y</span><span style="color:#24292E;">, </span><span style="color:#E36209;">$x</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">//=&gt; number</span></span></code></pre></div><p>互換性:</p><ul><li>Dart Sass: since 1.25.0</li><li>LibSass: ✗</li><li>Ruby Sass: ✗</li></ul><p>yとxの2引数のアークタンジェントをdegで返します。</p><p>yとxは互換性のある単位を持つか、単位なしである必要があります。</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>💡 Fun fact:</p><p>math.atan2($y, x) と atan(math.div(y, $x)) は、問題の点の象限を保持するため、区別されます。例えば， math.atan2(1, -1) は点 (-1, 1) に対応し，135deg を返します． これに対して， math.atan(math.div(1, -1)) と math.atan(math.div(-1, 1)) は最初に atan(-1) に解決するので，両方とも -45deg を返します．</p></div><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> math.atan2(-1, 1); </span><span style="color:#6A737D;">// 135deg</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> math.atan2(-1, 1); </span><span style="color:#6A737D;">// 135deg</span></span></code></pre></div><h3 id="ユニット関数" tabindex="-1">ユニット関数 <a class="header-anchor" href="#ユニット関数" aria-label="Permalink to &quot;ユニット関数&quot;">​</a></h3><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#85E89D;">math</span><span style="color:#E1E4E8;">.compatible(</span><span style="color:#FFAB70;">$number1</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">$number2</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">comparable(</span><span style="color:#FFAB70;">$number1</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">$number2</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">//=&gt; boolean</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#22863A;">math</span><span style="color:#24292E;">.compatible(</span><span style="color:#E36209;">$number1</span><span style="color:#24292E;">, </span><span style="color:#E36209;">$number2</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">comparable(</span><span style="color:#E36209;">$number1</span><span style="color:#24292E;">, </span><span style="color:#E36209;">$number2</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">//=&gt; boolean</span></span></code></pre></div><p>$number1 と $number2 が互換性のある単位を持っているかどうかを返します。</p><p>これが真を返した場合、$number1 と $number2 は安全に加算、減算、および比較することができます。そうでない場合は、エラーが発生します。</p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>⚠️ Heads up!</p><p>この関数のグローバル名はcomparableですが、sass:mathモジュールに追加されたときに、この関数が何をするのかをより明確に伝えるためにcompatibleに名前が変更されました。</p></div><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> math.compatible(2px, 1px); </span><span style="color:#6A737D;">// true</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> math.compatible(100px, 3em); </span><span style="color:#6A737D;">// false</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> math.compatible(10cm, 3mm); </span><span style="color:#6A737D;">// true</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> math.compatible(2px, 1px); </span><span style="color:#6A737D;">// true</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> math.compatible(100px, 3em); </span><span style="color:#6A737D;">// false</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> math.compatible(10cm, 3mm); </span><span style="color:#6A737D;">// true</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#85E89D;">math</span><span style="color:#E1E4E8;">.is-unitless(</span><span style="color:#FFAB70;">$number</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">unitless(</span><span style="color:#FFAB70;">$number</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">//=&gt; boolean</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#22863A;">math</span><span style="color:#24292E;">.is-unitless(</span><span style="color:#E36209;">$number</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">unitless(</span><span style="color:#E36209;">$number</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">//=&gt; boolean</span></span></code></pre></div><p>$numberが単位を持たないかどうかを返します。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> math.is-unitless(100); </span><span style="color:#6A737D;">// true</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> math.is-unitless(100px); </span><span style="color:#6A737D;">// false</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> math.is-unitless(100); </span><span style="color:#6A737D;">// true</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> math.is-unitless(100px); </span><span style="color:#6A737D;">// false</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#85E89D;">math</span><span style="color:#E1E4E8;">.unit(</span><span style="color:#FFAB70;">$number</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">unit(</span><span style="color:#FFAB70;">$number</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">//=&gt; quoted string</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#22863A;">math</span><span style="color:#24292E;">.unit(</span><span style="color:#E36209;">$number</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">unit(</span><span style="color:#E36209;">$number</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">//=&gt; quoted string</span></span></code></pre></div><p>$numberの単位を文字列で返します。</p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>⚠️ Heads up!</p><p>この関数はデバッグ用です。その出力形式は、Sass のバージョンまたは実装間で一貫していることは保証されません。</p></div><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> math.unit(100); </span><span style="color:#6A737D;">// &quot;&quot;</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> math.unit(100px); </span><span style="color:#6A737D;">// &quot;px&quot;</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> math.unit(5px * 10px); </span><span style="color:#6A737D;">// &quot;px*px&quot;</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> math.unit(math.div(5px, 1s)); </span><span style="color:#6A737D;">// &quot;px/s&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> math.unit(100); </span><span style="color:#6A737D;">// &quot;&quot;</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> math.unit(100px); </span><span style="color:#6A737D;">// &quot;px&quot;</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> math.unit(5px * 10px); </span><span style="color:#6A737D;">// &quot;px*px&quot;</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> math.unit(math.div(5px, 1s)); </span><span style="color:#6A737D;">// &quot;px/s&quot;</span></span></code></pre></div><h3 id="その他の関数" tabindex="-1">その他の関数 <a class="header-anchor" href="#その他の関数" aria-label="Permalink to &quot;その他の関数&quot;">​</a></h3><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#85E89D;">math</span><span style="color:#E1E4E8;">.div(</span><span style="color:#FFAB70;">$number1</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">$number2</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">//=&gt; number</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#22863A;">math</span><span style="color:#24292E;">.div(</span><span style="color:#E36209;">$number1</span><span style="color:#24292E;">, </span><span style="color:#E36209;">$number2</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">//=&gt; number</span></span></code></pre></div><p>互換性:</p><ul><li>Dart Sass: since 1.33.0</li><li>LibSass: ✗</li><li>Ruby Sass: ✗</li></ul><p>$number1 を $number2 で割った結果を返します。</p><p>両方の数字に共通する単位は、すべて相殺されます。number1にあってnumber2にない単位は戻り値の分子に、number2にあってnumber1にない単位は戻り値の分母に入ることになります。</p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>⚠️ Heads up!</p><p>後方互換性のために、これは非推奨の/演算子と全く同じ結果を返し、間に/文字がある2つの文字列を連結することを含む。しかし、この動作はいずれ削除されるため、新しいスタイルシートでは使用しない方が良い。</p></div><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> math.div(1, 2); </span><span style="color:#6A737D;">// 0.5</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> math.div(100px, 5px); </span><span style="color:#6A737D;">// 20</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> math.div(100px, 5); </span><span style="color:#6A737D;">// 20px</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> math.div(100px, 5s); </span><span style="color:#6A737D;">// 20px/s</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> math.div(1, 2); </span><span style="color:#6A737D;">// 0.5</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> math.div(100px, 5px); </span><span style="color:#6A737D;">// 20</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> math.div(100px, 5); </span><span style="color:#6A737D;">// 20px</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> math.div(100px, 5s); </span><span style="color:#6A737D;">// 20px/s</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#85E89D;">math</span><span style="color:#E1E4E8;">.percentage(</span><span style="color:#FFAB70;">$number</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">percentage(</span><span style="color:#FFAB70;">$number</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">//=&gt; number</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#22863A;">math</span><span style="color:#24292E;">.percentage(</span><span style="color:#E36209;">$number</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">percentage(</span><span style="color:#E36209;">$number</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">//=&gt; number</span></span></code></pre></div><p>単位のない $number (通常は 0 と 1 の間の 10 進数) をパーセンテージに変換します。</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>💡 Fun fact:</p><p>この関数は、$number * 100% と同じです。</p></div><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> math.percentage(0.2); </span><span style="color:#6A737D;">// 20%</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> math.percentage(math.div(100px, 50px)); </span><span style="color:#6A737D;">// 200%</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> math.percentage(0.2); </span><span style="color:#6A737D;">// 20%</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> math.percentage(math.div(100px, 50px)); </span><span style="color:#6A737D;">// 200%</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#85E89D;">math</span><span style="color:#E1E4E8;">.random(</span><span style="color:#FFAB70;">$limit</span><span style="color:#E1E4E8;">: null)</span></span>
<span class="line"><span style="color:#79B8FF;">random</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">$limit:</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">null</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">//=&gt; number</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#22863A;">math</span><span style="color:#24292E;">.random(</span><span style="color:#E36209;">$limit</span><span style="color:#24292E;">: null)</span></span>
<span class="line"><span style="color:#005CC5;">random</span><span style="color:#24292E;">(</span><span style="color:#E36209;">$limit:</span><span style="color:#24292E;"> </span><span style="color:#E36209;">null</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">//=&gt; number</span></span></code></pre></div><p>$limit が NULL の場合、0 から 1 までのランダムな 10 進数を返します。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> math.random(); </span><span style="color:#6A737D;">// 0.2821251858</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> math.random(); </span><span style="color:#6A737D;">// 0.6221325814</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> math.random(); </span><span style="color:#6A737D;">// 0.2821251858</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> math.random(); </span><span style="color:#6A737D;">// 0.6221325814</span></span></code></pre></div><p>limitが1以上の数値の場合、1からlimitまでの間のランダムな整数を返します。</p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>⚠️ Heads up!</p><p>random() は、limit の単位を無視します。この動作は非推奨で、 random(limit) は引数 $limit と同じ単位のランダムな整数を返します。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> math.random(100px); </span><span style="color:#6A737D;">// 42</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> math.random(100px); </span><span style="color:#6A737D;">// 42</span></span></code></pre></div></div><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> math.random(10); </span><span style="color:#6A737D;">// 4</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> math.random(10000); </span><span style="color:#6A737D;">// 5373</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> math.random(10); </span><span style="color:#6A737D;">// 4</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> math.random(10000); </span><span style="color:#6A737D;">// 5373</span></span></code></pre></div><h2 id="sass-meta" tabindex="-1">sass:meta <a class="header-anchor" href="#sass-meta" aria-label="Permalink to &quot;sass:meta&quot;">​</a></h2><p>互換性:</p><ul><li>Dart Sass: since 1.23.0</li><li>LibSass: ✗</li><li>Ruby Sass: ✗</li><li>▶</li></ul><h3 id="mixins" tabindex="-1">Mixins <a class="header-anchor" href="#mixins" aria-label="Permalink to &quot;Mixins&quot;">​</a></h3><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#85E89D;">meta</span><span style="color:#E1E4E8;">.load-css(</span><span style="color:#FFAB70;">$url</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">$with</span><span style="color:#E1E4E8;">: null)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#22863A;">meta</span><span style="color:#24292E;">.load-css(</span><span style="color:#E36209;">$url</span><span style="color:#24292E;">, </span><span style="color:#E36209;">$with</span><span style="color:#24292E;">: null)</span></span></code></pre></div><p>互換性:</p><ul><li>Dart Sass: since 1.23.0</li><li>LibSass: ✗</li><li>Ruby Sass: ✗</li><li>▶</li></ul><p>url にあるモジュールをロードし、その CSS をこの mixin のコンテンツとして書き込んだかのように含めます。with パラメータは、モジュールの設定を行います。渡す場合は、変数名（なし）から、読み込んだモジュールで使用するそれらの変数の値へのマップである必要があります。</p><p>$url が relative の場合、meta.load-css() が含まれるファイルからの相対パスとして解釈されます。</p><p><code>@use</code>ルールのように。</p><ul><li>これは、与えられたモジュールが異なる方法で複数回ロードされたとしても、一度だけ評価します。</li><li>これは、すでにロードされたモジュールに設定を提供することはできません。</li></ul><p><code>@use</code>ルールとは異なります。</p><ul><li>これは、ロードされたモジュールのメンバーを現在のモジュールで利用できるようにするものではありません。</li><li>これはスタイルシートのどこでも使用することができます。スタイル・ルールの中に入れて、ネストされたスタイルを作成することもできます。</li><li>読み込まれるモジュールの URL は、変数から得ることができ、補間を含むことができます。</li></ul><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>⚠️ Heads up!</p><p>$urlパラメータは、@useルールに渡すようなURLを含む文字列でなければなりません。CSSのurl()であってはいけません!</p></div><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-FTiTA" id="tab-igE8xKW" checked="checked"><label for="tab-igE8xKW">SCSS</label><input type="radio" name="group-FTiTA" id="tab-55ZD6dL"><label for="tab-55ZD6dL">CSS</label></div><div class="blocks"><div class="language-scss vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// dark-theme/_code.scss</span></span>
<span class="line"><span style="color:#FFAB70;">$border-contrast</span><span style="color:#E1E4E8;">: false </span><span style="color:#F97583;">!default</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#85E89D;">code</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">background-color</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">#6b717f</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">color</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">#d2e1dd</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">@if</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">$border-contrast</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">border-color</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">#dadbdf</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// style.scss</span></span>
<span class="line"><span style="color:#F97583;">@use</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;sass:meta&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#85E89D;">body</span><span style="color:#B392F0;">.dark</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">@include</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">meta</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">load-css</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;dark-theme/code&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#FFAB70;">$with</span><span style="color:#E1E4E8;">: (</span><span style="color:#9ECBFF;">&quot;border-contrast&quot;</span><span style="color:#E1E4E8;">: true));</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// dark-theme/_code.scss</span></span>
<span class="line"><span style="color:#E36209;">$border-contrast</span><span style="color:#24292E;">: false </span><span style="color:#D73A49;">!default</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#22863A;">code</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">background-color</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">#6b717f</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">color</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">#d2e1dd</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">@if</span><span style="color:#24292E;"> </span><span style="color:#E36209;">$border-contrast</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">border-color</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">#dadbdf</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// style.scss</span></span>
<span class="line"><span style="color:#D73A49;">@use</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;sass:meta&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#22863A;">body</span><span style="color:#6F42C1;">.dark</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">@include</span><span style="color:#24292E;"> </span><span style="color:#E36209;">meta</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">load-css</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;dark-theme/code&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#E36209;">$with</span><span style="color:#24292E;">: (</span><span style="color:#032F62;">&quot;border-contrast&quot;</span><span style="color:#24292E;">: true));</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#85E89D;">body</span><span style="color:#B392F0;">.dark</span><span style="color:#E1E4E8;"> </span><span style="color:#85E89D;">code</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">background-color</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">#6b717f</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">color</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">#d2e1dd</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">border-color</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">#dadbdf</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#22863A;">body</span><span style="color:#6F42C1;">.dark</span><span style="color:#24292E;"> </span><span style="color:#22863A;">code</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">background-color</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">#6b717f</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">color</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">#d2e1dd</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">border-color</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">#dadbdf</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div></div></div><h3 id="関数" tabindex="-1">関数 <a class="header-anchor" href="#関数" aria-label="Permalink to &quot;関数&quot;">​</a></h3><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#85E89D;">meta</span><span style="color:#E1E4E8;">.calc-args(</span><span style="color:#FFAB70;">$calc</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">//=&gt; list</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#22863A;">meta</span><span style="color:#24292E;">.calc-args(</span><span style="color:#E36209;">$calc</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">//=&gt; list</span></span></code></pre></div><p>互換性:</p><ul><li>Dart Sass: since 1.40.0</li><li>LibSass: ✗</li><li>Ruby Sass: ✗</li></ul><p>指定された計算の引数を返します。</p><p>引数が数値またはネストされた計算である場合、その型として返されます。それ以外の場合は、引用符で囲まれていない文字列として返される。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> meta.calc-args(calc(100px + 10%)); </span><span style="color:#6A737D;">// unquote(&quot;100px + 10%&quot;)</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> meta.calc-args(clamp(50px, var(</span><span style="color:#FFAB70;">--width</span><span style="color:#E1E4E8;">), 1000px)); </span><span style="color:#6A737D;">// 50px, unquote(&quot;var(--width)&quot;), 1000px</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> meta.calc-args(calc(100px + 10%)); </span><span style="color:#6A737D;">// unquote(&quot;100px + 10%&quot;)</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> meta.calc-args(clamp(50px, var(</span><span style="color:#E36209;">--width</span><span style="color:#24292E;">), 1000px)); </span><span style="color:#6A737D;">// 50px, unquote(&quot;var(--width)&quot;), 1000px</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#85E89D;">meta</span><span style="color:#E1E4E8;">.calc-name(</span><span style="color:#FFAB70;">$calc</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">//=&gt; quoted string</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#22863A;">meta</span><span style="color:#24292E;">.calc-name(</span><span style="color:#E36209;">$calc</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">//=&gt; quoted string</span></span></code></pre></div><p>互換性:</p><ul><li>Dart Sass: since 1.40.0</li><li>LibSass: ✗</li><li>Ruby Sass: ✗</li></ul><p>指定された計算の名前を返します。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> meta.calc-name(calc(100px + 10%)); </span><span style="color:#6A737D;">// &quot;calc&quot;</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> meta.calc-name(clamp(50px, var(</span><span style="color:#FFAB70;">--width</span><span style="color:#E1E4E8;">), 1000px)); </span><span style="color:#6A737D;">// &quot;clamp&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> meta.calc-name(calc(100px + 10%)); </span><span style="color:#6A737D;">// &quot;calc&quot;</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> meta.calc-name(clamp(50px, var(</span><span style="color:#E36209;">--width</span><span style="color:#24292E;">), 1000px)); </span><span style="color:#6A737D;">// &quot;clamp&quot;</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#85E89D;">meta</span><span style="color:#E1E4E8;">.call(</span><span style="color:#FFAB70;">$function</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">$args</span><span style="color:#E1E4E8;">...)</span></span>
<span class="line"><span style="color:#E1E4E8;">call(</span><span style="color:#FFAB70;">$function</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">$args</span><span style="color:#E1E4E8;">...)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#22863A;">meta</span><span style="color:#24292E;">.call(</span><span style="color:#E36209;">$function</span><span style="color:#24292E;">, </span><span style="color:#E36209;">$args</span><span style="color:#24292E;">...)</span></span>
<span class="line"><span style="color:#24292E;">call(</span><span style="color:#E36209;">$function</span><span style="color:#24292E;">, </span><span style="color:#E36209;">$args</span><span style="color:#24292E;">...)</span></span></code></pre></div><p>互換性 (引数の種類):</p><ul><li>Dart Sass: ✓</li><li>LibSass: since 3.5.0</li><li>Ruby Sass: since 3.5.0</li><li>▶</li></ul><p>$args を指定して $function を起動し、結果を返します。</p><p>この$functionは、meta.get-function()によって返される関数でなければなりません。</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-XUm9t" id="tab-Ot_Z66u" checked="checked"><label for="tab-Ot_Z66u">scss</label><input type="radio" name="group-XUm9t" id="tab-YqQdZlC"><label for="tab-YqQdZlC">css</label><input type="radio" name="group-XUm9t" id="tab-iqjsYxM"><label for="tab-iqjsYxM">scss</label><input type="radio" name="group-XUm9t" id="tab-eDMmFMe"><label for="tab-eDMmFMe">scss</label><input type="radio" name="group-XUm9t" id="tab-wW0g-Ou"><label for="tab-wW0g-Ou">scss</label><input type="radio" name="group-XUm9t" id="tab-_J25js3"><label for="tab-_J25js3">scss</label><input type="radio" name="group-XUm9t" id="tab-qCV624L"><label for="tab-qCV624L">scss</label><input type="radio" name="group-XUm9t" id="tab-gruV8ZE"><label for="tab-gruV8ZE">scss</label><input type="radio" name="group-XUm9t" id="tab-W-UR3ah"><label for="tab-W-UR3ah">scss</label><input type="radio" name="group-XUm9t" id="tab-Ax1zTd4"><label for="tab-Ax1zTd4">scss</label><input type="radio" name="group-XUm9t" id="tab-mpJfMz_"><label for="tab-mpJfMz_">scss</label><input type="radio" name="group-XUm9t" id="tab-X0eLXP6"><label for="tab-X0eLXP6">scss</label><input type="radio" name="group-XUm9t" id="tab-L3BY2jM"><label for="tab-L3BY2jM">scss</label></div><div class="blocks"><div class="language-scss vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">@use</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;sass:list&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">@use</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;sass:meta&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">@use</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;sass:string&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">/// $condition が \`true\` を返すすべての要素を削除した $list のコピーを返します。</span></span>
<span class="line"><span style="color:#F97583;">@function</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">remove-where</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">$list</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">$condition</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FFAB70;">$new-list</span><span style="color:#E1E4E8;">: ();</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FFAB70;">$separator</span><span style="color:#E1E4E8;">: </span><span style="color:#FFAB70;">list</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">separator</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">$list</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">@each</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">$element</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">in</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">$list</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">@if</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">not</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">meta</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">call</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">$condition</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">$element</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#FFAB70;">$new-list</span><span style="color:#E1E4E8;">: </span><span style="color:#FFAB70;">list</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">append</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">$new-list</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">$element</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">$separator:</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">$separator</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">@return</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">$new-list</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFAB70;">$fonts</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">Tahoma</span><span style="color:#E1E4E8;">, Geneva, </span><span style="color:#9ECBFF;">&quot;Helvetica Neue&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">Helvetica</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">Arial</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">sans-serif</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#85E89D;">content</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">@function</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">contains-helvetica</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">$string</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">@return</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">string</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">index</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">$string</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;Helvetica&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">font-family</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">remove-where</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">$fonts</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">meta</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">get-function</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;contains-helvetica&quot;</span><span style="color:#E1E4E8;">));</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">@use</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;sass:list&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">@use</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;sass:meta&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">@use</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;sass:string&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">/// $condition が \`true\` を返すすべての要素を削除した $list のコピーを返します。</span></span>
<span class="line"><span style="color:#D73A49;">@function</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">remove-where</span><span style="color:#24292E;">(</span><span style="color:#E36209;">$list</span><span style="color:#24292E;">, </span><span style="color:#E36209;">$condition</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">$new-list</span><span style="color:#24292E;">: ();</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">$separator</span><span style="color:#24292E;">: </span><span style="color:#E36209;">list</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">separator</span><span style="color:#24292E;">(</span><span style="color:#E36209;">$list</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">@each</span><span style="color:#24292E;"> </span><span style="color:#E36209;">$element</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> </span><span style="color:#E36209;">$list</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">@if</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">not</span><span style="color:#24292E;"> </span><span style="color:#E36209;">meta</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">call</span><span style="color:#24292E;">(</span><span style="color:#E36209;">$condition</span><span style="color:#24292E;">, </span><span style="color:#E36209;">$element</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#E36209;">$new-list</span><span style="color:#24292E;">: </span><span style="color:#E36209;">list</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">append</span><span style="color:#24292E;">(</span><span style="color:#E36209;">$new-list</span><span style="color:#24292E;">, </span><span style="color:#E36209;">$element</span><span style="color:#24292E;">, </span><span style="color:#E36209;">$separator:</span><span style="color:#24292E;"> </span><span style="color:#E36209;">$separator</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">@return</span><span style="color:#24292E;"> </span><span style="color:#E36209;">$new-list</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E36209;">$fonts</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">Tahoma</span><span style="color:#24292E;">, Geneva, </span><span style="color:#032F62;">&quot;Helvetica Neue&quot;</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">Helvetica</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">Arial</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">sans-serif</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#22863A;">content</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">@function</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">contains-helvetica</span><span style="color:#24292E;">(</span><span style="color:#E36209;">$string</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">@return</span><span style="color:#24292E;"> </span><span style="color:#E36209;">string</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">index</span><span style="color:#24292E;">(</span><span style="color:#E36209;">$string</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;Helvetica&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">font-family</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">remove-where</span><span style="color:#24292E;">(</span><span style="color:#E36209;">$fonts</span><span style="color:#24292E;">, </span><span style="color:#E36209;">meta</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">get-function</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;contains-helvetica&quot;</span><span style="color:#24292E;">));</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">.content</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">font-family</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">Tahoma</span><span style="color:#E1E4E8;">, Geneva, </span><span style="color:#79B8FF;">Arial</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">sans-serif</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">.content</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">font-family</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">Tahoma</span><span style="color:#24292E;">, Geneva, </span><span style="color:#005CC5;">Arial</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">sans-serif</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#85E89D;">meta</span><span style="color:#E1E4E8;">.content-exists()</span></span>
<span class="line"><span style="color:#E1E4E8;">content-exists() </span><span style="color:#6A737D;">//=&gt; boolean</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#22863A;">meta</span><span style="color:#24292E;">.content-exists()</span></span>
<span class="line"><span style="color:#24292E;">content-exists() </span><span style="color:#6A737D;">//=&gt; boolean</span></span></code></pre></div><p>現在の mixin に <code>@content</code> ブロックが渡されたかどうかを返します。</p><p>ミキシンの外部で呼び出された場合はエラーをスローします。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">@mixin</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">debug-content-exists</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> meta.content-exists();</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">@content</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">@include</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">debug-content-exists</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">// false</span></span>
<span class="line"><span style="color:#F97583;">@include</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">debug-content-exists</span><span style="color:#E1E4E8;"> { </span><span style="color:#6A737D;">// true</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// Content!</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">@mixin</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">debug-content-exists</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> meta.content-exists();</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">@content</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">@include</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">debug-content-exists</span><span style="color:#24292E;">; </span><span style="color:#6A737D;">// false</span></span>
<span class="line"><span style="color:#D73A49;">@include</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">debug-content-exists</span><span style="color:#24292E;"> { </span><span style="color:#6A737D;">// true</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// Content!</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#85E89D;">meta</span><span style="color:#E1E4E8;">.feature-exists(</span><span style="color:#FFAB70;">$feature</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">feature-exists(</span><span style="color:#FFAB70;">$feature</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">//=&gt; boolean</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#22863A;">meta</span><span style="color:#24292E;">.feature-exists(</span><span style="color:#E36209;">$feature</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">feature-exists(</span><span style="color:#E36209;">$feature</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">//=&gt; boolean</span></span></code></pre></div><p>現在の Sass 実装が $feature をサポートしているかどうかを返します。</p><p>feature は文字列である必要があります。現在認識されている機能は以下の通りです。</p><ul><li>global-variable-shadowing は、ローカル変数がグローバル変数をシャドウすることを意味します（!global フラグがない限り）。</li><li>extend-selector-pseudoclass, これは @extend ルールが :not() のような擬似クラスにネストされたセレクタに影響することを意味します。</li><li>units-level3, これは、単位演算が CSS Values and Units Level 3 で定義された単位をサポートすることを意味します。</li><li>at-error, これは @error ルールがサポートされることを意味します。</li><li>custom-property は、カスタムプロパティ宣言の値が補間以外の表現に対応していないことを意味します。</li></ul><p>認識できない$featureに対してはfalseを返します。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> meta.feature-exists(</span><span style="color:#9ECBFF;">&quot;at-error&quot;</span><span style="color:#E1E4E8;">); </span><span style="color:#6A737D;">// true</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> meta.feature-exists(</span><span style="color:#9ECBFF;">&quot;unrecognized&quot;</span><span style="color:#E1E4E8;">); </span><span style="color:#6A737D;">// false</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> meta.feature-exists(</span><span style="color:#032F62;">&quot;at-error&quot;</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">// true</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> meta.feature-exists(</span><span style="color:#032F62;">&quot;unrecognized&quot;</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">// false</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#85E89D;">meta</span><span style="color:#E1E4E8;">.function-exists(</span><span style="color:#FFAB70;">$name</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">$module</span><span style="color:#E1E4E8;">: null)</span></span>
<span class="line"><span style="color:#79B8FF;">function-exists</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">$name</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">//=&gt; boolean</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#22863A;">meta</span><span style="color:#24292E;">.function-exists(</span><span style="color:#E36209;">$name</span><span style="color:#24292E;">, </span><span style="color:#E36209;">$module</span><span style="color:#24292E;">: null)</span></span>
<span class="line"><span style="color:#005CC5;">function-exists</span><span style="color:#24292E;">(</span><span style="color:#E36209;">$name</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">//=&gt; boolean</span></span></code></pre></div><p>$nameという名前の関数が、組み込み関数として、あるいはユーザー定義関数として定義されているかどうかを返します。</p><p>moduleが渡された場合、これは、moduleという名前のモジュールに関数が定義されているかどうかもチェックします。moduleは、現在のファイルの[@use rule][]の名前空間と一致する文字列である必要があります。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">@use</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;sass:math&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> meta.function-exists(</span><span style="color:#9ECBFF;">&quot;div&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;math&quot;</span><span style="color:#E1E4E8;">); </span><span style="color:#6A737D;">// true</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> meta.function-exists(</span><span style="color:#9ECBFF;">&quot;scale-color&quot;</span><span style="color:#E1E4E8;">); </span><span style="color:#6A737D;">// true</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> meta.function-exists(</span><span style="color:#9ECBFF;">&quot;add&quot;</span><span style="color:#E1E4E8;">); </span><span style="color:#6A737D;">// false</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">@function</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">add</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">$num1</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">$num2</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">@return</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">$num1</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">$num2</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> meta.function-exists(</span><span style="color:#9ECBFF;">&quot;add&quot;</span><span style="color:#E1E4E8;">); </span><span style="color:#6A737D;">// true</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">@use</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;sass:math&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> meta.function-exists(</span><span style="color:#032F62;">&quot;div&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;math&quot;</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">// true</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> meta.function-exists(</span><span style="color:#032F62;">&quot;scale-color&quot;</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">// true</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> meta.function-exists(</span><span style="color:#032F62;">&quot;add&quot;</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">// false</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">@function</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">add</span><span style="color:#24292E;">(</span><span style="color:#E36209;">$num1</span><span style="color:#24292E;">, </span><span style="color:#E36209;">$num2</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">@return</span><span style="color:#24292E;"> </span><span style="color:#E36209;">$num1</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#E36209;">$num2</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> meta.function-exists(</span><span style="color:#032F62;">&quot;add&quot;</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">// true</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#85E89D;">meta</span><span style="color:#E1E4E8;">.get-function(</span><span style="color:#FFAB70;">$name</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">$css</span><span style="color:#E1E4E8;">: false, </span><span style="color:#FFAB70;">$module</span><span style="color:#E1E4E8;">: null)</span></span>
<span class="line"><span style="color:#79B8FF;">get-function</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">$name</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">$css:</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">false</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">$module:</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">null</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">//=&gt; function</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#22863A;">meta</span><span style="color:#24292E;">.get-function(</span><span style="color:#E36209;">$name</span><span style="color:#24292E;">, </span><span style="color:#E36209;">$css</span><span style="color:#24292E;">: false, </span><span style="color:#E36209;">$module</span><span style="color:#24292E;">: null)</span></span>
<span class="line"><span style="color:#005CC5;">get-function</span><span style="color:#24292E;">(</span><span style="color:#E36209;">$name</span><span style="color:#24292E;">, </span><span style="color:#E36209;">$css:</span><span style="color:#24292E;"> </span><span style="color:#E36209;">false</span><span style="color:#24292E;">, </span><span style="color:#E36209;">$module:</span><span style="color:#24292E;"> </span><span style="color:#E36209;">null</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">//=&gt; function</span></span></code></pre></div><p>$nameという名前の関数を返します。</p><p>moduleがNULLの場合、名前空間なしでnameという名前の関数を返します(グローバル組み込み関数を含む)。そうでない場合は、moduleは現在のファイル内の@useルールの名前空間に一致する文字列でなければならず、その場合、これはnameという名前のそのモジュール内の関数を返します。</p><p>デフォルトでは、nameがSass関数を参照していない場合、これはエラーを投げます。しかし、cssがtrueの場合、代わりにプレーンなCSS関数を返します。</p><p>返された関数は、meta.call() を使って呼び出すことができます。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">@use</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;sass:list&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">@use</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;sass:meta&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">@use</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;sass:string&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">/// $condition が \`true\` を返すすべての要素を削除した $list のコピーを返します。</span></span>
<span class="line"><span style="color:#F97583;">@function</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">remove-where</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">$list</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">$condition</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FFAB70;">$new-list</span><span style="color:#E1E4E8;">: ();</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FFAB70;">$separator</span><span style="color:#E1E4E8;">: </span><span style="color:#FFAB70;">list</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">separator</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">$list</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">@each</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">$element</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">in</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">$list</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">@if</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">not</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">meta</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">call</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">$condition</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">$element</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#FFAB70;">$new-list</span><span style="color:#E1E4E8;">: </span><span style="color:#FFAB70;">list</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">append</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">$new-list</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">$element</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">$separator:</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">$separator</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">@return</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">$new-list</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFAB70;">$fonts</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">Tahoma</span><span style="color:#E1E4E8;">, Geneva, </span><span style="color:#9ECBFF;">&quot;Helvetica Neue&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">Helvetica</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">Arial</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">sans-serif</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#85E89D;">content</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">@function</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">contains-helvetica</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">$string</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">@return</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">string</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">index</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">$string</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;Helvetica&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">font-family</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">remove-where</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">$fonts</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">meta</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">get-function</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;contains-helvetica&quot;</span><span style="color:#E1E4E8;">));</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">@use</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;sass:list&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">@use</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;sass:meta&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">@use</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;sass:string&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">/// $condition が \`true\` を返すすべての要素を削除した $list のコピーを返します。</span></span>
<span class="line"><span style="color:#D73A49;">@function</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">remove-where</span><span style="color:#24292E;">(</span><span style="color:#E36209;">$list</span><span style="color:#24292E;">, </span><span style="color:#E36209;">$condition</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">$new-list</span><span style="color:#24292E;">: ();</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">$separator</span><span style="color:#24292E;">: </span><span style="color:#E36209;">list</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">separator</span><span style="color:#24292E;">(</span><span style="color:#E36209;">$list</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">@each</span><span style="color:#24292E;"> </span><span style="color:#E36209;">$element</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> </span><span style="color:#E36209;">$list</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">@if</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">not</span><span style="color:#24292E;"> </span><span style="color:#E36209;">meta</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">call</span><span style="color:#24292E;">(</span><span style="color:#E36209;">$condition</span><span style="color:#24292E;">, </span><span style="color:#E36209;">$element</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#E36209;">$new-list</span><span style="color:#24292E;">: </span><span style="color:#E36209;">list</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">append</span><span style="color:#24292E;">(</span><span style="color:#E36209;">$new-list</span><span style="color:#24292E;">, </span><span style="color:#E36209;">$element</span><span style="color:#24292E;">, </span><span style="color:#E36209;">$separator:</span><span style="color:#24292E;"> </span><span style="color:#E36209;">$separator</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">@return</span><span style="color:#24292E;"> </span><span style="color:#E36209;">$new-list</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E36209;">$fonts</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">Tahoma</span><span style="color:#24292E;">, Geneva, </span><span style="color:#032F62;">&quot;Helvetica Neue&quot;</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">Helvetica</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">Arial</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">sans-serif</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#22863A;">content</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">@function</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">contains-helvetica</span><span style="color:#24292E;">(</span><span style="color:#E36209;">$string</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">@return</span><span style="color:#24292E;"> </span><span style="color:#E36209;">string</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">index</span><span style="color:#24292E;">(</span><span style="color:#E36209;">$string</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;Helvetica&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">font-family</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">remove-where</span><span style="color:#24292E;">(</span><span style="color:#E36209;">$fonts</span><span style="color:#24292E;">, </span><span style="color:#E36209;">meta</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">get-function</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;contains-helvetica&quot;</span><span style="color:#24292E;">));</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#85E89D;">meta</span><span style="color:#E1E4E8;">.global-variable-exists(</span><span style="color:#FFAB70;">$name</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">$module</span><span style="color:#E1E4E8;">: null)</span></span>
<span class="line"><span style="color:#79B8FF;">global-variable-exists</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">$name</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">$module:</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">null</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">//=&gt; boolean</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#22863A;">meta</span><span style="color:#24292E;">.global-variable-exists(</span><span style="color:#E36209;">$name</span><span style="color:#24292E;">, </span><span style="color:#E36209;">$module</span><span style="color:#24292E;">: null)</span></span>
<span class="line"><span style="color:#005CC5;">global-variable-exists</span><span style="color:#24292E;">(</span><span style="color:#E36209;">$name</span><span style="color:#24292E;">, </span><span style="color:#E36209;">$module:</span><span style="color:#24292E;"> </span><span style="color:#E36209;">null</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">//=&gt; boolean</span></span></code></pre></div><p>nameという名前のグローバル変数が（を除いた）存在するかどうかを返します。</p><p>moduleがNULLの場合、名前空間を持たないnameという変数が存在するかどうかを返します。そうでない場合は、moduleは現在のファイル内の@useルールの名前空間に一致する文字列でなければならず、その場合、これはそのモジュールがnameという名前の変数を持っているかどうかを返します。</p><p>meta.variable-exists()も参照してください。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> meta.global-variable-exists(</span><span style="color:#9ECBFF;">&quot;var1&quot;</span><span style="color:#E1E4E8;">); </span><span style="color:#6A737D;">// false</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFAB70;">$var1</span><span style="color:#E1E4E8;">: value;</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> meta.global-variable-exists(</span><span style="color:#9ECBFF;">&quot;var1&quot;</span><span style="color:#E1E4E8;">); </span><span style="color:#6A737D;">// true</span></span>
<span class="line"></span>
<span class="line"><span style="color:#85E89D;">h1</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// $var2 is local.</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FFAB70;">$var2</span><span style="color:#E1E4E8;">: value;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> meta.global-variable-exists(</span><span style="color:#9ECBFF;">&quot;var2&quot;</span><span style="color:#E1E4E8;">); </span><span style="color:#6A737D;">// false</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> meta.global-variable-exists(</span><span style="color:#032F62;">&quot;var1&quot;</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">// false</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E36209;">$var1</span><span style="color:#24292E;">: value;</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> meta.global-variable-exists(</span><span style="color:#032F62;">&quot;var1&quot;</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">// true</span></span>
<span class="line"></span>
<span class="line"><span style="color:#22863A;">h1</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// $var2 is local.</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">$var2</span><span style="color:#24292E;">: value;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> meta.global-variable-exists(</span><span style="color:#032F62;">&quot;var2&quot;</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">// false</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#85E89D;">meta</span><span style="color:#E1E4E8;">.inspect(</span><span style="color:#FFAB70;">$value</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">inspect(</span><span style="color:#FFAB70;">$value</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">//=&gt; unquoted string</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#22863A;">meta</span><span style="color:#24292E;">.inspect(</span><span style="color:#E36209;">$value</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">inspect(</span><span style="color:#E36209;">$value</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">//=&gt; unquoted string</span></span></code></pre></div><p>$value の文字列表現を返します。</p><p>CSS で表現できる値だけでなく、あらゆる Sass 値の表現を返します。そのため、その戻り値は有効なCSSであることは保証されません。</p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>⚠️ Heads up!</p><p>この関数はデバッグ用です。その出力形式は、Sass のバージョンまたは実装間で一貫していることは保証されません。</p></div></div></div><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> meta.inspect(10px 20px 30px); </span><span style="color:#6A737D;">// unquote(&quot;10px 20px 30px&quot;)</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> meta.inspect((</span><span style="color:#9ECBFF;">&quot;width&quot;</span><span style="color:#E1E4E8;">: 200px)); </span><span style="color:#6A737D;">// unquote(&#39;(&quot;width&quot;: 200px)&#39;)</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> meta.inspect(null); </span><span style="color:#6A737D;">// unquote(&quot;null&quot;)</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> meta.inspect(</span><span style="color:#9ECBFF;">&quot;Helvetica&quot;</span><span style="color:#E1E4E8;">); </span><span style="color:#6A737D;">// unquote(&#39;&quot;Helvetica&quot;&#39;)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> meta.inspect(10px 20px 30px); </span><span style="color:#6A737D;">// unquote(&quot;10px 20px 30px&quot;)</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> meta.inspect((</span><span style="color:#032F62;">&quot;width&quot;</span><span style="color:#24292E;">: 200px)); </span><span style="color:#6A737D;">// unquote(&#39;(&quot;width&quot;: 200px)&#39;)</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> meta.inspect(null); </span><span style="color:#6A737D;">// unquote(&quot;null&quot;)</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> meta.inspect(</span><span style="color:#032F62;">&quot;Helvetica&quot;</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">// unquote(&#39;&quot;Helvetica&quot;&#39;)</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#85E89D;">meta</span><span style="color:#E1E4E8;">.keywords(</span><span style="color:#FFAB70;">$args</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">keywords(</span><span style="color:#FFAB70;">$args</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">//=&gt; map</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#22863A;">meta</span><span style="color:#24292E;">.keywords(</span><span style="color:#E36209;">$args</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">keywords(</span><span style="color:#E36209;">$args</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">//=&gt; map</span></span></code></pre></div><p>任意の引数を取る mixin や関数に渡されたキーワードを返します。引数$argsは引数リストである必要があります。</p><p>キーワードは、引用符で囲まれていない文字列（$を含まない）としての 引数名から、それらの引数の値へのマップとして返されます。</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-4VnW-" id="tab-fre3hI0" checked="checked"><label for="tab-fre3hI0">SCSS</label><input type="radio" name="group-4VnW-" id="tab-17dnZ-c"><label for="tab-17dnZ-c">CSS</label></div><div class="blocks"><div class="language-scss vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">@use</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;sass:meta&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">@mixin</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">syntax-colors</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">$args</span><span style="color:#E1E4E8;">...) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> meta.keywords(</span><span style="color:#FFAB70;">$args</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// (string: #080, comment: #800, variable: #60b)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">@each</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">$name</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">$color</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">in</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">meta</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">keywords</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">$args</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">pre</span><span style="color:#E1E4E8;"> </span><span style="color:#85E89D;">span</span><span style="color:#B392F0;">.stx-</span><span style="color:#FFAB70;">#{$name}</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#79B8FF;">color</span><span style="color:#E1E4E8;">: </span><span style="color:#FFAB70;">$color</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">@include</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">syntax-colors</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FFAB70;">$string</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">#080</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FFAB70;">$comment</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">#800</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FFAB70;">$variable</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">#60b</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">@use</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;sass:meta&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">@mixin</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">syntax-colors</span><span style="color:#24292E;">(</span><span style="color:#E36209;">$args</span><span style="color:#24292E;">...) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> meta.keywords(</span><span style="color:#E36209;">$args</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// (string: #080, comment: #800, variable: #60b)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">@each</span><span style="color:#24292E;"> </span><span style="color:#E36209;">$name</span><span style="color:#24292E;">, </span><span style="color:#E36209;">$color</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> </span><span style="color:#E36209;">meta</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">keywords</span><span style="color:#24292E;">(</span><span style="color:#E36209;">$args</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">pre</span><span style="color:#24292E;"> </span><span style="color:#22863A;">span</span><span style="color:#6F42C1;">.stx-</span><span style="color:#E36209;">#{$name}</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#005CC5;">color</span><span style="color:#24292E;">: </span><span style="color:#E36209;">$color</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">@include</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">syntax-colors</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">$string</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">#080</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">$comment</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">#800</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">$variable</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">#60b</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#85E89D;">pre</span><span style="color:#E1E4E8;"> </span><span style="color:#85E89D;">span</span><span style="color:#B392F0;">.stx-string</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">color</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">#080</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#85E89D;">pre</span><span style="color:#E1E4E8;"> </span><span style="color:#85E89D;">span</span><span style="color:#B392F0;">.stx-comment</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">color</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">#800</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#85E89D;">pre</span><span style="color:#E1E4E8;"> </span><span style="color:#85E89D;">span</span><span style="color:#B392F0;">.stx-variable</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">color</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">#60b</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#22863A;">pre</span><span style="color:#24292E;"> </span><span style="color:#22863A;">span</span><span style="color:#6F42C1;">.stx-string</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">color</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">#080</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#22863A;">pre</span><span style="color:#24292E;"> </span><span style="color:#22863A;">span</span><span style="color:#6F42C1;">.stx-comment</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">color</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">#800</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#22863A;">pre</span><span style="color:#24292E;"> </span><span style="color:#22863A;">span</span><span style="color:#6F42C1;">.stx-variable</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">color</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">#60b</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div></div></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#85E89D;">meta</span><span style="color:#E1E4E8;">.mixin-exists(</span><span style="color:#FFAB70;">$name</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">$module</span><span style="color:#E1E4E8;">: null)</span></span>
<span class="line"><span style="color:#79B8FF;">mixin-exists</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">$name</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">$module:</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">null</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">//=&gt; boolean</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#22863A;">meta</span><span style="color:#24292E;">.mixin-exists(</span><span style="color:#E36209;">$name</span><span style="color:#24292E;">, </span><span style="color:#E36209;">$module</span><span style="color:#24292E;">: null)</span></span>
<span class="line"><span style="color:#005CC5;">mixin-exists</span><span style="color:#24292E;">(</span><span style="color:#E36209;">$name</span><span style="color:#24292E;">, </span><span style="color:#E36209;">$module:</span><span style="color:#24292E;"> </span><span style="color:#E36209;">null</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">//=&gt; boolean</span></span></code></pre></div><p>$nameという名前のミキシンが存在するかどうかを返します。</p><p>もし $module が null ならば、名前空間を持たない $name という名前の mixin が存在するかどうかを返します。それ以外の場合は、 $module は現在のファイル内の @use ルールの名前空間にマッチする文字列でなければなりません。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> meta.mixin-exists(</span><span style="color:#9ECBFF;">&quot;shadow-none&quot;</span><span style="color:#E1E4E8;">); </span><span style="color:#6A737D;">// false</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">@mixin</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">shadow-none</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">box-shadow</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">none</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> meta.mixin-exists(</span><span style="color:#9ECBFF;">&quot;shadow-none&quot;</span><span style="color:#E1E4E8;">); </span><span style="color:#6A737D;">// true</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> meta.mixin-exists(</span><span style="color:#032F62;">&quot;shadow-none&quot;</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">// false</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">@mixin</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">shadow-none</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">box-shadow</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">none</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> meta.mixin-exists(</span><span style="color:#032F62;">&quot;shadow-none&quot;</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">// true</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#85E89D;">meta</span><span style="color:#E1E4E8;">.module-functions(</span><span style="color:#FFAB70;">$module</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">//=&gt; map</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#22863A;">meta</span><span style="color:#24292E;">.module-functions(</span><span style="color:#E36209;">$module</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">//=&gt; map</span></span></code></pre></div><p>互換性:</p><ul><li>Dart Sass: since 1.23.0</li><li>LibSass: ✗</li><li>Ruby Sass: ✗</li><li>▶</li></ul><p>あるモジュールで定義されているすべての関数を、関数名から関数値へのマップとして返します。</p><p>$moduleパラメータは、現在のファイル内の@useルールの名前空間と一致する文字列でなければなりません。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// _functions.scss</span></span>
<span class="line"><span style="color:#F97583;">@function</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">pow</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">$base</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">$exponent</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FFAB70;">$result</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">@for</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">$_</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">through</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">$exponent</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FFAB70;">$result</span><span style="color:#E1E4E8;">: </span><span style="color:#FFAB70;">$result</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">$base</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">@return</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">$result</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">//</span></span>
<span class="line"><span style="color:#F97583;">@use</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;sass:map&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">@use</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;sass:meta&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">@use</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;functions&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> meta.module-functions(</span><span style="color:#9ECBFF;">&quot;functions&quot;</span><span style="color:#E1E4E8;">); </span><span style="color:#6A737D;">// (&quot;pow&quot;: get-function(&quot;pow&quot;))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> meta.call(map.get(meta.module-functions(</span><span style="color:#9ECBFF;">&quot;functions&quot;</span><span style="color:#E1E4E8;">), </span><span style="color:#9ECBFF;">&quot;pow&quot;</span><span style="color:#E1E4E8;">), 3, 4); </span><span style="color:#6A737D;">// 81</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// _functions.scss</span></span>
<span class="line"><span style="color:#D73A49;">@function</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">pow</span><span style="color:#24292E;">(</span><span style="color:#E36209;">$base</span><span style="color:#24292E;">, </span><span style="color:#E36209;">$exponent</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">$result</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">@for</span><span style="color:#24292E;"> </span><span style="color:#E36209;">$_</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">through</span><span style="color:#24292E;"> </span><span style="color:#E36209;">$exponent</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#E36209;">$result</span><span style="color:#24292E;">: </span><span style="color:#E36209;">$result</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#E36209;">$base</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">@return</span><span style="color:#24292E;"> </span><span style="color:#E36209;">$result</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">//</span></span>
<span class="line"><span style="color:#D73A49;">@use</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;sass:map&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">@use</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;sass:meta&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">@use</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;functions&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> meta.module-functions(</span><span style="color:#032F62;">&quot;functions&quot;</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">// (&quot;pow&quot;: get-function(&quot;pow&quot;))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> meta.call(map.get(meta.module-functions(</span><span style="color:#032F62;">&quot;functions&quot;</span><span style="color:#24292E;">), </span><span style="color:#032F62;">&quot;pow&quot;</span><span style="color:#24292E;">), 3, 4); </span><span style="color:#6A737D;">// 81</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#85E89D;">meta</span><span style="color:#E1E4E8;">.module-variables(</span><span style="color:#FFAB70;">$module</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">//=&gt; map</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#22863A;">meta</span><span style="color:#24292E;">.module-variables(</span><span style="color:#E36209;">$module</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">//=&gt; map</span></span></code></pre></div><p>互換性:</p><ul><li>Dart Sass: since 1.23.0</li><li>LibSass: ✗</li><li>Ruby Sass: ✗</li><li>▶</li></ul><p>モジュールで定義されたすべての変数を、変数名（$なし）からそれらの変数の値へのマップとして返します。</p><p>$moduleパラメータは、現在のファイルの@useルールの名前空間と一致する文字列でなければなりません。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// _variables.scss</span></span>
<span class="line"><span style="color:#FFAB70;">$hopbush</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">#c69</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#FFAB70;">$midnight-blue</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">#036</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#FFAB70;">$wafer</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">#e1d7d2</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">//</span></span>
<span class="line"><span style="color:#F97583;">@use</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;sass:meta&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">@use</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;variables&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> meta.module-variables(</span><span style="color:#9ECBFF;">&quot;variables&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#6A737D;">// (</span></span>
<span class="line"><span style="color:#6A737D;">//   &quot;hopbush&quot;: #c69,</span></span>
<span class="line"><span style="color:#6A737D;">//   &quot;midnight-blue&quot;: #036,</span></span>
<span class="line"><span style="color:#6A737D;">//   &quot;wafer&quot;: #e1d7d2</span></span>
<span class="line"><span style="color:#6A737D;">// )</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// _variables.scss</span></span>
<span class="line"><span style="color:#E36209;">$hopbush</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">#c69</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#E36209;">$midnight-blue</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">#036</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#E36209;">$wafer</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">#e1d7d2</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">//</span></span>
<span class="line"><span style="color:#D73A49;">@use</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;sass:meta&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">@use</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;variables&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> meta.module-variables(</span><span style="color:#032F62;">&quot;variables&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#6A737D;">// (</span></span>
<span class="line"><span style="color:#6A737D;">//   &quot;hopbush&quot;: #c69,</span></span>
<span class="line"><span style="color:#6A737D;">//   &quot;midnight-blue&quot;: #036,</span></span>
<span class="line"><span style="color:#6A737D;">//   &quot;wafer&quot;: #e1d7d2</span></span>
<span class="line"><span style="color:#6A737D;">// )</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#85E89D;">meta</span><span style="color:#E1E4E8;">.type-of(</span><span style="color:#FFAB70;">$value</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">type-of(</span><span style="color:#FFAB70;">$value</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">//=&gt; unquoted string</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#22863A;">meta</span><span style="color:#24292E;">.type-of(</span><span style="color:#E36209;">$value</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">type-of(</span><span style="color:#E36209;">$value</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">//=&gt; unquoted string</span></span></code></pre></div><p>$valueの型を返します。</p><p>これは、以下の値を返すことができます。</p><ul><li>number</li><li>string</li><li>color</li><li>list</li><li>map</li><li>calculation</li><li>bool</li><li>null</li><li>function</li><li>arglist</li></ul><p>将来、新しい可能な値が追加されるかもしれない。また、()の場合は、map 関数から返されたものかどうかによって、list か map のどちらかを返すことがある。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> meta.type-of(10px); </span><span style="color:#6A737D;">// number</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> meta.type-of(10px 20px 30px); </span><span style="color:#6A737D;">// list</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> meta.type-of(()); </span><span style="color:#6A737D;">// list</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> meta.type-of(10px); </span><span style="color:#6A737D;">// number</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> meta.type-of(10px 20px 30px); </span><span style="color:#6A737D;">// list</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> meta.type-of(()); </span><span style="color:#6A737D;">// list</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#85E89D;">meta</span><span style="color:#E1E4E8;">.variable-exists(</span><span style="color:#FFAB70;">$name</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">variable-exists(</span><span style="color:#FFAB70;">$name</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">//=&gt; boolean</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#22863A;">meta</span><span style="color:#24292E;">.variable-exists(</span><span style="color:#E36209;">$name</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">variable-exists(</span><span style="color:#E36209;">$name</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">//=&gt; boolean</span></span></code></pre></div><p>name ($ を含まない) という名前の変数が現在のスコープに存在するかどうかを返します。</p><p>meta.global-variable-exists()も参照ください。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> meta.variable-exists(</span><span style="color:#9ECBFF;">&quot;var1&quot;</span><span style="color:#E1E4E8;">); </span><span style="color:#6A737D;">// false</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFAB70;">$var1</span><span style="color:#E1E4E8;">: value;</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> meta.variable-exists(</span><span style="color:#9ECBFF;">&quot;var1&quot;</span><span style="color:#E1E4E8;">); </span><span style="color:#6A737D;">// true</span></span>
<span class="line"></span>
<span class="line"><span style="color:#85E89D;">h1</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// $var2 is local.</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FFAB70;">$var2</span><span style="color:#E1E4E8;">: value;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> meta.variable-exists(</span><span style="color:#9ECBFF;">&quot;var2&quot;</span><span style="color:#E1E4E8;">); </span><span style="color:#6A737D;">// true</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> meta.variable-exists(</span><span style="color:#032F62;">&quot;var1&quot;</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">// false</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E36209;">$var1</span><span style="color:#24292E;">: value;</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> meta.variable-exists(</span><span style="color:#032F62;">&quot;var1&quot;</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">// true</span></span>
<span class="line"></span>
<span class="line"><span style="color:#22863A;">h1</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// $var2 is local.</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">$var2</span><span style="color:#24292E;">: value;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> meta.variable-exists(</span><span style="color:#032F62;">&quot;var2&quot;</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">// true</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h2 id="sass-selector" tabindex="-1">sass:selector <a class="header-anchor" href="#sass-selector" aria-label="Permalink to &quot;sass:selector&quot;">​</a></h2><p>互換性:</p><ul><li>Dart Sass: since 1.23.0</li><li>LibSass: ✗</li><li>Ruby Sass: ✗</li><li>▶</li></ul><h3 id="selector-values" tabindex="-1">Selector Values <a class="header-anchor" href="#selector-values" aria-label="Permalink to &quot;Selector Values&quot;">​</a></h3><p>このモジュールの関数はセレクタを検査し、操作します。セレクタを返すときはいつも、引用符で囲まれていない文字列（複合セレクタ）を含むスペースで区切られたリスト（複合セレクタ）を含むカンマで区切られたリスト（セレクタリスト）であることが多いです。たとえば、セレクタ .main aside:hover, .sidebar p は、次のように返されます。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> ((unquote(</span><span style="color:#9ECBFF;">&quot;.main&quot;</span><span style="color:#E1E4E8;">) unquote(</span><span style="color:#9ECBFF;">&quot;aside:hover&quot;</span><span style="color:#E1E4E8;">)),</span></span>
<span class="line"><span style="color:#E1E4E8;">        (unquote(</span><span style="color:#9ECBFF;">&quot;.sidebar&quot;</span><span style="color:#E1E4E8;">) unquote(</span><span style="color:#9ECBFF;">&quot;p&quot;</span><span style="color:#E1E4E8;">)));</span></span>
<span class="line"><span style="color:#6A737D;">// .main aside:hover, .sidebar p</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> ((unquote(</span><span style="color:#032F62;">&quot;.main&quot;</span><span style="color:#24292E;">) unquote(</span><span style="color:#032F62;">&quot;aside:hover&quot;</span><span style="color:#24292E;">)),</span></span>
<span class="line"><span style="color:#24292E;">        (unquote(</span><span style="color:#032F62;">&quot;.sidebar&quot;</span><span style="color:#24292E;">) unquote(</span><span style="color:#032F62;">&quot;p&quot;</span><span style="color:#24292E;">)));</span></span>
<span class="line"><span style="color:#6A737D;">// .main aside:hover, .sidebar p</span></span></code></pre></div><p>これらの関数へのセレクタ引数は、同じ形式であっても、通常の文字列（引用符で囲むか囲まないか）、またはその組み合わせであってもかまいません。例えば、&quot;.main aside:hover, .sidebar p&quot; は有効なセレクタ引数です。</p><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">selector.is-superselector(</span><span style="color:#FFAB70;">$super</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">$sub</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">is-superselector(</span><span style="color:#FFAB70;">$super</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">$sub</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">//=&gt; boolean</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">selector.is-superselector(</span><span style="color:#E36209;">$super</span><span style="color:#24292E;">, </span><span style="color:#E36209;">$sub</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">is-superselector(</span><span style="color:#E36209;">$super</span><span style="color:#24292E;">, </span><span style="color:#E36209;">$sub</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">//=&gt; boolean</span></span></code></pre></div><p>セレクタ $super が、セレクタ $sub がマッチするすべての要素にマッチするかどうかを返します。</p><p>たとえ $super が $sub よりも多くの要素にマッチしたとしても、真を返します。</p><p>$super と $sub セレクタは、プレースホルダセレクタを含むことができますが、 親セレクタを含むことはできません。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> selector.is-superselector(</span><span style="color:#9ECBFF;">&quot;a&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;a.disabled&quot;</span><span style="color:#E1E4E8;">); </span><span style="color:#6A737D;">// true</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> selector.is-superselector(</span><span style="color:#9ECBFF;">&quot;a.disabled&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;a&quot;</span><span style="color:#E1E4E8;">); </span><span style="color:#6A737D;">// false</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> selector.is-superselector(</span><span style="color:#9ECBFF;">&quot;a&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;sidebar a&quot;</span><span style="color:#E1E4E8;">); </span><span style="color:#6A737D;">// true</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> selector.is-superselector(</span><span style="color:#9ECBFF;">&quot;sidebar a&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;a&quot;</span><span style="color:#E1E4E8;">); </span><span style="color:#6A737D;">// false</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> selector.is-superselector(</span><span style="color:#9ECBFF;">&quot;a&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;a&quot;</span><span style="color:#E1E4E8;">); </span><span style="color:#6A737D;">// true</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> selector.is-superselector(</span><span style="color:#032F62;">&quot;a&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;a.disabled&quot;</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">// true</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> selector.is-superselector(</span><span style="color:#032F62;">&quot;a.disabled&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;a&quot;</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">// false</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> selector.is-superselector(</span><span style="color:#032F62;">&quot;a&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;sidebar a&quot;</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">// true</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> selector.is-superselector(</span><span style="color:#032F62;">&quot;sidebar a&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;a&quot;</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">// false</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> selector.is-superselector(</span><span style="color:#032F62;">&quot;a&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;a&quot;</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">// true</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">selector.append(</span><span style="color:#FFAB70;">$selectors</span><span style="color:#E1E4E8;">...)</span></span>
<span class="line"><span style="color:#E1E4E8;">selector-append(</span><span style="color:#FFAB70;">$selectors</span><span style="color:#E1E4E8;">...) </span><span style="color:#6A737D;">//=&gt; selector</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">selector.append(</span><span style="color:#E36209;">$selectors</span><span style="color:#24292E;">...)</span></span>
<span class="line"><span style="color:#24292E;">selector-append(</span><span style="color:#E36209;">$selectors</span><span style="color:#24292E;">...) </span><span style="color:#6A737D;">//=&gt; selector</span></span></code></pre></div><p>$selectorsを、子孫の組紐を使わずに、つまり空白を使わずに組み合わせます。</p><p>$selectors のセレクタがセレクタリストの場合は、 それぞれのセレクタが個別に結合されます。</p><p>$selectorsにはプレースホルダセレクタを含めることができますが、 親セレクタは含められません。</p><p>selector.nest() も参照ください。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> selector.append(</span><span style="color:#9ECBFF;">&quot;a&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;.disabled&quot;</span><span style="color:#E1E4E8;">); </span><span style="color:#6A737D;">// a.disabled</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> selector.append(</span><span style="color:#9ECBFF;">&quot;.accordion&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;__copy&quot;</span><span style="color:#E1E4E8;">); </span><span style="color:#6A737D;">// .accordion__copy</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> selector.append(</span><span style="color:#9ECBFF;">&quot;.accordion&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;__copy, __image&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#6A737D;">// .accordion__copy, .accordion__image</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> selector.append(</span><span style="color:#032F62;">&quot;a&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;.disabled&quot;</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">// a.disabled</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> selector.append(</span><span style="color:#032F62;">&quot;.accordion&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;__copy&quot;</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">// .accordion__copy</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> selector.append(</span><span style="color:#032F62;">&quot;.accordion&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;__copy, __image&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#6A737D;">// .accordion__copy, .accordion__image</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">selector.extend(</span><span style="color:#FFAB70;">$selector</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">$extendee</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">$extender</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">selector-extend(</span><span style="color:#FFAB70;">$selector</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">$extendee</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">$extender</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">//=&gt; selector</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">selector.extend(</span><span style="color:#E36209;">$selector</span><span style="color:#24292E;">, </span><span style="color:#E36209;">$extendee</span><span style="color:#24292E;">, </span><span style="color:#E36209;">$extender</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">selector-extend(</span><span style="color:#E36209;">$selector</span><span style="color:#24292E;">, </span><span style="color:#E36209;">$extendee</span><span style="color:#24292E;">, </span><span style="color:#E36209;">$extender</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">//=&gt; selector</span></span></code></pre></div><p>@extendルールと同様に$selectorを拡張します。</p><p>以下の @extend ルールで変更した $selector のコピーを返します。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#FFAB70;">#{$extender}</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">@extend</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">#{$extendee}</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#E36209;">#{$extender}</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">@extend</span><span style="color:#24292E;"> </span><span style="color:#E36209;">#{$extendee}</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>言い換えると、$selector に含まれる $extendee のインスタンスをすべて $extendee, $extender に置き換えます。もし $selector が $extendee を含んでいない場合は、そのまま返します。</p><p>selector、extendee、$extender セレクタは、プレースホルダセレクタを含むことができますが、親セレクタを含むことはできません。</p><p>selector.replace()も参照ください。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> selector.extend(</span><span style="color:#9ECBFF;">&quot;a.disabled&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;a&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;.link&quot;</span><span style="color:#E1E4E8;">); </span><span style="color:#6A737D;">// a.disabled, .link.disabled</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> selector.extend(</span><span style="color:#9ECBFF;">&quot;a.disabled&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;h1&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;h2&quot;</span><span style="color:#E1E4E8;">); </span><span style="color:#6A737D;">// a.disabled</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> selector.extend(</span><span style="color:#9ECBFF;">&quot;.guide .info&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;.info&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;.content nav.sidebar&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#6A737D;">// .guide .info, .guide .content nav.sidebar, .content .guide nav.sidebar</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> selector.extend(</span><span style="color:#032F62;">&quot;a.disabled&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;a&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;.link&quot;</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">// a.disabled, .link.disabled</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> selector.extend(</span><span style="color:#032F62;">&quot;a.disabled&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;h1&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;h2&quot;</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">// a.disabled</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> selector.extend(</span><span style="color:#032F62;">&quot;.guide .info&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;.info&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;.content nav.sidebar&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#6A737D;">// .guide .info, .guide .content nav.sidebar, .content .guide nav.sidebar</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">selector.nest(</span><span style="color:#FFAB70;">$selectors</span><span style="color:#E1E4E8;">...)</span></span>
<span class="line"><span style="color:#E1E4E8;">selector-nest(</span><span style="color:#FFAB70;">$selectors</span><span style="color:#E1E4E8;">...) </span><span style="color:#6A737D;">//=&gt; selector</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">selector.nest(</span><span style="color:#E36209;">$selectors</span><span style="color:#24292E;">...)</span></span>
<span class="line"><span style="color:#24292E;">selector-nest(</span><span style="color:#E36209;">$selectors</span><span style="color:#24292E;">...) </span><span style="color:#6A737D;">//=&gt; selector</span></span></code></pre></div><p>$selectorsを、スタイルシートの中で互いに入れ子になっているかのように結合します。</p><p>$selectorsは、プレースホルダセレクタを含むことができます。他のセレクタ関数と異なり、最初のセレクタを除くすべてのセレクタは親セレクタを含むことができます。</p><p>selector.append()も参照してください。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> selector.nest(</span><span style="color:#9ECBFF;">&quot;ul&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;li&quot;</span><span style="color:#E1E4E8;">); </span><span style="color:#6A737D;">// ul li</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> selector.nest(</span><span style="color:#9ECBFF;">&quot;.alert, .warning&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;p&quot;</span><span style="color:#E1E4E8;">); </span><span style="color:#6A737D;">// .alert p, .warning p</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> selector.nest(</span><span style="color:#9ECBFF;">&quot;.alert&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;&amp;:hover&quot;</span><span style="color:#E1E4E8;">); </span><span style="color:#6A737D;">// .alert:hover</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> selector.nest(</span><span style="color:#9ECBFF;">&quot;.accordion&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;&amp;__copy&quot;</span><span style="color:#E1E4E8;">); </span><span style="color:#6A737D;">// .accordion__copy</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> selector.nest(</span><span style="color:#032F62;">&quot;ul&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;li&quot;</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">// ul li</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> selector.nest(</span><span style="color:#032F62;">&quot;.alert, .warning&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;p&quot;</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">// .alert p, .warning p</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> selector.nest(</span><span style="color:#032F62;">&quot;.alert&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;&amp;:hover&quot;</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">// .alert:hover</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> selector.nest(</span><span style="color:#032F62;">&quot;.accordion&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;&amp;__copy&quot;</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">// .accordion__copy</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">selector.parse(</span><span style="color:#FFAB70;">$selector</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">selector-parse(</span><span style="color:#FFAB70;">$selector</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">//=&gt; selector</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">selector.parse(</span><span style="color:#E36209;">$selector</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">selector-parse(</span><span style="color:#E36209;">$selector</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">//=&gt; selector</span></span></code></pre></div><p>セレクタの値のフォーマットで $selector を返します。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> selector.parse(</span><span style="color:#9ECBFF;">&quot;.main aside:hover, .sidebar p&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#6A737D;">// ((unquote(&quot;.main&quot;) unquote(&quot;aside:hover&quot;)),</span></span>
<span class="line"><span style="color:#6A737D;">//  (unquote(&quot;.sidebar&quot;) unquote(&quot;p&quot;)))</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> selector.parse(</span><span style="color:#032F62;">&quot;.main aside:hover, .sidebar p&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#6A737D;">// ((unquote(&quot;.main&quot;) unquote(&quot;aside:hover&quot;)),</span></span>
<span class="line"><span style="color:#6A737D;">//  (unquote(&quot;.sidebar&quot;) unquote(&quot;p&quot;)))</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">selector.replace(</span><span style="color:#FFAB70;">$selector</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">$original</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">$replacement</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">selector-replace(</span><span style="color:#FFAB70;">$selector</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">$original</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">$replacement</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">//=&gt; selector</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">selector.replace(</span><span style="color:#E36209;">$selector</span><span style="color:#24292E;">, </span><span style="color:#E36209;">$original</span><span style="color:#24292E;">, </span><span style="color:#E36209;">$replacement</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">selector-replace(</span><span style="color:#E36209;">$selector</span><span style="color:#24292E;">, </span><span style="color:#E36209;">$original</span><span style="color:#24292E;">, </span><span style="color:#E36209;">$replacement</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">//=&gt; selector</span></span></code></pre></div><p>$original のすべてのインスタンスを $replacement で置き換えた $selector のコピーを返します。</p><p>これは、@extend ルールのインテリジェントな統合機能を使用して、 $replacement が $selector にシームレスに統合されることを確認します。selector が $original を含んでいない場合は、そのまま返します。</p><p>selector、original および $replacement セレクタはプレースホルダセレクタを含むことができますが、 親セレクタを含むことはできません。</p><p>selector.extend() も参照ください。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> selector.replace(</span><span style="color:#9ECBFF;">&quot;a.disabled&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;a&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;.link&quot;</span><span style="color:#E1E4E8;">); </span><span style="color:#6A737D;">// .link.disabled</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> selector.replace(</span><span style="color:#9ECBFF;">&quot;a.disabled&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;h1&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;h2&quot;</span><span style="color:#E1E4E8;">); </span><span style="color:#6A737D;">// a.disabled</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> selector.replace(</span><span style="color:#9ECBFF;">&quot;.guide .info&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;.info&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;.content nav.sidebar&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#6A737D;">// .guide .content nav.sidebar, .content .guide nav.sidebar</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> selector.replace(</span><span style="color:#032F62;">&quot;a.disabled&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;a&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;.link&quot;</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">// .link.disabled</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> selector.replace(</span><span style="color:#032F62;">&quot;a.disabled&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;h1&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;h2&quot;</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">// a.disabled</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> selector.replace(</span><span style="color:#032F62;">&quot;.guide .info&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;.info&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;.content nav.sidebar&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#6A737D;">// .guide .content nav.sidebar, .content .guide nav.sidebar</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">selector.unify(</span><span style="color:#FFAB70;">$selector1</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">$selector2</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">selector-unify(</span><span style="color:#FFAB70;">$selector1</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">$selector2</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">//=&gt; selector | null</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">selector.unify(</span><span style="color:#E36209;">$selector1</span><span style="color:#24292E;">, </span><span style="color:#E36209;">$selector2</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">selector-unify(</span><span style="color:#E36209;">$selector1</span><span style="color:#24292E;">, </span><span style="color:#E36209;">$selector2</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">//=&gt; selector | null</span></span></code></pre></div><p>$selector1 と $selector2 の両方にマッチする要素にのみマッチするセレクタを返します。</p><p>$selector1 と $selector2 が同じ要素にマッチしない場合、 あるいはそれらの重複を表すセレクタが存在しない場合は null を返します。</p><p>@extend 規則で生成されるセレクタと同様、返されるセレクタも、 $selector1 と $selector2 がともに複雑なセレクタの場合、 両方の要素にマッチすることは保証されません。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> selector.unify(</span><span style="color:#9ECBFF;">&quot;a&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;.disabled&quot;</span><span style="color:#E1E4E8;">); </span><span style="color:#6A737D;">// a.disabled</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> selector.unify(</span><span style="color:#9ECBFF;">&quot;a.disabled&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;a.outgoing&quot;</span><span style="color:#E1E4E8;">); </span><span style="color:#6A737D;">// a.disabled.outgoing</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> selector.unify(</span><span style="color:#9ECBFF;">&quot;a&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;h1&quot;</span><span style="color:#E1E4E8;">); </span><span style="color:#6A737D;">// null</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> selector.unify(</span><span style="color:#9ECBFF;">&quot;.warning a&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;main a&quot;</span><span style="color:#E1E4E8;">); </span><span style="color:#6A737D;">// .warning main a, main .warning a</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> selector.unify(</span><span style="color:#032F62;">&quot;a&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;.disabled&quot;</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">// a.disabled</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> selector.unify(</span><span style="color:#032F62;">&quot;a.disabled&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;a.outgoing&quot;</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">// a.disabled.outgoing</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> selector.unify(</span><span style="color:#032F62;">&quot;a&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;h1&quot;</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">// null</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> selector.unify(</span><span style="color:#032F62;">&quot;.warning a&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;main a&quot;</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">// .warning main a, main .warning a</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">selector.simple-selectors(</span><span style="color:#FFAB70;">$selector</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">simple-selectors(</span><span style="color:#FFAB70;">$selector</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">//=&gt; list</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">selector.simple-selectors(</span><span style="color:#E36209;">$selector</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">simple-selectors(</span><span style="color:#E36209;">$selector</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">//=&gt; list</span></span></code></pre></div><p>単純なセレクタの一覧を $selector で返します。</p><p>$selector は、複合セレクタを含む単一の文字列でなければなりません。つまり、コンバイネータ (空白を含む) やカンマを含んではいけないということです。</p><p>返されるリストはカンマ区切りで、単純なセレクタは引用符で囲まれていない文字列となります。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> selector.simple-selectors(</span><span style="color:#9ECBFF;">&quot;a.disabled&quot;</span><span style="color:#E1E4E8;">); </span><span style="color:#6A737D;">// a, .disabled</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> selector.simple-selectors(</span><span style="color:#9ECBFF;">&quot;main.blog:after&quot;</span><span style="color:#E1E4E8;">); </span><span style="color:#6A737D;">// main, .blog, :after</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> selector.simple-selectors(</span><span style="color:#032F62;">&quot;a.disabled&quot;</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">// a, .disabled</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> selector.simple-selectors(</span><span style="color:#032F62;">&quot;main.blog:after&quot;</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">// main, .blog, :after</span></span></code></pre></div><h2 id="sass-string" tabindex="-1">sass:string <a class="header-anchor" href="#sass-string" aria-label="Permalink to &quot;sass:string&quot;">​</a></h2><p>互換性:</p><ul><li>Dart Sass: since 1.23.0</li><li>LibSass: ✗</li><li>Ruby Sass: ✗</li><li>▶</li></ul><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">string.quote(</span><span style="color:#FFAB70;">$string</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">quote(</span><span style="color:#FFAB70;">$string</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">//=&gt; string</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">string.quote(</span><span style="color:#E36209;">$string</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">quote(</span><span style="color:#E36209;">$string</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">//=&gt; string</span></span></code></pre></div><p>引用符で囲まれた文字列として$stringを返します。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> string.quote(Helvetica); </span><span style="color:#6A737D;">// &quot;Helvetica&quot;</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> string.quote(</span><span style="color:#9ECBFF;">&quot;Helvetica&quot;</span><span style="color:#E1E4E8;">); </span><span style="color:#6A737D;">// &quot;Helvetica&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> string.quote(Helvetica); </span><span style="color:#6A737D;">// &quot;Helvetica&quot;</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> string.quote(</span><span style="color:#032F62;">&quot;Helvetica&quot;</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">// &quot;Helvetica&quot;</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">string.index(</span><span style="color:#FFAB70;">$string</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">$substring</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">str-index(</span><span style="color:#FFAB70;">$string</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">$substring</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">//=&gt; number</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">string.index(</span><span style="color:#E36209;">$string</span><span style="color:#24292E;">, </span><span style="color:#E36209;">$substring</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">str-index(</span><span style="color:#E36209;">$string</span><span style="color:#24292E;">, </span><span style="color:#E36209;">$substring</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">//=&gt; number</span></span></code></pre></div><p>文字列中の substring の最初のインデックスを返します。string が $substring を含まない場合は null を返します。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> string.index(</span><span style="color:#9ECBFF;">&quot;Helvetica Neue&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;Helvetica&quot;</span><span style="color:#E1E4E8;">); </span><span style="color:#6A737D;">// 1</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> string.index(</span><span style="color:#9ECBFF;">&quot;Helvetica Neue&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;Neue&quot;</span><span style="color:#E1E4E8;">); </span><span style="color:#6A737D;">// 11</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> string.index(</span><span style="color:#032F62;">&quot;Helvetica Neue&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;Helvetica&quot;</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">// 1</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> string.index(</span><span style="color:#032F62;">&quot;Helvetica Neue&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;Neue&quot;</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">// 11</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">string.insert(</span><span style="color:#FFAB70;">$string</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">$insert</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">$index</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">str-insert(</span><span style="color:#FFAB70;">$string</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">$insert</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">$index</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">//=&gt; string</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">string.insert(</span><span style="color:#E36209;">$string</span><span style="color:#24292E;">, </span><span style="color:#E36209;">$insert</span><span style="color:#24292E;">, </span><span style="color:#E36209;">$index</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">str-insert(</span><span style="color:#E36209;">$string</span><span style="color:#24292E;">, </span><span style="color:#E36209;">$insert</span><span style="color:#24292E;">, </span><span style="color:#E36209;">$index</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">//=&gt; string</span></span></code></pre></div><p>インデックスにinsertを挿入したstringのコピーを返します。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> string.insert(</span><span style="color:#9ECBFF;">&quot;Roboto Bold&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot; Mono&quot;</span><span style="color:#E1E4E8;">, 7); </span><span style="color:#6A737D;">// &quot;Roboto Mono Bold&quot;</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> string.insert(</span><span style="color:#9ECBFF;">&quot;Roboto Bold&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot; Mono&quot;</span><span style="color:#E1E4E8;">, -6); </span><span style="color:#6A737D;">// &quot;Roboto Mono Bold&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> string.insert(</span><span style="color:#032F62;">&quot;Roboto Bold&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot; Mono&quot;</span><span style="color:#24292E;">, 7); </span><span style="color:#6A737D;">// &quot;Roboto Mono Bold&quot;</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> string.insert(</span><span style="color:#032F62;">&quot;Roboto Bold&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot; Mono&quot;</span><span style="color:#24292E;">, -6); </span><span style="color:#6A737D;">// &quot;Roboto Mono Bold&quot;</span></span></code></pre></div><p>indexがstringの長さより大きい場合、insertは末尾に追加されます。もしindexが文字列の負の長さより小さければ、$insertは先頭に追加されます。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> string.insert(</span><span style="color:#9ECBFF;">&quot;Roboto&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot; Bold&quot;</span><span style="color:#E1E4E8;">, 100); </span><span style="color:#6A737D;">// &quot;Roboto Bold&quot;</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> string.insert(</span><span style="color:#9ECBFF;">&quot;Bold&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;Roboto &quot;</span><span style="color:#E1E4E8;">, -100); </span><span style="color:#6A737D;">// &quot;Roboto Bold&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> string.insert(</span><span style="color:#032F62;">&quot;Roboto&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot; Bold&quot;</span><span style="color:#24292E;">, 100); </span><span style="color:#6A737D;">// &quot;Roboto Bold&quot;</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> string.insert(</span><span style="color:#032F62;">&quot;Bold&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;Roboto &quot;</span><span style="color:#24292E;">, -100); </span><span style="color:#6A737D;">// &quot;Roboto Bold&quot;</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">string.length(</span><span style="color:#FFAB70;">$string</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">str-length(</span><span style="color:#FFAB70;">$string</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">//=&gt; number</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">string.length(</span><span style="color:#E36209;">$string</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">str-length(</span><span style="color:#E36209;">$string</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">//=&gt; number</span></span></code></pre></div><p>$stringの文字数を返します。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> string.length(</span><span style="color:#9ECBFF;">&quot;Helvetica Neue&quot;</span><span style="color:#E1E4E8;">); </span><span style="color:#6A737D;">// 14</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> string.length(bold); </span><span style="color:#6A737D;">// 4</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> string.length(</span><span style="color:#9ECBFF;">&quot;&quot;</span><span style="color:#E1E4E8;">); </span><span style="color:#6A737D;">// 0</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> string.length(</span><span style="color:#032F62;">&quot;Helvetica Neue&quot;</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">// 14</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> string.length(bold); </span><span style="color:#6A737D;">// 4</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> string.length(</span><span style="color:#032F62;">&quot;&quot;</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">// 0</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">string.slice(</span><span style="color:#FFAB70;">$string</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">$start-at</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">$end-at</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">-1</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#79B8FF;">str-slice</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">$string</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">$start-at</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">$end-at:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-1</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">//=&gt; string</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">string.slice(</span><span style="color:#E36209;">$string</span><span style="color:#24292E;">, </span><span style="color:#E36209;">$start-at</span><span style="color:#24292E;">, </span><span style="color:#E36209;">$end-at</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">-1</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#005CC5;">str-slice</span><span style="color:#24292E;">(</span><span style="color:#E36209;">$string</span><span style="color:#24292E;">, </span><span style="color:#E36209;">$start-at</span><span style="color:#24292E;">, </span><span style="color:#E36209;">$end-at:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-1</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">//=&gt; string</span></span></code></pre></div><p>インデックス $start-at で始まり、インデックス $end-at で終わる (両方を含む) $string のスライスを返します。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> string.slice(</span><span style="color:#9ECBFF;">&quot;Helvetica Neue&quot;</span><span style="color:#E1E4E8;">, 11); </span><span style="color:#6A737D;">// &quot;Neue&quot;</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> string.slice(</span><span style="color:#9ECBFF;">&quot;Helvetica Neue&quot;</span><span style="color:#E1E4E8;">, 1, 3); </span><span style="color:#6A737D;">// &quot;Hel&quot;</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> string.slice(</span><span style="color:#9ECBFF;">&quot;Helvetica Neue&quot;</span><span style="color:#E1E4E8;">, 1, -6); </span><span style="color:#6A737D;">// &quot;Helvetica&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> string.slice(</span><span style="color:#032F62;">&quot;Helvetica Neue&quot;</span><span style="color:#24292E;">, 11); </span><span style="color:#6A737D;">// &quot;Neue&quot;</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> string.slice(</span><span style="color:#032F62;">&quot;Helvetica Neue&quot;</span><span style="color:#24292E;">, 1, 3); </span><span style="color:#6A737D;">// &quot;Hel&quot;</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> string.slice(</span><span style="color:#032F62;">&quot;Helvetica Neue&quot;</span><span style="color:#24292E;">, 1, -6); </span><span style="color:#6A737D;">// &quot;Helvetica&quot;</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">string.to-upper-case(</span><span style="color:#FFAB70;">$string</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">to-upper-case(</span><span style="color:#FFAB70;">$string</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">//=&gt; string</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">string.to-upper-case(</span><span style="color:#E36209;">$string</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">to-upper-case(</span><span style="color:#E36209;">$string</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">//=&gt; string</span></span></code></pre></div><p>ASCII文字を大文字に変換した$stringのコピーを返します。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> string.to-upper-case(</span><span style="color:#9ECBFF;">&quot;Bold&quot;</span><span style="color:#E1E4E8;">); </span><span style="color:#6A737D;">// &quot;BOLD&quot;</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> string.to-upper-case(sans-serif); </span><span style="color:#6A737D;">// SANS-SERIF</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> string.to-upper-case(</span><span style="color:#032F62;">&quot;Bold&quot;</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">// &quot;BOLD&quot;</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> string.to-upper-case(sans-serif); </span><span style="color:#6A737D;">// SANS-SERIF</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">string.to-lower-case(</span><span style="color:#FFAB70;">$string</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">to-lower-case(</span><span style="color:#FFAB70;">$string</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">//=&gt; string</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">string.to-lower-case(</span><span style="color:#E36209;">$string</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">to-lower-case(</span><span style="color:#E36209;">$string</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">//=&gt; string</span></span></code></pre></div><p>ASCII文字を小文字に変換した$stringのコピーを返します。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> string.to-lower-case(</span><span style="color:#9ECBFF;">&quot;Bold&quot;</span><span style="color:#E1E4E8;">); </span><span style="color:#6A737D;">// &quot;bold&quot;</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> string.to-lower-case(SANS-SERIF); </span><span style="color:#6A737D;">// sans-serif</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> string.to-lower-case(</span><span style="color:#032F62;">&quot;Bold&quot;</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">// &quot;bold&quot;</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> string.to-lower-case(SANS-SERIF); </span><span style="color:#6A737D;">// sans-serif</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">string.unique-id()</span></span>
<span class="line"><span style="color:#E1E4E8;">unique-id() </span><span style="color:#6A737D;">//=&gt; string</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">string.unique-id()</span></span>
<span class="line"><span style="color:#24292E;">unique-id() </span><span style="color:#6A737D;">//=&gt; string</span></span></code></pre></div><p>有効な CSS 識別子であり、現在の Sass コンパイル内で一意であることが保証されている、ランダムに生成される引用符なしの文字列を返します。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> string.unique-id(); </span><span style="color:#6A737D;">// uabtrnzug</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> string.unique-id(); </span><span style="color:#6A737D;">// u6w1b1def</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> string.unique-id(); </span><span style="color:#6A737D;">// uabtrnzug</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> string.unique-id(); </span><span style="color:#6A737D;">// u6w1b1def</span></span></code></pre></div><hr><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">string.unquote(</span><span style="color:#FFAB70;">$string</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">unquote(</span><span style="color:#FFAB70;">$string</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">//=&gt; string</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">string.unquote(</span><span style="color:#E36209;">$string</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">unquote(</span><span style="color:#E36209;">$string</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">//=&gt; string</span></span></code></pre></div><p>$stringを引用符で囲まれていない文字列として返します。これは、有効なCSSでない文字列を生成する可能性があるので、注意して使用してください。</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> string.unquote(</span><span style="color:#9ECBFF;">&quot;Helvetica&quot;</span><span style="color:#E1E4E8;">); </span><span style="color:#6A737D;">// Helvetica</span></span>
<span class="line"><span style="color:#F97583;">@debug</span><span style="color:#E1E4E8;"> string.unquote(</span><span style="color:#9ECBFF;">&quot;.widget:hover&quot;</span><span style="color:#E1E4E8;">); </span><span style="color:#6A737D;">// .widget:hover</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> string.unquote(</span><span style="color:#032F62;">&quot;Helvetica&quot;</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">// Helvetica</span></span>
<span class="line"><span style="color:#D73A49;">@debug</span><span style="color:#24292E;"> string.unquote(</span><span style="color:#032F62;">&quot;.widget:hover&quot;</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">// .widget:hover</span></span></code></pre></div>`,473);function Q(ss,as,ns,ls,ps,os){const l=t("mi"),e=t("mo"),c=t("mrow"),r=t("annotation"),y=t("semantics"),i=t("math");return d(),u("div",null,[h,p("div",b,[F,A,v,p("p",null,[n("darken() は通常、色を暗くする最良の方法ではないので、新しいモジュールシステムには直接含まれません。しかし、既存の動作を維持する必要がある場合、 darken($color, amount) は color.adjust(color, "),p("span",m,[p("span",D,[s(i,null,{default:a(()=>[s(y,null,{default:a(()=>[s(c,null,{default:a(()=>[s(l,null,{default:a(()=>[n("l")]),_:1}),s(l,null,{default:a(()=>[n("i")]),_:1}),s(l,null,{default:a(()=>[n("g")]),_:1}),s(l,null,{default:a(()=>[n("h")]),_:1}),s(l,null,{default:a(()=>[n("t")]),_:1}),s(l,null,{default:a(()=>[n("n")]),_:1}),s(l,null,{default:a(()=>[n("e")]),_:1}),s(l,null,{default:a(()=>[n("s")]),_:1}),s(l,null,{default:a(()=>[n("s")]),_:1}),s(e,null,{default:a(()=>[n(":")]),_:1}),s(e,null,{default:a(()=>[n("−")]),_:1})]),_:1}),s(r,{encoding:"application/x-tex"},{default:a(()=>[n("lightness: -")]),_:1})]),_:1})]),_:1})]),$]),n("amount) と書くことができます。")]),k]),q,p("div",C,[B,x,f,p("p",null,[n("desaturate()は通常、色の彩度を下げるのに最適な方法ではないので、新しいモジュールシステムには直接含まれていません。しかし、既存の動作を維持する必要がある場合、 desaturate($color, amount) は color.adjust(color, "),p("span",_,[p("span",w,[s(i,null,{default:a(()=>[s(y,null,{default:a(()=>[s(c,null,{default:a(()=>[s(l,null,{default:a(()=>[n("s")]),_:1}),s(l,null,{default:a(()=>[n("a")]),_:1}),s(l,null,{default:a(()=>[n("t")]),_:1}),s(l,null,{default:a(()=>[n("u")]),_:1}),s(l,null,{default:a(()=>[n("r")]),_:1}),s(l,null,{default:a(()=>[n("a")]),_:1}),s(l,null,{default:a(()=>[n("t")]),_:1}),s(l,null,{default:a(()=>[n("i")]),_:1}),s(l,null,{default:a(()=>[n("o")]),_:1}),s(l,null,{default:a(()=>[n("n")]),_:1}),s(e,null,{default:a(()=>[n(":")]),_:1}),s(e,null,{default:a(()=>[n("−")]),_:1})]),_:1}),s(r,{encoding:"application/x-tex"},{default:a(()=>[n("saturation: -")]),_:1})]),_:1})]),_:1})]),S]),n("amount) と書くことができます。")]),H]),R,p("div",N,[T,L,I,p("p",null,[n("opacify() は通常、色をより不透明にする最適な方法ではないため、新しいモジュールシステムには直接含まれていません。しかし、もし既存の動作を維持しなければならないのなら、 opacify($color, amount) は adjust(color, "),p("span",j,[p("span",P,[s(i,null,{default:a(()=>[s(y,null,{default:a(()=>[s(c,null,{default:a(()=>[s(l,null,{default:a(()=>[n("a")]),_:1}),s(l,null,{default:a(()=>[n("l")]),_:1}),s(l,null,{default:a(()=>[n("p")]),_:1}),s(l,null,{default:a(()=>[n("h")]),_:1}),s(l,null,{default:a(()=>[n("a")]),_:1}),s(e,null,{default:a(()=>[n(":")]),_:1}),s(e,null,{default:a(()=>[n("−")]),_:1})]),_:1}),s(r,{encoding:"application/x-tex"},{default:a(()=>[n("alpha: -")]),_:1})]),_:1})]),_:1})]),V]),n("amount) と書くことができます。")]),W]),G,p("div",z,[U,M,X,p("p",null,[n("transparentize() は通常、色をより透明にする最良の方法ではないため、新しいモジュールシステムには直接含まれていません。しかし、既存の動作を維持する必要がある場合は、 transparentize($color, amount) は color.adjust(color, "),p("span",Z,[p("span",J,[s(i,null,{default:a(()=>[s(y,null,{default:a(()=>[s(c,null,{default:a(()=>[s(l,null,{default:a(()=>[n("a")]),_:1}),s(l,null,{default:a(()=>[n("l")]),_:1}),s(l,null,{default:a(()=>[n("p")]),_:1}),s(l,null,{default:a(()=>[n("h")]),_:1}),s(l,null,{default:a(()=>[n("a")]),_:1}),s(e,null,{default:a(()=>[n(":")]),_:1}),s(e,null,{default:a(()=>[n("−")]),_:1})]),_:1}),s(r,{encoding:"application/x-tex"},{default:a(()=>[n("alpha: -")]),_:1})]),_:1})]),_:1})]),O]),n("amount) と書くことができます。")]),Y]),K])}const cs=E(g,[["render",Q]]);export{ts as __pageData,cs as default};
