import{_ as t,c as p,o as r,a as e}from"./app.b419af8d.js";const b=JSON.parse('{"title":"ユーティリティ","description":"","frontmatter":{},"headers":[{"level":2,"title":"bmppalette","slug":"bmppalette","link":"#bmppalette","children":[]},{"level":2,"title":"gettimestr","slug":"gettimestr","link":"#gettimestr","children":[]},{"level":2,"title":"getdatestr","slug":"getdatestr","link":"#getdatestr","children":[]},{"level":2,"title":"text","slug":"text","link":"#text","children":[]},{"level":2,"title":"textmode","slug":"textmode","link":"#textmode","children":[]},{"level":2,"title":"emes","slug":"emes","link":"#emes","children":[]},{"level":2,"title":"gfade","slug":"gfade","link":"#gfade","children":[]},{"level":2,"title":"statictext","slug":"statictext","link":"#statictext","children":[]},{"level":2,"title":"statictext_set","slug":"statictext_set","link":"#statictext_set","children":[]},{"level":2,"title":"scrollbar","slug":"scrollbar","link":"#scrollbar","children":[]},{"level":2,"title":"progbar","slug":"progbar","link":"#progbar","children":[]},{"level":2,"title":"progbar_set","slug":"progbar_set","link":"#progbar_set","children":[]},{"level":2,"title":"progbar_step","slug":"progbar_step","link":"#progbar_step","children":[]},{"level":2,"title":"note2array","slug":"note2array","link":"#note2array","children":[]},{"level":2,"title":"array2note","slug":"array2note","link":"#array2note","children":[]},{"level":2,"title":"arraysave","slug":"arraysave","link":"#arraysave","children":[]},{"level":2,"title":"arrayload","slug":"arrayload","link":"#arrayload","children":[]}],"relativePath":"translation/hsp/i_hsp3util.md","lastUpdated":1676126774000}'),a={name:"translation/hsp/i_hsp3util.md"},s=e(`<h1 id="ユーティリティ" tabindex="-1">ユーティリティ <a class="header-anchor" href="#ユーティリティ" aria-hidden="true">#</a></h1><p><strong>対応</strong>:</p><ul><li>Win</li></ul><h2 id="bmppalette" tabindex="-1">bmppalette <a class="header-anchor" href="#bmppalette" aria-hidden="true">#</a></h2><p>bmp画像パレット情報を読み込む</p><p><strong>グループ</strong>:</p><p>拡張画面制御命令</p><p><strong>パラメーター</strong>:</p><p>&quot;ファイル名&quot; &quot;ファイル名&quot; : パレットを取り出すBMP画像ファイル名</p><p><strong>説明</strong>:</p><p>8bit形式のbmp画像ファイルに含まれるパレット情報を読み込み、HSPのパレットとして取り出します。 通常、picload命令によるパレットモードでの画像読み込みは、ファイルに付属しているパレット情報を読み込むことができません。 hspdx拡張プラグインなど、ファイル内のパレット情報が必要となる場合に、使用することができます。 ファイルとして指定することができるのは、8BIT形式のBMPファイルのみです。 それ以外のファイルや、正しくない形式が指定された場合には、何も行なわれません。</p><p><strong>参照</strong>:</p><p>palette getpal</p><h2 id="gettimestr" tabindex="-1">gettimestr <a class="header-anchor" href="#gettimestr" aria-hidden="true">#</a></h2><p>現在の時刻を文字列で取得する</p><p><strong>グループ</strong>:</p><p>拡張入出力制御命令</p><p><strong>パラメーター</strong>:</p><p>p1 p1 : 文字列を取得する変数名</p><p><strong>説明</strong>:</p><p>現在の時刻を取得して、&quot;hh:mm:ss&quot;の文字列型形式として変数に代入します。</p><p><strong>参照</strong>:</p><p>getdatestr</p><h2 id="getdatestr" tabindex="-1">getdatestr <a class="header-anchor" href="#getdatestr" aria-hidden="true">#</a></h2><p>現在の日付を文字列で取得する</p><p><strong>グループ</strong>:</p><p>拡張入出力制御命令</p><p><strong>パラメーター</strong>:</p><p>p1 p1 : 文字列を取得する変数名</p><p><strong>説明</strong>:</p><p>現在の日付を取得して、&quot;yyyy/mm/dd&quot;の文字列型形式として変数に代入します。</p><p><strong>参照</strong>:</p><p>gettimestr</p><h2 id="text" tabindex="-1">text <a class="header-anchor" href="#text" aria-hidden="true">#</a></h2><p>修飾文字表示の待ち時間を設定する</p><p><strong>グループ</strong>:</p><p>拡張画面制御命令</p><p><strong>パラメーター</strong>:</p><p>p1 p1(0) : 表示待ち時間(ms)</p><p><strong>説明</strong>:</p><p>emes命令で表示される文字の待ち時間を設定します。 p1で１文字ごとの待ち時間(ミリ秒単位)を指定します。 p1に0以下の値を指定した場合は、１文字ごとの待ちは行なわず一度に表示されます。 text命令は、HSP3から標準でなくモジュールを使用した拡張命令として扱われています。 HSP2.xと異なり、text命令で指定した待ち時間はemes命令に反映されますので注意してください。</p><p><strong>参照</strong>:</p><p>textmode emes</p><h2 id="textmode" tabindex="-1">textmode <a class="header-anchor" href="#textmode" aria-hidden="true">#</a></h2><p>修飾文字表示の設定を行なう</p><p><strong>グループ</strong>:</p><p>拡張画面制御命令</p><p><strong>パラメーター</strong>:</p><p>p1,p2 p1(0) : 修飾文字のモード p2(0) : 調整パラメーター</p><p><strong>説明</strong>:</p><p>emes命令で表示される修飾文字の設定を行ないます。 p1でモードを指定します。モードの値は以下の通りです。</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">	モード0 : 通常の表示</span></span>
<span class="line"><span style="color:#A6ACCD;">	モード1 : 影付き表示</span></span>
<span class="line"><span style="color:#A6ACCD;">	モード2 : 輪郭付き表示</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>モード1,2を指定した場合は、textmode命令を実行した時点で設定されている色が影や輪郭で使用されます。 また、p2に調整パラメーターを設定することで影や輪郭の距離を修正することができます。 調整パラメーターが0の場合は、最低距離(1ドット)となり値が大きくなるごとに距離も大きくなります。</p><p><strong>参照</strong>:</p><p>text emes</p><h2 id="emes" tabindex="-1">emes <a class="header-anchor" href="#emes" aria-hidden="true">#</a></h2><p>修飾文字を表示</p><p><strong>グループ</strong>:</p><p>拡張画面制御命令</p><p><strong>パラメーター</strong>:</p><p>&quot;strings&quot; &quot;strings&quot; : 表示するメッセージまたは変数</p><p><strong>説明</strong>:</p><p>修飾文字を表示します。 emes命令は、mes命令と同様に文字列を画面上に表示しますが、その時に文字に修飾を行なったり、１文字づつゆっくりと表示させることができます。 修飾文字の設定は、textmode命令で行なうことができます。 また、修飾文字の表示速度はtext命令で指定することができます。</p><p><strong>参照</strong>:</p><p>textmode text</p><h2 id="gfade" tabindex="-1">gfade <a class="header-anchor" href="#gfade" aria-hidden="true">#</a></h2><p>画面のフェードを行なう</p><p><strong>グループ</strong>:</p><p>拡張画面制御命令</p><p><strong>パラメーター</strong>:</p><p>p1,p2,p3,p4,p5 p1(0) : フェードレベル(0〜256) (p2,p3) : フェードを行なう左上X,Y座標 (p4,p5) : フェードを行なうX,Yサイズ</p><p><strong>説明</strong>:</p><p>フルカラー画面に対して、指定された領域を固定色フェードを行ないます。 この命令は、時間ごとにフェードレベルを変えていくことになって、フェードイン、フェードアウトなどを行なうためのものです。 p1でフェードレベルを指定します。0の場合は画面に影響はありません。 p1が256の時、完全に指定した色で塗りつぶされた状態になります。 (p2,p3)でフェードを行なう左上X,Y座標を指定します。省略した場合は、(0,0)となります。 (p4,p5)でフェードを行なうX,Yサイズを指定します。省略した場合は、画面全体のサイズが使用されます。</p><p><strong>参照</strong>:</p><h2 id="statictext" tabindex="-1">statictext <a class="header-anchor" href="#statictext" aria-hidden="true">#</a></h2><p>スタティックテキストを配置</p><p><strong>グループ</strong>:</p><p>拡張画面制御命令</p><p><strong>パラメーター</strong>:</p><p>&quot;strings&quot;,p1,p2 &quot;strings&quot; : スタティックテキストの文字列 p1(0) : Xサイズ p2(0) : Yサイズ</p><p><strong>説明</strong>:</p><p>現在のカレントポジションから、スタティックテキストを配置オブジェクトとして生成します。 配置されたオブジェクトIDは、システム変数statに代入されます。 配置されるオブジェクトのサイズを(p1,p2)で指定することができます。 配置されたスタティックテキストの内容を変更する場合は、statictext_set命令を使用してください。 objprm命令は使用できないので注意してください。</p><p><strong>参照</strong>:</p><p>statictext_set</p><h2 id="statictext_set" tabindex="-1">statictext_set <a class="header-anchor" href="#statictext_set" aria-hidden="true">#</a></h2><p>スタティックテキストを変更</p><p><strong>グループ</strong>:</p><p>拡張画面制御命令</p><p><strong>パラメーター</strong>:</p><p>p1,&quot;strings&quot; p1(0) : オブジェクトID &quot;strings&quot; : スタティックテキストの文字列</p><p><strong>説明</strong>:</p><p>statictext命令で配置した、スタティックテキストの内容を変更します。 p1にオブジェクトIDを指定して、&quot;strings&quot;で新しく設定するスタティックテキストの文字列を指定することができます。</p><p><strong>参照</strong>:</p><p>statictext</p><h2 id="scrollbar" tabindex="-1">scrollbar <a class="header-anchor" href="#scrollbar" aria-hidden="true">#</a></h2><p>スクロールバーを配置</p><p><strong>グループ</strong>:</p><p>拡張画面制御命令</p><p><strong>パラメーター</strong>:</p><p>p1,p2 p1(0) : Xサイズ p2(0) : Yサイズ</p><p><strong>説明</strong>:</p><p>現在のカレントポジションから、スクロールバーを配置オブジェクトとして生成します。 配置されたオブジェクトIDは、システム変数statに代入されます。 配置されるオブジェクトのサイズを(p1,p2)で指定することができます。 この命令は、配置オブジェクトとしてスクロールバーを生成することをサポートするものです。 配置されたスクロールバーに対するメッセージの送受信は、別途sendmsg命令で行なう必要があります。 その際には、WIN32APIのスクロールバーメッセージに関する資料が別途必要になります。 また、配置したオブジェクトに対しては、objprm命令は使用できないので注意してください。</p><p><strong>参照</strong>:</p><h2 id="progbar" tabindex="-1">progbar <a class="header-anchor" href="#progbar" aria-hidden="true">#</a></h2><p>プログレスバーを配置</p><p><strong>グループ</strong>:</p><p>拡張画面制御命令</p><p><strong>パラメーター</strong>:</p><p>p1,p2 p1(0) : Xサイズ p2(0) : Yサイズ</p><p><strong>説明</strong>:</p><p>現在のカレントポジションから、プログレスバーを配置オブジェクトとして生成します。 配置されたオブジェクトIDは、システム変数statに代入されます。 配置されるオブジェクトのサイズを(p1,p2)で指定することができます。 配置されたプログレスバーを進める場合は、progbar_setおよびprogbar_step命令を使用してください。 また、配置したオブジェクトに対しては、objprm命令は使用できないので注意してください。</p><p><strong>参照</strong>:</p><p>progbar_set progbar_step</p><h2 id="progbar_set" tabindex="-1">progbar_set <a class="header-anchor" href="#progbar_set" aria-hidden="true">#</a></h2><p>プログレスバーのステップ増分を設定する</p><p><strong>グループ</strong>:</p><p>拡張画面制御命令</p><p><strong>パラメーター</strong>:</p><p>p1,p2 p1(0) : オブジェクトID p2(0) : 増分値</p><p><strong>説明</strong>:</p><p>p1にオブジェクトIDを指定することで、progbar命令で配置したプログレスバーの1ステップごとの増分を設定することができます。 プログレスバーは、デフォルトで0から100までの値をカウンタとして持っています。 これに対して、１ステップごとに増分を加算していきます。 増分を指定しなかった場合のデフォルト値は10になります。</p><p><strong>参照</strong>:</p><p>progbar_step progbar</p><h2 id="progbar_step" tabindex="-1">progbar_step <a class="header-anchor" href="#progbar_step" aria-hidden="true">#</a></h2><p>プログレスバーを1ステップ進める</p><p><strong>グループ</strong>:</p><p>拡張画面制御命令</p><p><strong>パラメーター</strong>:</p><p>p1 p1(0) : オブジェクトID</p><p><strong>説明</strong>:</p><p>p1にオブジェクトIDを指定することで、progbar命令で配置したプログレスバーを1ステップ進めます。 1ステップごとの増分は、progbar_set命令によって指定することができます。</p><p><strong>参照</strong>:</p><p>progbar_set progbar</p><h2 id="note2array" tabindex="-1">note2array <a class="header-anchor" href="#note2array" aria-hidden="true">#</a></h2><p>複数行文字列を配列に変換</p><p><strong>グループ</strong>:</p><p>拡張入出力制御命令</p><p><strong>パラメーター</strong>:</p><p>p1,p2 p1 : 変換した配列を代入する変数 p2 : 複数行文字列が代入されている変数</p><p><strong>説明</strong>:</p><p>複数行の文字列を行ごとに分割して配列変数の各要素に代入します。 p2で指定された複数行文字列を、p1で指定した変数に変換して代入します。 p1の変数は、必ず文字列型の１次元配列変数になります。</p><p><strong>参照</strong>:</p><p>array2note arraysave arrayload</p><h2 id="array2note" tabindex="-1">array2note <a class="header-anchor" href="#array2note" aria-hidden="true">#</a></h2><p>配列を複数行文字列に変換</p><p><strong>グループ</strong>:</p><p>拡張入出力制御命令</p><p><strong>パラメーター</strong>:</p><p>p1,p2 p1 : 変換したを文字列を代入する変数 p2 : 文字列が配列に代入されている変数</p><p><strong>説明</strong>:</p><p>文字列型の１次元配列変数を複数行文字列に変換します。 p2で指定された文字列型の１次元配列変数の内容を変換し、p1で指定した変数に代入します。</p><p><strong>参照</strong>:</p><p>note2array arraysave arrayload</p><h2 id="arraysave" tabindex="-1">arraysave <a class="header-anchor" href="#arraysave" aria-hidden="true">#</a></h2><p>文字列型の配列変数をファイルに書き出し</p><p><strong>グループ</strong>:</p><p>拡張入出力制御命令</p><p><strong>パラメーター</strong>:</p><p>&quot;ファイル名&quot;,p1 &quot;ファイル名&quot; : 書き出しを行なうファイル名 p1 : 書き出しを行なう元の変数</p><p><strong>説明</strong>:</p><p>p1で指定した文字列型の１次元配列変数を複数行文字列に変換した上で、指定したファイル名で書き出します。 扱える配列は１次元配列のみになります。 書き出したファイルは、arrayload命令によって読み込むことが可能です。</p><p><strong>参照</strong>:</p><p>note2array array2note arrayload</p><h2 id="arrayload" tabindex="-1">arrayload <a class="header-anchor" href="#arrayload" aria-hidden="true">#</a></h2><p>文字列型の配列変数をファイルから読み込み</p><p><strong>グループ</strong>:</p><p>拡張入出力制御命令</p><p><strong>パラメーター</strong>:</p><p>&quot;ファイル名&quot;,p1 &quot;ファイル名&quot; : 読み込みを行なうファイル名 p1 : 読み込みを行なう先の変数</p><p><strong>説明</strong>:</p><p>arraysave命令によって書き出されたファイルを、p1で指定した変数に読み込みます。 この命令は、ファイルに含まれる複数行文字列の行を配列要素に変換して代入するもので、作成される配列配列は１次元配列になります。</p><p><strong>参照</strong>:</p><p>note2array array2note arraysave</p>`,173),n=[s];function o(g,l,i,d,h,c){return r(),p("div",null,n)}const x=t(a,[["render",o]]);export{b as __pageData,x as default};
