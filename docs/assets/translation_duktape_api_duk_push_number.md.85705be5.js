import{_ as a,o as s,c as e,Q as n}from"./chunks/framework.92ce8a2a.js";const k=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"translation/duktape/api/duk_push_number.md","filePath":"translation/duktape/api/duk_push_number.md","lastUpdated":1676126774000}'),o={name:"translation/duktape/api/duk_push_number.md"},p=n('<h2 id="duk-push-number" tabindex="-1">duk_push_number() <a class="header-anchor" href="#duk-push-number" aria-label="Permalink to &quot;duk_push_number()&quot;">​</a></h2><p>1.0.0 stack</p><h3 id="プロトタイプ" tabindex="-1">プロトタイプ <a class="header-anchor" href="#プロトタイプ" aria-label="Permalink to &quot;プロトタイプ&quot;">​</a></h3><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">duk_push_number</span><span style="color:#E1E4E8;">(duk_context </span><span style="color:#F97583;">*</span><span style="color:#FFAB70;">ctx</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">duk_double_t</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">val</span><span style="color:#E1E4E8;">);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">duk_push_number</span><span style="color:#24292E;">(duk_context </span><span style="color:#D73A49;">*</span><span style="color:#E36209;">ctx</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">duk_double_t</span><span style="color:#24292E;"> </span><span style="color:#E36209;">val</span><span style="color:#24292E;">);</span></span></code></pre></div><h3 id="スタック" tabindex="-1">スタック <a class="header-anchor" href="#スタック" aria-label="Permalink to &quot;スタック&quot;">​</a></h3><p>| ... | -&gt; | ... | val |</p><h3 id="要約" tabindex="-1">要約 <a class="header-anchor" href="#要約" aria-label="Permalink to &quot;要約&quot;">​</a></h3><p>数値（IEEE double）valをスタックにプッシュします。</p><p>val が NaN の場合、他の NaN 形式に正規化される場合があります。</p><h3 id="例" tabindex="-1">例 <a class="header-anchor" href="#例" aria-label="Permalink to &quot;例&quot;">​</a></h3><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">duk_push_number</span><span style="color:#E1E4E8;">(ctx, </span><span style="color:#79B8FF;">123.0</span><span style="color:#E1E4E8;">);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">duk_push_number</span><span style="color:#24292E;">(ctx, </span><span style="color:#005CC5;">123.0</span><span style="color:#24292E;">);</span></span></code></pre></div>',11),l=[p];function t(r,c,d,u,i,h){return s(),e("div",null,l)}const E=a(o,[["render",t]]);export{k as __pageData,E as default};
