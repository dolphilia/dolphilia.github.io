import{_ as s,c as a,o as l,Q as n}from"./chunks/framework.44f152d8.js";const d=JSON.parse('{"title":"ロギングの使用方法","description":"","frontmatter":{},"headers":[],"relativePath":"translation/duktape/wiki/how_to_use_logging.md","lastUpdated":1676126774000}'),o={name:"translation/duktape/wiki/how_to_use_logging.md"},t=n(`<h1 id="ロギングの使用方法" tabindex="-1">ロギングの使用方法 <a class="header-anchor" href="#ロギングの使用方法" aria-label="Permalink to &quot;ロギングの使用方法&quot;">​</a></h1><h2 id="概要" tabindex="-1">概要 <a class="header-anchor" href="#概要" aria-label="Permalink to &quot;概要&quot;">​</a></h2><p>Duktape 1.xには、小さなフットプリントと適度なパフォーマンス、そしてリダイレクト可能な出力を持つビルトイン・ロギング・フレームワークがあります。Duktape 2.xでは、このフレームワークは、エキゾチックなターゲットでの移植性の問題を 避けるために、オプションの追加機能(<a href="https://github.com/svaarala/duktape/tree/master/extras/logging" target="_blank" rel="noreferrer">https://github.com/svaarala/duktape/tree/master/extras/logging</a>)に移されました。</p><p>ロギングフレームワークの機能と内部の詳細については、<a href="https://github.com/svaarala/duktape/blob/master/doc/logging.rst" target="_blank" rel="noreferrer">https://github.com/svaarala/duktape/blob/master/doc/logging.rst</a> を参照してください。</p><p>もちろん、他の任意のロギングフレームワーク、例えば <a href="https://github.com/svaarala/duktape/tree/master/extras/console" target="_blank" rel="noreferrer">https://github.com/svaarala/duktape/tree/master/extras/console</a> によって提供される console.log() を使用することもできます。低メモリのターゲットでは、単一の print() バインディングのようなもっと単純なものが、最も適切なアプローチかもしれません。</p><h2 id="例" tabindex="-1">例 <a class="header-anchor" href="#例" aria-label="Permalink to &quot;例&quot;">​</a></h2><p>基本的な使用例です。</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> val1 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">foo</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> val2 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">123</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> val3 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Date</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">123456789e3</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> logger </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> Duktape</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Logger</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">// or new Duktape.Logger(&#39;logger name&#39;)</span></span>
<span class="line"><span style="color:#A6ACCD;">logger</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">info</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">three values:</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> val1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> val2</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> val3)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><p>この例では、以下のような内容が標準エラー出力に出力されます。</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">2014-10-17T19:26:42.141Z INF test.js: three values: foo 123 1973-11-29 23:33:09.000+02:00</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h2 id="duktape-logger-ビルダー" tabindex="-1">Duktape.Logger (ビルダー) <a class="header-anchor" href="#duktape-logger-ビルダー" aria-label="Permalink to &quot;Duktape.Logger (ビルダー)&quot;">​</a></h2><table><thead><tr><th>Property</th><th>Description</th></tr></thead><tbody><tr><td>prototype</td><td>Logger オブジェクトのプロトタイプです。</td></tr><tr><td>clog</td><td>Cコードから書かれたログエントリーのための代表的なロガーです。</td></tr></tbody></table><p>コンストラクターとして呼び出され、指定された名前（最初の引数）を持つ新しい Logger オブジェクトを作成します。名前が省略された場合、Logger は呼び出し元の関数の .fileName プロパティに基づいた名前を自動的に割り当てます。通常の関数として呼び出された場合、TypeErrorを投げます。</p><p>Loggerインスタンスは、以下のプロパティを持ちます。</p><ul><li>n: ロガー名。（a）与えられた名前が文字列でない場合、または（b）名前が与えられず、自動割り当てが失敗した場合、プロパティは欠落します。ロガーは、ロガー・プロトタイプから値を継承します。このプロパティは、後で希望する値に手動で設定することができます。</li><li>l: ログ・レベル、出力する最小ログ・レベルを示します。このプロパティは、デフォルトでは割り当てられず、ロガーは、ロガー プロトタイプからデフォルトのレベルを継承します。このプロパティを手動で別の値に設定し、ロガー単位でログ レベルを制御することができます。</li></ul><p>(テール呼び出しは、理論的には自動的な名前の割り当てに影響する場合があります (つまり、ロガー名引数が省略された場合)。しかし、コンストラクター呼び出しがテール呼び出しに変換されることはないので、これは現実的な問題ではありません)。</p><h2 id="duktape-logger-prototype" tabindex="-1">Duktape.Logger.prototype <a class="header-anchor" href="#duktape-logger-prototype" aria-label="Permalink to &quot;Duktape.Logger.prototype&quot;">​</a></h2><table><thead><tr><th>Property</th><th>Description</th></tr></thead><tbody><tr><td>raw</td><td>フォーマットされたログ行を出力します (バッファ値)。</td></tr><tr><td>fmt</td><td>単一の（オブジェクト）引数をフォーマットする。</td></tr><tr><td>trace</td><td>トレースレベル（レベル0、TRC）のログエントリーを書き込む。</td></tr><tr><td>debug</td><td>デバッグレベル（レベル1、DBG）のログエントリーを書き込む。</td></tr><tr><td>info</td><td>情報レベル（レベル2、INF）のログエントリーを書き込む。</td></tr><tr><td>warn</td><td>警告レベル（レベル3、WRN）のログエントリーを書き込む。</td></tr><tr><td>error</td><td>エラーレベル（レベル4、ERR）のログエントリーを書き込む。</td></tr><tr><td>fatal</td><td>致命的なレベル（レベル5、FTL）のログエントリを書き込む。</td></tr><tr><td>l</td><td>ログレベルの初期値、初期値は2（情報）です。</td></tr><tr><td>n</td><td>デフォルトのロガー名で、初期値は &quot;anon &quot;です。</td></tr></tbody></table><h2 id="duk-log-c-api-call" tabindex="-1">duk_log() C API call <a class="header-anchor" href="#duk-log-c-api-call" aria-label="Permalink to &quot;duk_log() C API call&quot;">​</a></h2><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">duk_log</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">duk_context </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">ctx</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">duk_int_t</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">level</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">fmt</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">...);</span></span>
<span class="line"></span></code></pre></div><p>指定されたログレベル (DUK_LOG_xxx の一つ) で、フォーマットされたログエントリを書き込みます。ログの書き込みは、Duktape.Logger.clogger のインスタンスを使用して、ロギングフレームワークを通過します。</p><p>例</p><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#82AAFF;">duk_log</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">ctx</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> DUK_LOG_INFO</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">received message, type: %d</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">int</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">msg_type</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span></code></pre></div><h2 id="duk-log-va-c-api-call" tabindex="-1">duk_log_va() C API call <a class="header-anchor" href="#duk-log-va-c-api-call" aria-label="Permalink to &quot;duk_log_va() C API call&quot;">​</a></h2><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">duk_log_va</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">duk_context </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">ctx</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">duk_int_t</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">level</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">fmt</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> va_list </span><span style="color:#A6ACCD;font-style:italic;">ap</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span></code></pre></div><p>duk_log() と似ているが、vararg (va_list) の変種である。例</p><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">my_log_info</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">duk_context </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">ctx</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">fmt</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">...)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    va_list ap</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">va_start</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">ap</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> fmt</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">duk_log_va</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">ctx</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> DUK_LOG_INFO</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> fmt</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> ap</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">va_end</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">ap</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div>`,27),p=[t];function e(r,c,D,y,i,F){return l(),a("div",null,p)}const A=s(o,[["render",e]]);export{d as __pageData,A as default};
