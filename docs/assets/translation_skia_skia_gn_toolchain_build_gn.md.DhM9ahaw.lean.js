import{_ as o,c as p,j as s,a as n,t as l,a3 as e,o as t}from"./chunks/framework.DflgEAq4.js";const qs=JSON.parse('{"title":"skia/gn/toolchain/BUILD.gn の解説","description":"","frontmatter":{},"headers":[],"relativePath":"translation/skia/skia_gn_toolchain_build_gn.md","filePath":"translation/skia/skia_gn_toolchain_build_gn.md","lastUpdated":null}'),i={name:"translation/skia/skia_gn_toolchain_build_gn.md"},c=e("",48),u=s("strong",null,"説明",-1),d=s("li",null,[s("strong",null,"プリコンパイルヘッダのタイプ"),n(": "),s("code",null,"precompiled_header_type"),n(" を "),s("code",null,'"msvc"'),n(" に設定。")],-1),r=s("li",null,[s("strong",null,"PDBファイル名"),n(": デバッグ情報のファイル名を "),s("code",null,"pdbname"),n(" に設定。")],-1),_=s("strong",null,"コンパイルコマンド",-1),h=s("code",null,"command",-1),g=s("code",null,"$env_setup",-1),q=s("code",null,"$cl",-1),m=e("",3),b=e("",2),k=s("strong",null,"説明",-1),f=s("code",null,"cc",-1),v=e("",4),x=s("strong",null,"説明",-1),C=s("li",null,[s("strong",null,"レスポンスファイル"),n(": "),s("code",null,"rspfile"),n(" に出力ファイルのレスポンスファイルパスを設定。")],-1),y=s("strong",null,"コマンド",-1),$=s("code",null,"command",-1),T=s("code",null,"$env_setup",-1),P=s("code",null,"$lib",-1),w=s("li",null,[s("code",null,"@$rspfile"),n(": レスポンスファイルの内容を使用")],-1),S=e("",6),A=e("",31),V=s("strong",null,"説明",-1),I=s("code",null,"cxx",-1),M=s("code",null,"cc",-1),D=s("code",null,"cxx",-1),j=e("",2),W=s("strong",null,"説明",-1),F=s("code",null,"objc",-1),N=s("li",null,[s("code",null,"framework_dirs"),n(" を追加して、フレームワークディレクトリを指定します。")],-1),L=e("",2),O=s("strong",null,"説明",-1),U=s("code",null,"objcxx",-1),E=s("code",null,"objc",-1),G=s("code",null,"cxx",-1),R=e("",2),B=s("strong",null,"説明",-1),X=s("code",null,"asm",-1),H=s("li",null,[s("code",null,"cc"),n(" コンパイラを使用してアセンブルを行います。")],-1),z=e("",5),J=s("strong",null,"説明",-1),K=s("li",null,[s("strong",null,"MacおよびiOSの場合"),n(": "),s("ul",null,[s("li",null,[s("code",null,"libtool"),n(" コマンドを使用して静的ライブラリをリンクします。"),s("code",null,"-static"),n(" オプションで静的ライブラリを作成し、"),s("code",null,"-no_warning_for_no_symbols"),n(" オプションでシンボルがない場合の警告を抑制します。")])])],-1),Q=s("strong",null,"その他のプラットフォームの場合",-1),Y=s("li",null,[n("リンクコマンドでは、"),s("code",null,"rm.py"),n(" スクリプトを使用して既存の出力ファイルを削除し、その後 "),s("code",null,"ar"),n(" コマンドで静的ライブラリを作成します。")],-1),Z=e("",1),ss=e("",2),ns=s("strong",null,"説明",-1),as=e("",2),ls=s("strong",null,"レスポンスファイル",-1),es=s("li",null,[s("strong",null,"リンクグループ"),n(": "),s("ul",null,[s("li",null,[n("通常のプラットフォームでは、"),s("code",null,"--start-group"),n(" と "),s("code",null,"--end-group"),n(" を使用して複数の "),s("code",null,".a"),n(" ファイルをリンク。")]),s("li",null,"Mac、iOS、およびFuchsiaではこれらのフラグを使用しない。")])],-1),os=s("strong",null,"リンクコマンド",-1),ps=s("code",null,"$link -shared",-1),ts=e("",1),is=e("",27);function cs(a,us,ds,rs,_s,hs){return t(),p("div",null,[c,s("ul",null,[s("li",null,[u,n(": "),s("ul",null,[d,r,s("li",null,[_,n(": "),h,n(" で指定。環境設定コマンド（"),g,n("）と共に、コンパイラツール（"),q,n("）を実行。その他のフラグや設定も含まれます。 "),s("ul",null,[s("li",null,[s("code",null,l(a.defines),1),n(": 定義済みマクロ")]),s("li",null,[s("code",null,l(a.include_dirs),1),n(": インクルードディレクトリ")]),s("li",null,[s("code",null,l(a.cflags),1),n(", "),s("code",null,l(a.cflags_c),1),n(": コンパイルフラグ")]),s("li",null,[s("code",null,l(a.source),1),n(", "),s("code",null,l(a.output),1),n(": ソースファイルと出力ファイル")])])]),m])])]),b,s("ul",null,[s("li",null,[k,n(": "),f,n(" ツールの設定と同様に、C++コンパイラの設定を行います。違いは "),s("code",null,l(a.cflags_cc),1),n(" が使用される点のみです。")])]),v,s("ul",null,[s("li",null,[x,n(": "),s("ul",null,[C,s("li",null,[y,n(": "),$,n(" で指定。環境設定コマンド（"),T,n("）と共に、アーカイブツール（"),P,n("）を実行。 "),s("ul",null,[s("li",null,[s("code",null,l(a.arflags),1),n(": アーカイブフラグ")]),s("li",null,[s("code",null,l(a.output),1),n(": 出力ファイル")]),w])]),S])])]),A,s("ul",null,[s("li",null,[V,n(": "),I,n(" ツール（C++コンパイラ）の設定を行います。 "),s("ul",null,[s("li",null,[M,n(" ツールとほぼ同じ設定ですが、"),D,n(" コンパイラを使用し、"),s("code",null,l(a.cflags_cc),1),n(" を追加しています。")])])])]),j,s("ul",null,[s("li",null,[W,n(": "),F,n(" ツール（Objective-Cコンパイラ）の設定を行います。 "),s("ul",null,[N,s("li",null,[s("code",null,l(a.cflags_objc),1),n(" を追加しています。")])])])]),L,s("ul",null,[s("li",null,[O,n(": "),U,n(" ツール（Objective-C++コンパイラ）の設定を行います。 "),s("ul",null,[s("li",null,[E,n(" ツールと同様ですが、"),G,n(" コンパイラを使用し、"),s("code",null,l(a.cflags_objcc),1),n(" を追加しています。")])])])]),R,s("ul",null,[s("li",null,[B,n(": "),X,n(" ツール（アセンブラ）の設定を行います。 "),s("ul",null,[H,s("li",null,[s("code",null,l(a.asmflags),1),n(" を追加しています。")])])])]),z,s("ul",null,[s("li",null,[J,n(": "),s("ul",null,[K,s("li",null,[Q,n(": "),s("ul",null,[s("li",null,[n("レスポンスファイル "),s("code",null,l(a.output)+".rsp",1),n(" を作成し、その内容に "),s("code",null,l(a.inputs),1),n(" を含めます。")]),Y])]),Z])])]),ss,s("ul",null,[s("li",null,[ns,n(": "),s("ul",null,[as,s("li",null,[ls,n(": "),s("code",null,l(a.output)+".rsp",1),n(" に "),s("code",null,l(a.inputs),1),n(" を含めます。")]),es,s("li",null,[os,n(": "),s("ul",null,[s("li",null,[ps,n(" で共有ライブラリを作成し、"),s("code",null,l(a.ldflags),1),n("、"),s("code",null,l(a.frameworks),1),n("、"),s("code",null,l(a.solibs),1),n("、"),s("code",null,l(a.libs),1),n(" を含めます。")]),s("li",null,[s("code",null,"-o "+l(a.output),1),n(" で出力ファイルを指定。")])])]),ts])])]),is])}const ms=o(i,[["render",cs]]);export{qs as __pageData,ms as default};
