import{_ as a,c as s,o as e,a4 as i}from"./chunks/framework.C5O6QHj3.js";const g=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"translation/duktape/api/duk_debugger_pause.md","filePath":"translation/duktape/api/duk_debugger_pause.md","lastUpdated":1676126774000}'),t={name:"translation/duktape/api/duk_debugger_pause.md"},p=i(`<h2 id="duk-debugger-pause" tabindex="-1">duk_debugger_pause() <a class="header-anchor" href="#duk-debugger-pause" aria-label="Permalink to &quot;duk_debugger_pause()&quot;">​</a></h2><p>1.5.0 debugger</p><h3 id="プロトタイプ" tabindex="-1">プロトタイプ <a class="header-anchor" href="#プロトタイプ" aria-label="Permalink to &quot;プロトタイプ&quot;">​</a></h3><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> duk_debugger_pause</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(duk_context </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">ctx</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h3 id="スタック" tabindex="-1">スタック <a class="header-anchor" href="#スタック" aria-label="Permalink to &quot;スタック&quot;">​</a></h3><p>(バリュースタックに影響なし。)</p><h3 id="要約" tabindex="-1">要約 <a class="header-anchor" href="#要約" aria-label="Permalink to &quot;要約&quot;">​</a></h3><p>デバッガの一時停止をできるだけ早く要求し、ブロックせずに返します。一時停止は ECMAScript バイトコードが次に実行されたときにトリガーされ、通常はほぼ即座に実行されます。しかし、Duktape/C 関数のようなネイティブコールが進行中であったり、ECMAScript コードが現在実行されていない場合、一時停止が有効になるまでに時間がかかることがあります。</p><p>この呼び出しは、（1）デバッガ・サポートがコンパイルされていない、（2）デバッガが接続されていない、（3）Duktapeがすでに一時停止している、などの場合には実行できません。これは、ECMAScriptのデバッガ・ステートメントのセマンティクスを模倣しています。</p><p>他のDuktape APIコールと同様、このコールはスレッドセーフではありません。そのコンテキストのECMAScriptコードを実行しているスレッドとは別のスレッドから一時停止をトリガーしたくなるかもしれませんが、これは安全ではなく、現在サポートされていません。</p><h3 id="例" tabindex="-1">例 <a class="header-anchor" href="#例" aria-label="Permalink to &quot;例&quot;">​</a></h3><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* In your event loop: */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (key_pressed </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> KEY_F12) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    duk_debugger_pause</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ctx);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div>`,12),n=[p];function l(d,h,r,k,o,u){return e(),s("div",null,n)}const _=a(t,[["render",l]]);export{g as __pageData,_ as default};
