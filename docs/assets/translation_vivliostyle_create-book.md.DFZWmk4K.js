import{_ as i,c as a,o as s,a4 as e}from"./chunks/framework.C5O6QHj3.js";const E=JSON.parse('{"title":"Create Book","description":"","frontmatter":{},"headers":[],"relativePath":"translation/vivliostyle/create-book.md","filePath":"translation/vivliostyle/create-book.md","lastUpdated":1676974355000}'),l={name:"translation/vivliostyle/create-book.md"},t=e(`<h1 id="create-book" tabindex="-1">Create Book <a class="header-anchor" href="#create-book" aria-label="Permalink to &quot;Create Book&quot;">​</a></h1><nav class="table-of-contents"><ul><li><a href="#はじめに">はじめに</a></li><li><a href="#本文書が対象とするバージョン">本文書が対象とするバージョン</a></li><li><a href="#本文書の読者対象">本文書の読者対象</a></li><li><a href="#create-bookの動作環境">Create Bookの動作環境</a></li><li><a href="#本を作る手順">本を作る手順</a></li><li><a href="#インストール">インストール</a></li><li><a href="#create-book-の仕組み">Create Book の仕組み</a></li><li><a href="#原稿の執筆">原稿の執筆</a><ul><li><a href="#gfm-github-flavored-markdown">GFM (GitHub Flavored Markdown)</a></li><li><a href="#vfm-vivliostyle-flavored-markdown">VFM (Vivliostyle Flavored Markdown)</a></li><li><a href="#その他の記法">その他の記法</a></li></ul></li><li><a href="#本のカスタマイズ">本のカスタマイズ</a><ul><li><a href="#書名の指定">書名の指定</a></li><li><a href="#著者名とメールアドレスの指定">著者名とメールアドレスの指定</a></li><li><a href="#使用する言語の指定">使用する言語の指定</a></li><li><a href="#判型の指定">判型の指定</a></li><li><a href="#テーマパッケージの指定">テーマパッケージの指定</a></li><li><a href="#複数原稿の掲載">複数原稿の掲載</a></li><li><a href="#目次の追加">目次の追加</a></li><li><a href="#奥付の追加">奥付の追加</a></li><li><a href="#本の生成">本の生成</a></li><li><a href="#_4色印刷用pdfファイル-の生成">4色印刷用PDFファイル の生成</a></li></ul></li><li><a href="#制限事項">制限事項</a></li><li><a href="#おわりに">おわりに</a></li></ul></nav><h2 id="はじめに" tabindex="-1">はじめに <a class="header-anchor" href="#はじめに" aria-label="Permalink to &quot;はじめに&quot;">​</a></h2><p><a href="https://github.com/vivliostyle/create-book" target="_blank" rel="noreferrer">Create Book</a> は、簡単に本を作れる環境を構築します。テンプレートをつかって原稿を執筆し、各種のカスタマイズをした後、<a href="https://github.com/vivliostyle/vivliostyle-cli" target="_blank" rel="noreferrer">Vivliostyle CLI</a> により本を生成します。専門的な HTML や CSS の知識は必要ありません。</p><p>本文書では、複数のページを綴じた PDFファイルを一括して「本」と呼びます。 <a href="https://github.com/vivliostyle" target="_blank" rel="noreferrer">Vivliostyle</a> はさまざまな形の本を作るためのライブラリです。より多くのユーザに、より簡単に Vivliostyle の技術を届けるプロダクトが Create Book です。</p><h2 id="本文書が対象とするバージョン" tabindex="-1">本文書が対象とするバージョン <a class="header-anchor" href="#本文書が対象とするバージョン" aria-label="Permalink to &quot;本文書が対象とするバージョン&quot;">​</a></h2><ul><li>v0.1.x</li></ul><h2 id="本文書の読者対象" tabindex="-1">本文書の読者対象 <a class="header-anchor" href="#本文書の読者対象" aria-label="Permalink to &quot;本文書の読者対象&quot;">​</a></h2><ul><li>ターミナルの操作がある程度できる</li><li>markdownの記法をある程度知っている</li><li>以下のような本を手間をかけずに作りたいと思っている <ul><li>技術同人誌をふくむ横書き文書</li><li>学術論文をふくむ横書き文書</li><li>小説同人誌をふくむ縦書き文書</li><li>スライド</li></ul></li></ul><h2 id="create-bookの動作環境" tabindex="-1">Create Bookの動作環境 <a class="header-anchor" href="#create-bookの動作環境" aria-label="Permalink to &quot;Create Bookの動作環境&quot;">​</a></h2><ul><li>macOS 10.13 (High Sierra) 以上</li><li>Windows 10</li><li>以下がインストールずみであること <ul><li><a href="https://nodejs.org/ja/" target="_blank" rel="noreferrer">Node.js</a> (v12 以上)</li></ul></li><li>印刷用PDFファイルの出力には、以下のインストールも必要 <ul><li><a href="https://www.ghostscript.com/" target="_blank" rel="noreferrer">ghostscript</a></li><li><a href="https://texwiki.texjp.org/?Xpdf" target="_blank" rel="noreferrer">Xpdf</a></li></ul></li></ul><h2 id="本を作る手順" tabindex="-1">本を作る手順 <a class="header-anchor" href="#本を作る手順" aria-label="Permalink to &quot;本を作る手順&quot;">​</a></h2><p>以下の手順により本を作成することができます。</p><ol><li><a href="https://github.com/vivliostyle/create-book" target="_blank" rel="noreferrer">Create Book</a> を実行し、プロジェクトフォルダを作成</li><li>作成されたプロジェクトフォルダに移動</li><li>既存の markdown ファイルを編集して原稿を執筆</li><li><code>vivliostyle.config.js</code> を編集してカスタマイズ</li><li>npm により <a href="https://github.com/vivliostyle/vivliostyle-cli" target="_blank" rel="noreferrer">Vivliostyle CLI</a> を実行し本を生成</li></ol><p>作成されるプロジェクトフォルダは git で管理されるため、<a href="https://www.sourcetreeapp.com/" target="_blank" rel="noreferrer">SourceTree</a> などの git クライアントを使えば、現在の版と以前の版を比較したり戻したりといった、バージョン管理による本作りができます (もしバージョン管理が不要でしたら、無視しても全く問題ありません)。なお、本文書では git の解説はしません。各種解説書、解説サイトをご参照ください。</p><h2 id="インストール" tabindex="-1">インストール <a class="header-anchor" href="#インストール" aria-label="Permalink to &quot;インストール&quot;">​</a></h2><p>プロジェクトフォルダを作成するインストールコマンドは下記の通りです。<code>&lt;directory&gt;</code> には作成しようとする本のプロジェクトフォルダ名を指定します。非ASCII文字は使えません。</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>npm create book &lt;directory&gt;</span></span></code></pre></div><p>指定したプロジェクトフォルダが既に存在しており、且つそのフォルダが空でない場合、 Create Book はエラーになります（既存のフォルダが空であればインストールは成功します）。</p><p>なお、<a href="https://www.npmjs.com/" target="_blank" rel="noreferrer">npm</a>以外に <a href="https://classic.yarnpkg.com/ja/" target="_blank" rel="noreferrer">yarn</a>も利用可能ですが、本文書ではより一般的な前者で説明します。</p><p>インストールの際、以下の項目を指定することができます (図1)。必ずしもここで全てを指定する必要はなく、指定したくない場合はリターンキーで次の項目に移動できます。後述の <code>vivliostyle.config.js</code> を編集することで変更が可能です。</p><p>図1 Create Bookのインストール。プロジェクトフォルダ名として mybook を指定している。なお、npmから警告が出るがユーザに影響はない。</p><ul><li>description (本の内容に関する簡単な説明。英数字以外に漢字片仮名平仮名も使用可)</li><li>author name (著者名。英数字以外に漢字片仮名平仮名も使用可)</li><li>author email (著者のメールアドレス)</li><li>license (配布ライセンスの種別を矢印キー上下で選択)</li><li>choose theme (下記テーマパッケージを矢印キー上下で選択) <ul><li><code>@vivliostyle/theme-bunko</code>……小説同人誌をふくむ縦書き文書／冊子</li><li><code>@vivliostyle/theme-techbook</code>……技術同人誌をふくむ横書き冊子</li><li><code>@vivliostyle/theme-slide</code>……スライド</li><li><code>@vivliostyle/theme-academic</code>……論文、レポートをふくむ横書き文書</li></ul></li></ul><p>なお、<a href="https://github.com/vivliostyle/themes" target="_blank" rel="noreferrer">テーマパッケージ</a>もOSS開発です。開発が進むにつれ、上記以外にも追加される可能性があります。</p><h2 id="create-book-の仕組み" tabindex="-1">Create Book の仕組み <a class="header-anchor" href="#create-book-の仕組み" aria-label="Permalink to &quot;Create Book の仕組み&quot;">​</a></h2><p>下図は実際にインストールしたプロジェクトフォルダ (ここでは <code>mybook</code>) の内容です (図2)。自分の意図に合わせて本を作るため、❶〜❸のファイルを編集します。</p><p>図2 インストールにより生成されたmybookフォルダの内容。なお、グレイのファイル／フォルダは不可視属性。</p><ul><li>❶ <code>manuscript.md</code> ……本の原稿となる markdownファイル</li><li>❷ <code>vivliostyle.config.js</code> ……判型や目次／奥付の追加など本をカスタマイズする設定ファイル</li><li>❸ <code>package.json</code> ……プロジェクトフォルダ全体の設定ファイル</li></ul><p>Create Book は JavaScript の実行環境の一つである <a href="https://nodejs.org/ja/" target="_blank" rel="noreferrer">Node.js</a> に付属するコマンドラインインターフェイス、<a href="https://www.npmjs.com/" target="_blank" rel="noreferrer">npm</a>によって本作りをします。Create Book はインストールの際、以下のようなことをします。</p><ul><li>npm が参照する設定ファイル <code>vivliostyle.config.js</code> (❷)や <code>package.json</code>(❸)を作成</li><li>原稿のテンプレート <code>manuscript.md</code>(❶)を作成</li><li><code>node_modules</code> フォルダ (図2) に、npm が使用する各種ライブラリをインストール</li></ul><p>npm は上記設定ファイルを参照し、また上記ライブラリを使いながら、Vivliostyle CLI を駆動して <code>manuscript.md</code> を組版し、PDFファイルに出力します。</p><h2 id="原稿の執筆" tabindex="-1">原稿の執筆 <a class="header-anchor" href="#原稿の執筆" aria-label="Permalink to &quot;原稿の執筆&quot;">​</a></h2><p>インストールすると作成される <code>manuscript.md</code> (図2❶) をテンプレートにして原稿を執筆します。記法は標準的な markdown である<a href="https://github.github.com/gfm/" target="_blank" rel="noreferrer">GFM (GitHub Flavored Markdown)</a>を、書籍向けに拡張した <a href="https://github.com/vivliostyle/vfm" target="_blank" rel="noreferrer">VFM (Vivliostyle Flavored Markdown)</a> です。</p><p>GFM の上位互換ですから、慣れた人なら基本的な記法は GFM がそのまま使え、新たに覚えるのは VFM だけですみます。</p><h3 id="gfm-github-flavored-markdown" tabindex="-1">GFM (GitHub Flavored Markdown) <a class="header-anchor" href="#gfm-github-flavored-markdown" aria-label="Permalink to &quot;GFM (GitHub Flavored Markdown)&quot;">​</a></h3><p>下記の外部サイトを参照してください。</p><ul><li><a href="https://docs.github.com/ja/github/writing-on-github/basic-writing-and-formatting-syntax" target="_blank" rel="noreferrer">基本的な書き方とフォーマットの構文 /GitHub</a> (ただし、記事中<a href="https://docs.github.com/ja/github/writing-on-github/basic-writing-and-formatting-syntax#using-emoji" target="_blank" rel="noreferrer">「絵文字の利用」</a>はCreate Bookでサポートされません)</li><li><a href="https://docs.github.com/ja/github/writing-on-github/working-with-advanced-formatting" target="_blank" rel="noreferrer">高度なフォーマットを使用して作業する /GitHub</a></li></ul><h3 id="vfm-vivliostyle-flavored-markdown" tabindex="-1">VFM (Vivliostyle Flavored Markdown) <a class="header-anchor" href="#vfm-vivliostyle-flavored-markdown" aria-label="Permalink to &quot;VFM (Vivliostyle Flavored Markdown)&quot;">​</a></h3><p>詳細な仕様は下記を参照してください。</p><ul><li><a href="https://vivliostyle.github.io/vfm/#/vfm" target="_blank" rel="noreferrer">Vivliostyle Flavored Markdown: Working Draft</a></li></ul><p>ただし、現バージョンでは以下の項目のみ実装しています。</p><ul><li><p><a href="https://vivliostyle.github.io/vfm/#/vfm#hard-new-line" target="_blank" rel="noreferrer">Hard new line (強制改行)</a></p></li><li><p><a href="https://vivliostyle.github.io/vfm/#/vfm#code" target="_blank" rel="noreferrer">Code (コードの記述)</a></p><ul><li><a href="https://vivliostyle.github.io/vfm/#/vfm#with-caption" target="_blank" rel="noreferrer">with caption (コード部分のキャプション)</a></li></ul></li><li><p><a href="https://vivliostyle.github.io/vfm/#/vfm#image" target="_blank" rel="noreferrer">Image (画像とそのサイズ指定)</a></p><p>なお、仕様に書かれていませんが、以下の記法で画像のサイズ指定が可能です。画像ファイルは( )内に相対パスで指定します。xxxは数値、単位はpxですが省略して記述します。<code>width</code> (幅) の他に <code>height</code> (高さ) も使えます。</p><div class="language-md vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">md</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">![</span><span style="--shiki-light:#032F62;--shiki-dark:#DBEDFF;--shiki-light-text-decoration:underline;--shiki-dark-text-decoration:underline;">図n</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">](</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;--shiki-light-text-decoration:underline;--shiki-dark-text-decoration:underline;">./foo.png</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">){width=xxx}</span></span></code></pre></div><ul><li><a href="https://vivliostyle.github.io/vfm/#/vfm#with-caption-2" target="_blank" rel="noreferrer">with caption (画像のキャプション)</a></li></ul></li><li><p><a href="https://vivliostyle.github.io/vfm/#/vfm#ruby" target="_blank" rel="noreferrer">Ruby (ルビの記述)</a></p></li><li><p><a href="https://vivliostyle.github.io/vfm/#/vfm#raw-html" target="_blank" rel="noreferrer">Raw HTML (HTMLそのままの記述)</a></p></li><li><p><a href="https://vivliostyle.github.io/vfm/#/vfm#frontmatter" target="_blank" rel="noreferrer">Frontmatter (書名の指定)</a></p></li></ul><h3 id="その他の記法" tabindex="-1">その他の記法 <a class="header-anchor" href="#その他の記法" aria-label="Permalink to &quot;その他の記法&quot;">​</a></h3><h4 id="注" tabindex="-1">注 <a class="header-anchor" href="#注" aria-label="Permalink to &quot;注&quot;">​</a></h4><p>GFM にも VFM にも規定されていませんが、下記外部サイトの記法でいくつかの 後注が利用できます。</p><ul><li><a href="https://www.npmjs.com/package/remark-footnotes" target="_blank" rel="noreferrer">remark-footnotes</a></li></ul><p>また、テーマパッケージ <code>@vivliostyle/theme-techbook</code> を選択した場合、より煩雑にはなりますが、以下の記法で脚注が利用できます。</p><div class="language-md vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">md</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">span</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;footnote&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;text&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">span</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><h4 id="縦中横" tabindex="-1">縦中横 <a class="header-anchor" href="#縦中横" aria-label="Permalink to &quot;縦中横&quot;">​</a></h4><p>テーマパッケージ <code>@vivliostyle/theme-bunko</code>を選択すると、以下の記法で縦中横が書けるようになります。テーマパッケージの選択については、後述<a href="#テーマパッケージの指定">テーマパッケージの指定</a>を参照してください。</p><div class="language-md vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">md</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ええと&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">span</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;tcy&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;4&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">span</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;×&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">span</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;tcy&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;5&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">span</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;＝&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">span</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;tcy&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;12&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">span</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;、&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">span</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;tcy&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;4&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">span</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;×&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">span</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;tcy&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;6&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">span</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;＝&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">span</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;tcy&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;13&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">span</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;、&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">span</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;tcy&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;4&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">span</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;×&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">span</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;tcy&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;7&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">span</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;——ああ、もう！　そんな調子じゃいつまでも&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">span</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;tcy&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;20&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">span</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;にならなくてよ！</span></span></code></pre></div><h2 id="本のカスタマイズ" tabindex="-1">本のカスタマイズ <a class="header-anchor" href="#本のカスタマイズ" aria-label="Permalink to &quot;本のカスタマイズ&quot;">​</a></h2><p><code>vivliostyle.config.js</code> (図2❷) を編集することで、次のようなカスタマイズが可能になります。</p><h3 id="書名の指定" tabindex="-1">書名の指定 <a class="header-anchor" href="#書名の指定" aria-label="Permalink to &quot;書名の指定&quot;">​</a></h3><p>以下のように <code>title</code> を指定すると書名となります (値をシングルクォートで括る。以下同じ)。</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">title</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;mybook&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span></code></pre></div><h3 id="著者名とメールアドレスの指定" tabindex="-1">著者名とメールアドレスの指定 <a class="header-anchor" href="#著者名とメールアドレスの指定" aria-label="Permalink to &quot;著者名とメールアドレスの指定&quot;">​</a></h3><p>インストール時に <code>author name</code> で入力した著者名がデフォルトになりますが、以下のように指定すると、それが優先されます。</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">author</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;yamada &lt;yamadataro@example.com&gt;&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span></code></pre></div><h3 id="使用する言語の指定" tabindex="-1">使用する言語の指定 <a class="header-anchor" href="#使用する言語の指定" aria-label="Permalink to &quot;使用する言語の指定&quot;">​</a></h3><p><code>language</code> のコメントアウト (スラッシュ部分) を削除すると、本で使用する言語を指定できます。デフォルトの英語は <code>en</code>、日本語は <code>ja</code>。その他、 <a href="https://www.loc.gov/standards/iso639-2/php/code_list.php" target="_blank" rel="noreferrer">ISO 639-1</a>に規定された2文字コードが指定できます。</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// language: &#39;ja&#39;,</span></span></code></pre></div><p>↓</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">language</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;ja&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span></code></pre></div><h3 id="判型の指定" tabindex="-1">判型の指定 <a class="header-anchor" href="#判型の指定" aria-label="Permalink to &quot;判型の指定&quot;">​</a></h3><p><code>size</code>のコメントアウトを削除すると判型を指定できます。<a href="https://drafts.csswg.org/css-page-3/#page-size-prop" target="_blank" rel="noreferrer">CSS Paged Media Module Level 3 (7.1. Page size)</a>に規定された下記の値が指定できます。なお、日本での一般的なB5は <code>JIS-B5</code> ですのでご注意ください (B4も同様)。</p><ul><li><code>A5</code></li><li><code>A4</code> (デフォルト)</li><li><code>A3</code></li><li><code>B5</code></li><li><code>B4</code></li><li><code>JIS-B5</code></li><li><code>JIS-B4</code></li><li><code>letter</code></li><li><code>legal</code></li><li><code>ledger</code></li></ul><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// size: &#39;A4&#39;,</span></span></code></pre></div><p>↓</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;JIS-B5&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span></code></pre></div><h3 id="テーマパッケージの指定" tabindex="-1">テーマパッケージの指定 <a class="header-anchor" href="#テーマパッケージの指定" aria-label="Permalink to &quot;テーマパッケージの指定&quot;">​</a></h3><p>インストール時に <code>theme</code> で指定したテーマパッケージがデフォルトで読み込まれますが、ここで任意のテーマパッケージを指定すると、そちらが優先されます。</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">theme</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;sample.css&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span></code></pre></div><p>テーマパッケージは本のスタイルを定義したCSSファイルを含みます。仕様は下記を参照してください。</p><ul><li><a href="https://vivliostyle.github.io/themes/#/ja/spec" target="_blank" rel="noreferrer">Theme の仕様</a></li></ul><p>なお、テーマパッケージは下記から取得できます。</p><ul><li><a href="https://www.npmjs.com/search?q=keywords:vivliostyle-theme" target="_blank" rel="noreferrer">npm: keywords / vivliostyle-theme</a></li></ul><h3 id="複数原稿の掲載" tabindex="-1">複数原稿の掲載 <a class="header-anchor" href="#複数原稿の掲載" aria-label="Permalink to &quot;複数原稿の掲載&quot;">​</a></h3><p><code>entry</code> の部分で下記のように指定することで、複数の markdown ファイルをまとめて1冊にできます。</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">entry</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;filename1.md&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;filename2.md&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;filename3.md&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span></code></pre></div><h3 id="目次の追加" tabindex="-1">目次の追加 <a class="header-anchor" href="#目次の追加" aria-label="Permalink to &quot;目次の追加&quot;">​</a></h3><p>以下の手順で目次を追加することができます。</p><ol><li>あらかじめ以下のような目次用の markdown ファイルを用意し、ファイル名を <code>index.md</code> としてプロジェクトフォルダに保存します。なお、HTMLのタグがある行とmarkdownの行の間には、必ず空行をいれるよう注意してください。そうしないとエラーになります。</li></ol><div class="language-md vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">md</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;--shiki-light-font-weight:bold;--shiki-dark-font-weight:bold;"># 本のタイトル</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">nav</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;toc&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> role</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;doc-toc&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">## 目次</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">- [記事タイトル1](filename1.html)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">- [記事タイトル2](filename2.html)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">- [記事タイトル3](filename3.html)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">nav</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><ol start="2"><li><code>vivliostyle.config.js</code> の <code>entry</code> の先頭行に、用意した <code>index.md</code> を指定します。</li></ol><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">entry</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;index.md&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;filename1.md&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;filename2.md&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;filename3.md&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span></code></pre></div><h3 id="奥付の追加" tabindex="-1">奥付の追加 <a class="header-anchor" href="#奥付の追加" aria-label="Permalink to &quot;奥付の追加&quot;">​</a></h3><p>以下の手順で奥付を追加することができます。</p><ol><li>あらかじめ以下のような markdownファイルを用意し、ファイル名を <code>colophon.md</code> としてプロジェクトフォルダに保存します。なお、HTMLのタグがある行とmarkdownの行の間には、必ず空行をいれるよう注意してください。そうしないとエラーになります。</li></ol><div class="language-md vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">md</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">section</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;colophon&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> role</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;doc-colophon&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">## 私が書いた本</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">20xx年x月x日　初版発行</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">- 発行　私が書いた本刊行会</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">- 編集　山田太郎</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">- 印刷　Sample Printing</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">© My Book Publishing, 20xx</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">section</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><ol start="2"><li><code>vivliostyle.config.js</code> の <code>entry</code> の末尾行に、用意した <code>colophon.md</code> を指定します。</li></ol><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">entry</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;index.md&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;filename1.md&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;filename2.md&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;filename3.md&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;colophon.md&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span></code></pre></div><h3 id="本の生成" tabindex="-1">本の生成 <a class="header-anchor" href="#本の生成" aria-label="Permalink to &quot;本の生成&quot;">​</a></h3><p>npm スクリプトにより、Vivliostyle CLI を使って本を生成します。以下のコマンドを実行すると、プロジェクトフォルダと同名のPDFファイルを出力します。</p><p>なお、つづけて同じコマンドを実行すると、前回生成したPDFファイルは警告なく上書きされます。保存したい場合はあらかじめ別の場所に待避するようご注意ください。</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>npm run build</span></span></code></pre></div><p>図3 Vivliostyle CLI を使った本の生成。</p><h3 id="_4色印刷用pdfファイル-の生成" tabindex="-1">4色印刷用PDFファイル の生成 <a class="header-anchor" href="#_4色印刷用pdfファイル-の生成" aria-label="Permalink to &quot;4色印刷用PDFファイル の生成&quot;">​</a></h3><p><code>package.json</code> (図2❸) を編集して、下記のように <code>&quot;vivliostyle build&quot;</code> の部分に <code>--press-ready</code> オプションを追加することで、PDF/X-1a規格に適合した4色印刷可能なPDFファイルを生成することができます。</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;build&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;vivliostyle build&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span></code></pre></div><p>↓</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;build&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;vivliostyle build --press-ready&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span></code></pre></div><p>なお、このオプションを指定した際、データにドロップシャドウなど透明画像が含まれている場合に限って全体がラスタライズ（ビットマップ化）され、その結果文字の縁などにわずかな滲みが出ます。大きな問題にはなりませんが、不安な場合はあらかじめ印刷所にご相談ください。この現象は、<a href="https://acrobat.adobe.com/jp/ja/acrobat/acrobat-pro.html" target="_blank" rel="noreferrer">Acrobat Pro DC</a> 等により、PDF/X-4 に変換することで回避できます。</p><p>以下は生成時のキャプチャです (図4)。</p><p>図4 CMYK (4色) 印刷用のPDF/x-1aを出力。</p><h2 id="制限事項" tabindex="-1">制限事項 <a class="header-anchor" href="#制限事項" aria-label="Permalink to &quot;制限事項&quot;">​</a></h2><p>現在のバージョンでは、以下のような制限があります。</p><ul><li>任意のカバー画像を含めてPDFファイルに出力することがができません。その場合は、<a href="https://acrobat.adobe.com/jp/ja/acrobat/acrobat-pro.html" target="_blank" rel="noreferrer">Acrobat Pro DC</a> や<a href="https://support.apple.com/ja-jp/guide/preview/prvw11793/mac" target="_blank" rel="noreferrer">プレビュー (mac)</a>などのPDFエディタをご利用ください。</li><li>グレイスケールの印刷用PDFファイルが出力できません。この問題は、<a href="https://acrobat.adobe.com/jp/ja/acrobat/acrobat-pro.html" target="_blank" rel="noreferrer">Acrobat Pro DC</a>で変換することで回避できます。</li><li>ディレクトリ名に非ASCII文字が含まれているとエラーになります。</li></ul><h2 id="おわりに" tabindex="-1">おわりに <a class="header-anchor" href="#おわりに" aria-label="Permalink to &quot;おわりに&quot;">​</a></h2><p>バージョン番号をみてもお分かりのように、Create Book はまだ開発中。そして Vivliostyle のプロダクトはすべてオープンソース。こうなればいい、こんな機能はないの、こんなエラーが出たなどの感想や報告を、ぜひお寄せください。もちろん開発に加わりたい！　も大歓迎。詳しくは下記のページをご覧ください。</p><ul><li><a href="https://vivliostyle.org/ja/community/" target="_blank" rel="noreferrer">コミュニティ/Vivliostyle</a></li></ul>`,111),n=[t];function h(p,r,o,k,d,c){return s(),a("div",null,n)}const u=i(l,[["render",h]]);export{E as __pageData,u as default};
