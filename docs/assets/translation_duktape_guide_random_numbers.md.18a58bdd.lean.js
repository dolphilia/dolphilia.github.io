import{_ as a,o as t,c as r,z as e,a as o}from"./chunks/framework.320df067.js";const k=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"translation/duktape/guide/random_numbers.md","filePath":"translation/duktape/guide/random_numbers.md","lastUpdated":1676126774000}'),n={name:"translation/duktape/guide/random_numbers.md"},s=e("h2",{id:"random_numbers",tabindex:"-1"},[o("乱数について "),e("a",{class:"header-anchor",href:"#random_numbers","aria-label":'Permalink to "乱数について {#random_numbers}"'},"​")],-1),d=e("p",null,"乱数は、内部的に Math.random() で使用されています。また、現在は Array.prototype.sort() の実装でランダムピボット選択のために使用されています。",-1),_=e("p",null,"デフォルトの内部乱数生成器は xoroshiro128+ で、SplitMix64 シードミキシングを使用します。Shamirの3-op PRNGは低メモリターゲットやコンパイラが64ビット型を持っていない場合に使用されます。このジェネレータは、例えばシード材料の品質が限られているため、本格的な統計アルゴリズムには適しておらず、暗号には全く適していません。",-1),i=e("p",null,"DUK_USE_GET_RANDOM_DOUBLE 設定オプションを使って、内部の乱数生成器を置き換えることができます。",-1),m=[s,d,_,i];function c(l,p,u,h,b,f){return t(),r("div",null,m)}const N=a(n,[["render",c]]);export{k as __pageData,N as default};
