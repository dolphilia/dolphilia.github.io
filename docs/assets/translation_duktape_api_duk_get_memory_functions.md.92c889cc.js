import{_ as s,c as a,o as e,a as n}from"./app.b419af8d.js";const y=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[{"level":2,"title":"duk_get_memory_functions()","slug":"duk-get-memory-functions","link":"#duk-get-memory-functions","children":[{"level":3,"title":"プロトタイプ","slug":"プロトタイプ","link":"#プロトタイプ","children":[]},{"level":3,"title":"スタック","slug":"スタック","link":"#スタック","children":[]},{"level":3,"title":"要約","slug":"要約","link":"#要約","children":[]},{"level":3,"title":"例","slug":"例","link":"#例","children":[]}]}],"relativePath":"translation/duktape/api/duk_get_memory_functions.md","lastUpdated":1676126774000}'),t={name:"translation/duktape/api/duk_get_memory_functions.md"},l=n(`<h2 id="duk-get-memory-functions" tabindex="-1">duk_get_memory_functions() <a class="header-anchor" href="#duk-get-memory-functions" aria-hidden="true">#</a></h2><p>1.0.0 memory heap</p><h3 id="プロトタイプ" tabindex="-1">プロトタイプ <a class="header-anchor" href="#プロトタイプ" aria-hidden="true">#</a></h3><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">duk_get_memory_functions</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">duk_context </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">ctx</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> duk_memory_functions </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">out_funcs</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span></code></pre></div><h3 id="スタック" tabindex="-1">スタック <a class="header-anchor" href="#スタック" aria-hidden="true">#</a></h3><p>(バリュースタックに影響なし)</p><h3 id="要約" tabindex="-1">要約 <a class="header-anchor" href="#要約" aria-hidden="true">#</a></h3><p>コンテキストが使用するメモリ管理関数を取得します。</p><p>通常、この関数を呼び出す理由はない。 duk_alloc(), duk_realloc(), duk_free() のようなラップされたメモリ管理関数を通して、メモリ管理プリミティブを使用することができるからです。</p><h3 id="例" tabindex="-1">例 <a class="header-anchor" href="#例" aria-hidden="true">#</a></h3><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">duk_memory_functions funcs</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">duk_get_memory_functions</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">ctx</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;font-style:italic;">funcs</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span></code></pre></div>`,11),o=[l];function c(p,r,i,d,u,_){return e(),a("div",null,o)}const m=s(t,[["render",c]]);export{y as __pageData,m as default};
