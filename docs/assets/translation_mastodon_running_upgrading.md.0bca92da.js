import{_ as s,c as a,o as n,a as o}from"./app.e18c80f2.js";const m=JSON.parse('{"title":"新しいリリースへのアップグレード","description":"","frontmatter":{},"headers":[],"relativePath":"translation/mastodon/running/upgrading.md","lastUpdated":null}'),t={name:"translation/mastodon/running/upgrading.md"},e=o(`<h1 id="新しいリリースへのアップグレード" tabindex="-1">新しいリリースへのアップグレード <a class="header-anchor" href="#新しいリリースへのアップグレード" aria-hidden="true">#</a></h1><div class="info custom-block"><p class="custom-block-title">INFO</p><p>Mastodon の新しいバージョンが出ると、<a href="https://github.com/mastodon/mastodon/releases" target="_blank" rel="noreferrer">GitHub リリースページ</a> に表示されます。未リリースのコードを <code>master</code> ブランチから実行することは可能ですが、推奨されませんのでご注意ください。</p></div><p>Mastodon のリリースは git タグに対応しています。アップグレードを試みる前に、<a href="https://github.com/mastodon/mastodon/releases" target="_blank" rel="noreferrer">GitHub リリースページ</a> で希望するリリースを調べてください。このページには、<strong>変更点</strong> と、<strong>アップグレードの具体的な手順</strong> が記述されています。</p><p>まず、ユーザーを <code>mastodon</code> に変更します。</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">su</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">mastodon</span></span>
<span class="line"></span></code></pre></div><p>そして、Mastodonのルートディレクトリに移動してください。</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#82AAFF;">cd</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/home/mastodon/live</span></span>
<span class="line"></span></code></pre></div><p>バージョンは <code>v3.1.2</code> と仮定して、リリースのコードをダウンロードします。</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">fetch</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--tags</span></span>
<span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">checkout</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">v3.</span><span style="color:#F78C6C;">1.2</span></span>
<span class="line"></span></code></pre></div><p>ここで、GitHub上のそのバージョンのリリースノートに記載されているアップグレード手順を実行します。リリースによって必要な手順が異なるため、このページには手順を記載していません。</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>古いバージョンからアップグレードする場合、中間リリースをスキップすることができます。個別にチェックアウトする必要はありません。しかし、各リリースの手順を追跡する必要はあります。ほとんどの指示は重複しているので、少なくとも一度はすべてを実行することを確認する必要があります。</p></div><p>リリースノートにある手順を実行した後、rootに戻ります。</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#82AAFF;">exit</span></span>
<span class="line"></span></code></pre></div><p><strong>バックグラウンドワーカー</strong>を再起動します。</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">systemctl</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">restart</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">mastodon-sidekiq</span></span>
<span class="line"></span></code></pre></div><p>そして、<strong>Webプロセス</strong>を再読み込みします。</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">systemctl</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">reload</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">mastodon-web</span></span>
<span class="line"></span></code></pre></div><div class="info custom-block"><p class="custom-block-title">INFO</p><p><code>reload</code> 操作はダウンタイムなしの再起動で、「段階的な再起動」とも呼ばれます。そのため、Mastodon のアップグレードでは、通常、ユーザにダウンタイムについて事前に通知する必要はありません。まれに <code>restart</code> オペレーションを代わりに使うこともできますが、その場合、ユーザーに対して（短期間の）サービスの中断を感じることになります。</p></div><p>まれに、<strong>streaming API</strong>サーバーも更新され、再起動が必要になることがあります。</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">systemctl</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">restart</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">mastodon-streaming</span></span>
<span class="line"></span></code></pre></div><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>Streaming APIサーバーの更新は非常に稀であり、ほとんどのリリースでは再起動は必要ありません。Streaming APIを再起動すると、切断されたクライアントが再接続を試みたり、REST APIをポーリングしたりするため、サーバーへの負荷が増加します。</p></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p><strong>以上です！</strong> あなたは今、Mastodonの新しいバージョンを実行しています。</p></div>`,22),l=[e];function p(c,r,i,d,C,g){return n(),a("div",null,l)}const y=s(t,[["render",p]]);export{m as __pageData,y as default};
