import{_ as s,c as n,o as a,a as l}from"./app.1650bd79.js";const C=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[{"level":2,"title":"シンプルなSDL2アプリをゼロから作る","slug":"シンプルなsdl2アプリをゼロから作る","link":"#シンプルなsdl2アプリをゼロから作る","children":[]},{"level":2,"title":"ビルドディレクトリの設定","slug":"ビルドディレクトリの設定","link":"#ビルドディレクトリの設定","children":[]},{"level":2,"title":"Creating the sample program","slug":"creating-the-sample-program","link":"#creating-the-sample-program","children":[]},{"level":2,"title":"SDLを使用するためにプログラムをアップグレードする","slug":"sdlを使用するためにプログラムをアップグレードする","link":"#sdlを使用するためにプログラムをアップグレードする","children":[]},{"level":2,"title":"プログラム終了","slug":"プログラム終了","link":"#プログラム終了","children":[]}],"relativePath":"translation/meson/guitutorial.md","lastUpdated":1676126774000}'),p={name:"translation/meson/guitutorial.md"},o=l(`<h2 id="シンプルなsdl2アプリをゼロから作る" tabindex="-1">シンプルなSDL2アプリをゼロから作る <a class="header-anchor" href="#シンプルなsdl2アプリをゼロから作る" aria-hidden="true">#</a></h2><p>このページでは、Meson だけを使用して SDL2 GUI アプリケーションを定義し構築する方法を一から説明します。このドキュメントは、最も複雑なプラットフォームである Windows 用に書かれていますが、Linux や macOS でも同じ基本的な考え方が通用するはずです。</p><p>SDL 2 も C で書かれているため、サンプルアプリケーションはプレーン C で書かれています。もし C++ が好きなら、変換は非常に簡単なので、読者の練習問題として残しておきます。</p><p>このドキュメントは、Visual Studio と Meson の両方がすでにインストールされていることを前提にしています。</p><h2 id="ビルドディレクトリの設定" tabindex="-1">ビルドディレクトリの設定 <a class="header-anchor" href="#ビルドディレクトリの設定" aria-hidden="true">#</a></h2><p>まず、すべてのものを格納する空のディレクトリを作成する必要があります。Visual Studioのツールチェーンは少し変わっていて、特定のシェルからビルドを実行する必要があります。これは、アプリケーションメニューを開き、<code>Visual Studio &lt;year&gt; -&gt; x86_64 native tools</code> コマンドプロンプトを選択することで見つけることができます。</p><p>変なディレクトリに移動してしまうので、ホームディレクトリに移動する必要があります。</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">cd \\users\\yourusername</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>通常、<code>cd \\users</code> と入力し、tabulator キーを押してユーザー名をシェルに自動補完させます。これが完了したら、ディレクトリを作成できます。</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">mkdir sdldemo</span></span>
<span class="line"><span style="color:#A6ACCD;">cd sdldemo</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h2 id="creating-the-sample-program" tabindex="-1">Creating the sample program <a class="header-anchor" href="#creating-the-sample-program" aria-hidden="true">#</a></h2><p>ここで、ソースファイルと Meson ビルド定義ファイルを作成する必要があります。ここでは SDL をまったく使用せず、テキストを表示するだけの簡単なプログラムから始めます。一度動作させれば、グラフィックを行うように拡張できます。ソースは <code>sdlprog.c</code> というファイルに入っており、次のような内容になっています。</p><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">#include</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">stdio.h</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">main</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">argc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">**</span><span style="color:#A6ACCD;font-style:italic;">argv</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#82AAFF;">printf</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">App is running.</span><span style="color:#A6ACCD;">\\n</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>ビルドの定義はmeson.buildというファイルに入っていて、以下のような感じになっています。</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">project(&#39;sdldemo&#39;, &#39;c&#39;)</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">executable(&#39;sdlprog&#39;, &#39;sdlprog.c&#39;)</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>これで、次のコマンドでビルドを開始することができます。</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">meson setup builddir</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>ここで<code>builddir</code>はビルドディレクトリで、ビルド中に生成されるものは全てこのディレクトリに置かれます。実行すると、次のようになります。</p><p>サンプルアプリケーションの設定</p><p>プログラムはこれでコンパイルされます。</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">meson compile -C builddir</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>C 引数は、設定されたビルドディレクトリがどこにあるかを Meson に知らせます。</p><p>プログラムはビルドディレクトリに置かれ、次のように実行することができます。</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">builddir\\sdlprog</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>このように出力されるはずです。</p><p>サンプルアプリケーションの実行</p><h2 id="sdlを使用するためにプログラムをアップグレードする" tabindex="-1">SDLを使用するためにプログラムをアップグレードする <a class="header-anchor" href="#sdlを使用するためにプログラムをアップグレードする" aria-hidden="true">#</a></h2><p>SDLを起動するために必要なコードは少し複雑なので、その仕組みについては割愛します。単に<code>sdlprog.c</code>の内容を次のように置き換えるだけです。</p><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">#include</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">SDL.h</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">main</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">argc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;font-style:italic;">argv</span><span style="color:#C792EA;">[]</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    SDL_Window </span><span style="color:#89DDFF;">*</span><span style="color:#F07178;">window</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    SDL_Renderer </span><span style="color:#89DDFF;">*</span><span style="color:#F07178;">renderer</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    SDL_Surface </span><span style="color:#89DDFF;">*</span><span style="color:#F07178;">surface</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    SDL_Event event</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">SDL_Init</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">SDL_INIT_VIDEO</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#82AAFF;">SDL_LogError</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">SDL_LOG_CATEGORY_APPLICATION</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Couldn&#39;t initialize SDL: %s</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">SDL_GetError</span><span style="color:#89DDFF;">());</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">SDL_CreateWindowAndRenderer</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">320</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">240</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> SDL_WINDOW_RESIZABLE</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&amp;</span><span style="color:#F07178;">window</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&amp;</span><span style="color:#F07178;">renderer</span><span style="color:#89DDFF;">))</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#82AAFF;">SDL_LogError</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">SDL_LOG_CATEGORY_APPLICATION</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Couldn&#39;t create window and renderer: %s</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">SDL_GetError</span><span style="color:#89DDFF;">());</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">while</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#82AAFF;">SDL_PollEvent</span><span style="color:#89DDFF;">(&amp;</span><span style="color:#F07178;">event</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">event</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">type</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">==</span><span style="color:#F07178;"> SDL_QUIT</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#89DDFF;font-style:italic;">break</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#82AAFF;">SDL_SetRenderDrawColor</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">renderer</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0x00</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0x00</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0x00</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0x00</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#82AAFF;">SDL_RenderClear</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">renderer</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#82AAFF;">SDL_RenderPresent</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">renderer</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">SDL_DestroyRenderer</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">renderer</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">SDL_DestroyWindow</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">window</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">SDL_Quit</span><span style="color:#89DDFF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>もう一度、meson compile -C builddirを実行して、これをコンパイルしてみましょう。</p><p>SDLアプリのビルドに失敗しました</p><p>失敗しました。この理由は、実はSDLが現在利用できないからです。何らかの方法で入手する必要があります。専門用語では SDL2 は外部依存であり、それを取得することを依存関係の解決と呼びます。</p><p>Meson には、WrapDB と呼ばれる依存関係をダウンロードして (必要なら) 構築するための Web サービスがあります。これは SDL2 を提供するので、それを直接使用することができます。まず最初に subprojects ディレクトリを作成する必要があります。Meson では一貫性を保つために、このようなサブプロジェクトはすべてこのディレクトリに保存する必要があるからです。</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">mkdir subprojects</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>そして、依存関係をインストールすることができます。</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">meson wrap install sdl2</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>こんな感じです。</p><p>WrapDB から SDL2 を取得する。</p><p>最後のステップとして、新しく取得した依存関係を使用するためにビルド定義ファイルを更新する必要があります。</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">project(&#39;sdldemo&#39;, &#39;c&#39;,</span></span>
<span class="line"><span style="color:#A6ACCD;">        default_options: &#39;default_library=static&#39;)</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">sdl2_dep = dependency(&#39;sdl2&#39;)</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">executable(&#39;sdlprog&#39;, &#39;sdlprog.c&#39;,</span></span>
<span class="line"><span style="color:#A6ACCD;">           win_subsystem: &#39;windows&#39;,</span></span>
<span class="line"><span style="color:#A6ACCD;">           dependencies: sdl2_dep)</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>依存関係に加え、他にもいくつかの変更があります。まず、ヘルパーライブラリを静的にビルドするように指定しています。このような単純なプロジェクトでは、これによって物事がよりシンプルになります。また、構築するプログラムがコンソールアプリケーションではなく、Windows GUI アプリケーションであることを Meson に伝える必要があります。</p><p>これだけで、再び meson compile を実行できるようになります。まず、システムは SDL2 をダウンロードし、設定します。</p><p>サンプルアプリケーションの実行</p><p>少しして、コンパイルが正常に終了しました。</p><p>サンプルアプリケーションの実行</p><h2 id="プログラム終了" tabindex="-1">プログラム終了 <a class="header-anchor" href="#プログラム終了" aria-hidden="true">#</a></h2><p>これで、アプリケーションを</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">builddir\\sdlprog</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>最終的には、黒いSDLウィンドウが表示されます。</p><p>サンプルアプリケーションを実行する</p>`,50),e=[o];function t(c,r,i,F,y,D){return a(),n("div",null,e)}const A=s(p,[["render",t]]);export{C as __pageData,A as default};
