import{_ as s,o as a,c as n,Q as o}from"./chunks/framework.92ce8a2a.js";const u=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"translation/duktape/api/duk_time_to_components.md","filePath":"translation/duktape/api/duk_time_to_components.md","lastUpdated":1676126774000}'),p={name:"translation/duktape/api/duk_time_to_components.md"},l=o(`<h2 id="duk-time-to-components" tabindex="-1">duk_time_to_components() <a class="header-anchor" href="#duk-time-to-components" aria-label="Permalink to &quot;duk_time_to_components()&quot;">​</a></h2><p>2.0.0 time</p><h3 id="プロトタイプ" tabindex="-1">プロトタイプ <a class="header-anchor" href="#プロトタイプ" aria-label="Permalink to &quot;プロトタイプ&quot;">​</a></h3><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">duk_time_to_components</span><span style="color:#E1E4E8;">(duk_context </span><span style="color:#F97583;">*</span><span style="color:#FFAB70;">ctx</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">duk_double_t</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">time</span><span style="color:#E1E4E8;">, duk_time_components </span><span style="color:#F97583;">*</span><span style="color:#FFAB70;">comp</span><span style="color:#E1E4E8;">);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">duk_time_to_components</span><span style="color:#24292E;">(duk_context </span><span style="color:#D73A49;">*</span><span style="color:#E36209;">ctx</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">duk_double_t</span><span style="color:#24292E;"> </span><span style="color:#E36209;">time</span><span style="color:#24292E;">, duk_time_components </span><span style="color:#D73A49;">*</span><span style="color:#E36209;">comp</span><span style="color:#24292E;">);</span></span></code></pre></div><h3 id="スタック" tabindex="-1">スタック <a class="header-anchor" href="#スタック" aria-label="Permalink to &quot;スタック&quot;">​</a></h3><p>(バリュースタックに影響なし。)</p><h3 id="要約" tabindex="-1">要約 <a class="header-anchor" href="#要約" aria-label="Permalink to &quot;要約&quot;">​</a></h3><p>UTCで解釈されるコンポーネント（年、月、日など）に時間値を変換します。時間値が無効な場合、例えば ECMAScript の有効な時間範囲を超えている場合、エラーがスローされます。</p><p>Date.prototype.getUTCMinutes() のような ECMAScript の Date UTC アクセッサといくつかの相違点があります。</p><p>時間値は、ミリ秒コンポーネントが分数を持つことができるように、分数（サブミリ秒の解像度）を持つことが許可されています。</p><h3 id="例" tabindex="-1">例 <a class="header-anchor" href="#例" aria-label="Permalink to &quot;例&quot;">​</a></h3><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#79B8FF;">duk_double_t</span><span style="color:#E1E4E8;"> time </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1451703845006.0</span><span style="color:#E1E4E8;">;</span><span style="color:#6A737D;">  /* 2016-01-02 03:04:05.006Z */</span></span>
<span class="line"><span style="color:#E1E4E8;">duk_time_components comp;</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">char</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#FFAB70;">weekdays</span><span style="color:#E1E4E8;">[</span><span style="color:#79B8FF;">7</span><span style="color:#E1E4E8;">] </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">&quot;Sunday&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;Monday&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;Tuesday&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;Wednesday&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">&quot;Thursday&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;Friday&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;Saturday&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">/* Note that month is zero-based to match the ECMAScript API, so for</span></span>
<span class="line"><span style="color:#6A737D;"> * human readable printing add 1 to the month.  Time components are</span></span>
<span class="line"><span style="color:#6A737D;"> * IEEE doubles to match ECMAScript Date behavior.</span></span>
<span class="line"><span style="color:#6A737D;"> */</span></span>
<span class="line"><span style="color:#B392F0;">duk_time_to_components</span><span style="color:#E1E4E8;">(ctx, time, </span><span style="color:#F97583;">&amp;</span><span style="color:#FFAB70;">comp</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#B392F0;">printf</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;Datetime: </span><span style="color:#79B8FF;">%04d</span><span style="color:#9ECBFF;">-</span><span style="color:#79B8FF;">%02d</span><span style="color:#9ECBFF;">-</span><span style="color:#79B8FF;">%02d</span><span style="color:#9ECBFF;"> </span><span style="color:#79B8FF;">%02d</span><span style="color:#9ECBFF;">:</span><span style="color:#79B8FF;">%02d</span><span style="color:#9ECBFF;">:</span><span style="color:#79B8FF;">%02d</span><span style="color:#9ECBFF;">.</span><span style="color:#79B8FF;">%03d</span><span style="color:#9ECBFF;">Z</span><span style="color:#79B8FF;">\\n</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">       (</span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;">) comp.year, (</span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;">) comp.month </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">, (</span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;">) comp.day,</span></span>
<span class="line"><span style="color:#E1E4E8;">       (</span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;">) comp.hours, (</span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;">) comp.minutes, (</span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;">) comp.seconds,</span></span>
<span class="line"><span style="color:#E1E4E8;">       (</span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;">) comp.milliseconds);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">printf</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;Weekday is: </span><span style="color:#79B8FF;">%s\\n</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">weekdays</span><span style="color:#E1E4E8;">[(</span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;">) comp.weekday]);</span><span style="color:#6A737D;">  /* 0=Sunday */</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#005CC5;">duk_double_t</span><span style="color:#24292E;"> time </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1451703845006.0</span><span style="color:#24292E;">;</span><span style="color:#6A737D;">  /* 2016-01-02 03:04:05.006Z */</span></span>
<span class="line"><span style="color:#24292E;">duk_time_components comp;</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">char</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#E36209;">weekdays</span><span style="color:#24292E;">[</span><span style="color:#005CC5;">7</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">&quot;Sunday&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;Monday&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;Tuesday&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;Wednesday&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">&quot;Thursday&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;Friday&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;Saturday&quot;</span></span>
<span class="line"><span style="color:#24292E;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">/* Note that month is zero-based to match the ECMAScript API, so for</span></span>
<span class="line"><span style="color:#6A737D;"> * human readable printing add 1 to the month.  Time components are</span></span>
<span class="line"><span style="color:#6A737D;"> * IEEE doubles to match ECMAScript Date behavior.</span></span>
<span class="line"><span style="color:#6A737D;"> */</span></span>
<span class="line"><span style="color:#6F42C1;">duk_time_to_components</span><span style="color:#24292E;">(ctx, time, </span><span style="color:#D73A49;">&amp;</span><span style="color:#E36209;">comp</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#6F42C1;">printf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Datetime: </span><span style="color:#005CC5;">%04d</span><span style="color:#032F62;">-</span><span style="color:#005CC5;">%02d</span><span style="color:#032F62;">-</span><span style="color:#005CC5;">%02d</span><span style="color:#032F62;"> </span><span style="color:#005CC5;">%02d</span><span style="color:#032F62;">:</span><span style="color:#005CC5;">%02d</span><span style="color:#032F62;">:</span><span style="color:#005CC5;">%02d</span><span style="color:#032F62;">.</span><span style="color:#005CC5;">%03d</span><span style="color:#032F62;">Z</span><span style="color:#005CC5;">\\n</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">       (</span><span style="color:#D73A49;">int</span><span style="color:#24292E;">) comp.year, (</span><span style="color:#D73A49;">int</span><span style="color:#24292E;">) comp.month </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, (</span><span style="color:#D73A49;">int</span><span style="color:#24292E;">) comp.day,</span></span>
<span class="line"><span style="color:#24292E;">       (</span><span style="color:#D73A49;">int</span><span style="color:#24292E;">) comp.hours, (</span><span style="color:#D73A49;">int</span><span style="color:#24292E;">) comp.minutes, (</span><span style="color:#D73A49;">int</span><span style="color:#24292E;">) comp.seconds,</span></span>
<span class="line"><span style="color:#24292E;">       (</span><span style="color:#D73A49;">int</span><span style="color:#24292E;">) comp.milliseconds);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">printf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Weekday is: </span><span style="color:#005CC5;">%s\\n</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">weekdays</span><span style="color:#24292E;">[(</span><span style="color:#D73A49;">int</span><span style="color:#24292E;">) comp.weekday]);</span><span style="color:#6A737D;">  /* 0=Sunday */</span></span></code></pre></div><h3 id="参照" tabindex="-1">参照 <a class="header-anchor" href="#参照" aria-label="Permalink to &quot;参照&quot;">​</a></h3><p>duk_components_to_time</p>`,14),t=[l];function e(c,r,y,E,i,d){return a(),n("div",null,t)}const m=s(p,[["render",e]]);export{u as __pageData,m as default};
