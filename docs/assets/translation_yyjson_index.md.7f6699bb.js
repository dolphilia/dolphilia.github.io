import{_ as s,o as n,c as a,R as o}from"./chunks/framework.320df067.js";const C=JSON.parse('{"title":"はじめに","description":"","frontmatter":{},"headers":[],"relativePath":"translation/yyjson/index.md","filePath":"translation/yyjson/index.md","lastUpdated":1684305876000}'),l={name:"translation/yyjson/index.md"},p=o(`<h1 id="はじめに" tabindex="-1">はじめに <a class="header-anchor" href="#はじめに" aria-label="Permalink to &quot;はじめに&quot;">​</a></h1><p>ANSI Cで書かれた高性能なJSONライブラリです。</p><h1 id="特徴" tabindex="-1">特徴 <a class="header-anchor" href="#特徴" aria-label="Permalink to &quot;特徴&quot;">​</a></h1><ul><li><strong>高速</strong>：最新のCPUでギガバイト/秒のJSONデータの読み書きが可能です。</li><li><strong>ポータブル</strong>：ANSI C (C89)に準拠しています。</li><li><strong>標準</strong>：<a href="https://tools.ietf.org/html/rfc8259" target="_blank" rel="noreferrer">RFC 8259</a>標準に厳密に準拠します。</li><li><strong>安全性</strong>：完全なJSON形式、数値形式、UTF-8バリデーションを実現。</li><li><strong>正確さ</strong>: <code>int64</code>、<code>uint64</code>、<code>double</code>の数値を正確に読み書きできる。</li><li><strong>柔軟性</strong>：無制限のJSONレベル、<code>u0000</code>と非ヌル末端文字列をサポートします。</li><li><strong>拡張可能</strong>：コメント、末尾カンマ、nan/inf、カスタムメモリアロケータを許可するオプションがあります。</li><li><strong>開発者に優しい</strong>: <code>h</code> と <code>c</code> ファイルが1つだけなので、簡単に統合できます。</li></ul><h1 id="制限事項" tabindex="-1">制限事項 <a class="header-anchor" href="#制限事項" aria-label="Permalink to &quot;制限事項&quot;">​</a></h1><ul><li>配列やオブジェクトはリンクリストのような<a href="https://ibireme.github.io/yyjson/doc/doxygen/html/md_doc__data_structure.html" target="_blank" rel="noreferrer">データ構造</a>として格納されており、インデックスやキーで要素にアクセスすることはイテレータよりも遅いです。</li><li>オブジェクトはキーの複製が可能で、キーの順序は保持される。</li><li>JSONのパース結果は不変であり、変更には「不変コピー」が必要である。</li></ul><h1 id="パフォーマンス" tabindex="-1">パフォーマンス <a class="header-anchor" href="#パフォーマンス" aria-label="Permalink to &quot;パフォーマンス&quot;">​</a></h1><p>ベンチマークプロジェクトとデータセット<a href="https://github.com/ibireme/yyjson_benchmark" target="_blank" rel="noreferrer">yyjson_benchmark</a></p><p>simdjsonの新しい<code>On Demand</code> APIは、ほとんどのJSONフィールドがコンパイル時に既知であれば、より高速です。 このベンチマークプロジェクトはDOM APIのみをチェックしており、新しいベンチマークは後で追加される予定です。</p><h4 id="aws-ec2-amd-epyc-7r32-gcc-9-3" tabindex="-1">AWS EC2 (AMD EPYC 7R32, gcc 9.3) <a class="header-anchor" href="#aws-ec2-amd-epyc-7r32-gcc-9-3" aria-label="Permalink to &quot;AWS EC2 (AMD EPYC 7R32, gcc 9.3)&quot;">​</a></h4><table><thead><tr><th>twitter.json</th><th>parse (GB/s)</th><th>stringify (GB/s)</th></tr></thead><tbody><tr><td>yyjson(insitu)</td><td>1.80</td><td>1.51</td></tr><tr><td>yyjson</td><td>1.72</td><td>1.42</td></tr><tr><td>simdjson</td><td>1.52</td><td>0.61</td></tr><tr><td>sajson</td><td>1.16</td><td></td></tr><tr><td>rapidjson(insitu)</td><td>0.77</td><td></td></tr><tr><td>rapidjson(utf8)</td><td>0.26</td><td>0.39</td></tr><tr><td>cjson</td><td>0.32</td><td>0.17</td></tr><tr><td>jansson</td><td>0.05</td><td>0.11</td></tr></tbody></table><h4 id="iphone-apple-a14-clang-12" tabindex="-1">iPhone (Apple A14, clang 12) <a class="header-anchor" href="#iphone-apple-a14-clang-12" aria-label="Permalink to &quot;iPhone (Apple A14, clang 12)&quot;">​</a></h4><table><thead><tr><th>twitter.json</th><th>parse (GB/s)</th><th>stringify (GB/s)</th></tr></thead><tbody><tr><td>yyjson(insitu)</td><td>3.51</td><td>2.41</td></tr><tr><td>yyjson</td><td>2.39</td><td>2.01</td></tr><tr><td>simdjson</td><td>2.19</td><td>0.80</td></tr><tr><td>sajson</td><td>1.74</td><td></td></tr><tr><td>rapidjson(insitu)</td><td>0.75</td><td></td></tr><tr><td>rapidjson(utf8)</td><td>0.30</td><td>0.58</td></tr><tr><td>cjson</td><td>0.48</td><td>0.33</td></tr><tr><td>jansson</td><td>0.09</td><td>0.24</td></tr></tbody></table><p>インタラクティブチャートによるベンチマークレポートの充実（2020-12-12更新）</p><table><thead><tr><th>Platform</th><th>CPU</th><th>Compiler</th><th>OS</th><th>Report</th></tr></thead><tbody><tr><td>Intel NUC 8i5</td><td>Core i5-8259U</td><td>msvc 2019</td><td>Windows 10 2004</td><td><a href="https://ibireme.github.io/yyjson_benchmark/reports/Intel_NUC_8i5_msvc_2019.html" target="_blank" rel="noreferrer">Charts</a></td></tr><tr><td>Intel NUC 8i5</td><td>Core i5-8259U</td><td>clang 10.0</td><td>Ubuntu 20.04</td><td><a href="https://ibireme.github.io/yyjson_benchmark/reports/Intel_NUC_8i5_clang_10.html" target="_blank" rel="noreferrer">Charts</a></td></tr><tr><td>Intel NUC 8i5</td><td>Core i5-8259U</td><td>gcc 9.3</td><td>Ubuntu 20.04</td><td><a href="https://ibireme.github.io/yyjson_benchmark/reports/Intel_NUC_8i5_gcc_9.html" target="_blank" rel="noreferrer">Charts</a></td></tr><tr><td>AWS EC2 c5a.large</td><td>AMD EPYC 7R32</td><td>gcc 9.3</td><td>Ubuntu 20.04</td><td><a href="https://ibireme.github.io/yyjson_benchmark/reports/EC2_c5a.large_gcc_9.html" target="_blank" rel="noreferrer">Charts</a></td></tr><tr><td>AWS EC2 t4g.medium</td><td>Graviton2 (ARM64)</td><td>gcc 9.3</td><td>Ubuntu 20.04</td><td><a href="https://ibireme.github.io/yyjson_benchmark/reports/EC2_t4g.medium_gcc_9.html" target="_blank" rel="noreferrer">Charts</a></td></tr><tr><td>Apple iPhone 12 Pro</td><td>A14 (ARM64)</td><td>clang 12.0</td><td>iOS 14</td><td><a href="https://ibireme.github.io/yyjson_benchmark/reports/Apple_A14_clang_12.html" target="_blank" rel="noreferrer">Charts</a></td></tr></tbody></table><h3 id="より良いパフォーマンスのために、yyjsonは以下のものを好みます" tabindex="-1">より良いパフォーマンスのために、yyjsonは以下のものを好みます： <a class="header-anchor" href="#より良いパフォーマンスのために、yyjsonは以下のものを好みます" aria-label="Permalink to &quot;より良いパフォーマンスのために、yyjsonは以下のものを好みます：&quot;">​</a></h3><ul><li>最新のプロセッサで <ul><li>高い命令レベル並列性</li><li>優れた分岐予測機能</li><li>不整列メモリアクセスに対する低いペナルティ</li></ul></li><li>優れたオプティマイザーを備えた最新のコンパイラー。</li></ul><h1 id="サンプルコード" tabindex="-1">サンプルコード <a class="header-anchor" href="#サンプルコード" aria-label="Permalink to &quot;サンプルコード&quot;">​</a></h1><h3 id="json文字列を読み込む" tabindex="-1">JSON文字列を読み込む <a class="header-anchor" href="#json文字列を読み込む" aria-label="Permalink to &quot;JSON文字列を読み込む&quot;">​</a></h3><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">json </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">{</span><span style="color:#A6ACCD;">\\&quot;</span><span style="color:#C3E88D;">name</span><span style="color:#A6ACCD;">\\&quot;</span><span style="color:#C3E88D;">:</span><span style="color:#A6ACCD;">\\&quot;</span><span style="color:#C3E88D;">Mash</span><span style="color:#A6ACCD;">\\&quot;</span><span style="color:#C3E88D;">,</span><span style="color:#A6ACCD;">\\&quot;</span><span style="color:#C3E88D;">star</span><span style="color:#A6ACCD;">\\&quot;</span><span style="color:#C3E88D;">:4,</span><span style="color:#A6ACCD;">\\&quot;</span><span style="color:#C3E88D;">hits</span><span style="color:#A6ACCD;">\\&quot;</span><span style="color:#C3E88D;">:[2,2,1,3]}</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// JSONを読み込んでrootを取得する</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_doc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">doc </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_read</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">json</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">strlen</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">json</span><span style="color:#89DDFF;">),</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">root </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_doc_get_root</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">doc</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// root[&quot;name&quot;]を取得</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">name </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_obj_get</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">root</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">name</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#82AAFF;">printf</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">name: %s</span><span style="color:#A6ACCD;">\\n</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_get_str</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">name</span><span style="color:#89DDFF;">));</span></span>
<span class="line"><span style="color:#82AAFF;">printf</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">name length:%d</span><span style="color:#A6ACCD;">\\n</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">int</span><span style="color:#89DDFF;">)</span><span style="color:#82AAFF;">yyjson_get_len</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">name</span><span style="color:#89DDFF;">));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// root[&quot;star&quot;]を取得</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">star </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_obj_get</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">root</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">star</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#82AAFF;">printf</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">star: %d</span><span style="color:#A6ACCD;">\\n</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">int</span><span style="color:#89DDFF;">)</span><span style="color:#82AAFF;">yyjson_get_int</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">star</span><span style="color:#89DDFF;">));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// root[&quot;hits&quot;]を取得し、配列を反復処理する。</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">hits </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_obj_get</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">root</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">hits</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#C792EA;">size_t</span><span style="color:#A6ACCD;"> idx</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> max</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">hit</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#82AAFF;">yyjson_arr_foreach</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">hits</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> idx</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> max</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> hit</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">printf</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">hit%d: %d</span><span style="color:#A6ACCD;">\\n</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">int</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;">idx</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">int</span><span style="color:#89DDFF;">)</span><span style="color:#82AAFF;">yyjson_get_int</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">hit</span><span style="color:#89DDFF;">));</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// docを解放する</span></span>
<span class="line"><span style="color:#82AAFF;">yyjson_doc_free</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">doc</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// すべての関数はNULL入力を受け入れ、エラー時にはNULLを返します。</span></span></code></pre></div><h3 id="json文字列を書き込む" tabindex="-1">JSON文字列を書き込む <a class="header-anchor" href="#json文字列を書き込む" aria-label="Permalink to &quot;JSON文字列を書き込む&quot;">​</a></h3><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// ミュータブルなdocを作成する</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_mut_doc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">doc </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_mut_doc_new</span><span style="color:#89DDFF;">(NULL);</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">root </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_mut_obj</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">doc</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#82AAFF;">yyjson_mut_doc_set_root</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">doc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> root</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// root[&quot;name&quot;]とroot[&quot;star&quot;]を設定する。</span></span>
<span class="line"><span style="color:#82AAFF;">yyjson_mut_obj_add_str</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">doc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> root</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">name</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Mash</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#82AAFF;">yyjson_mut_obj_add_int</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">doc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> root</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">star</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">4</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// root[&quot;hits&quot;]を配列で設定する。</span></span>
<span class="line"><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> hits_arr</span><span style="color:#C792EA;">[]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">hits </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_mut_arr_with_sint32</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">doc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> hits_arr</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">4</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#82AAFF;">yyjson_mut_obj_add_val</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">doc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> root</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">hits</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> hits</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 文字列へ、ミニ化</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">json </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_mut_write</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">doc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">NULL);</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">json</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">printf</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">json: %s</span><span style="color:#A6ACCD;">\\n</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> json</span><span style="color:#89DDFF;">);</span><span style="color:#676E95;font-style:italic;"> // {&quot;name&quot;:&quot;Mash&quot;,&quot;star&quot;:4,&quot;hits&quot;:[2,2,1,3]}</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">free</span><span style="color:#89DDFF;">((</span><span style="color:#C792EA;">void</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">*)</span><span style="color:#F07178;">json</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// ドックを解放する</span></span>
<span class="line"><span style="color:#82AAFF;">yyjson_mut_doc_free</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">doc</span><span style="color:#89DDFF;">);</span></span></code></pre></div><h3 id="jsonファイルをオプションで読み込む" tabindex="-1">JSONファイルをオプションで読み込む <a class="header-anchor" href="#jsonファイルをオプションで読み込む" aria-label="Permalink to &quot;JSONファイルをオプションで読み込む&quot;">​</a></h3><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// コメントと末尾のカンマを許容してJSONファイルを読み込む。</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_read_flag flg </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> YYJSON_READ_ALLOW_COMMENTS </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> YYJSON_READ_ALLOW_TRAILING_COMMAS</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_read_err err</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_doc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">doc </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_read_file</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/tmp/config.json</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> flg</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">NULL,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;font-style:italic;">err</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// ルートオブジェクトを反復処理する</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">doc</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    yyjson_val </span><span style="color:#89DDFF;">*</span><span style="color:#F07178;">obj </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">yyjson_doc_get_root</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">doc</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">    yyjson_obj_iter iter</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">yyjson_obj_iter_init</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">obj</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&amp;</span><span style="color:#F07178;">iter</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">    yyjson_val </span><span style="color:#89DDFF;">*</span><span style="color:#F07178;">key</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">*</span><span style="color:#F07178;">val</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">while</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">((</span><span style="color:#F07178;">key </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">yyjson_obj_iter_next</span><span style="color:#89DDFF;">(&amp;</span><span style="color:#F07178;">iter</span><span style="color:#89DDFF;">)))</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        val </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">yyjson_obj_iter_get_val</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">key</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#82AAFF;">printf</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">%s: %s</span><span style="color:#A6ACCD;">\\n</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">yyjson_get_str</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">key</span><span style="color:#89DDFF;">),</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">yyjson_get_type_desc</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">val</span><span style="color:#89DDFF;">));</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">else</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">printf</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">read error (%u): %s at position: %ld</span><span style="color:#A6ACCD;">\\n</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">err</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">code</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">err</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">msg</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">err</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">pos</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// docを解放する</span></span>
<span class="line"><span style="color:#82AAFF;">yyjson_doc_free</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">doc</span><span style="color:#89DDFF;">);</span></span></code></pre></div><h3 id="オプションでjsonファイルを書く" tabindex="-1">オプションでJSONファイルを書く <a class="header-anchor" href="#オプションでjsonファイルを書く" aria-label="Permalink to &quot;オプションでJSONファイルを書く&quot;">​</a></h3><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// JSONファイルをミュータブルドックとして読み込む</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_doc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">idoc </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_read_file</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/tmp/config.json</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">NULL,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">NULL);</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_mut_doc </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">doc </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_doc_mut_copy</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">idoc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">NULL);</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">obj </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_mut_doc_get_root</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">doc</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// ルートオブジェクトのNULL値を削除する</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_mut_obj_iter iter</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#82AAFF;">yyjson_mut_obj_iter_init</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">obj</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;font-style:italic;">iter</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_mut_val </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">key</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">val</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">while</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">((</span><span style="color:#A6ACCD;">key </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">yyjson_mut_obj_iter_next</span><span style="color:#89DDFF;">(&amp;</span><span style="color:#A6ACCD;font-style:italic;">iter</span><span style="color:#89DDFF;">)))</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    val </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">yyjson_mut_obj_iter_get_val</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">key</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">yyjson_mut_is_null</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">val</span><span style="color:#89DDFF;">))</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#82AAFF;">yyjson_mut_obj_iter_remove</span><span style="color:#89DDFF;">(&amp;</span><span style="color:#F07178;">iter</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// jsonをきれいに書く、unicodeをエスケープする</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_write_flag flg </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> YYJSON_WRITE_PRETTY </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> YYJSON_WRITE_ESCAPE_UNICODE</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">yyjson_write_err err</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#82AAFF;">yyjson_mut_write_file</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/tmp/config.json</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> doc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> flg</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">NULL,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;font-style:italic;">err</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">err.code</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">printf</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">write error (%u): %s</span><span style="color:#A6ACCD;">\\n</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">err</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">code</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">err</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">msg</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// docを解放する</span></span>
<span class="line"><span style="color:#82AAFF;">yyjson_doc_free</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">idoc</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#82AAFF;">yyjson_mut_doc_free</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">doc</span><span style="color:#89DDFF;">);</span></span></code></pre></div><h1 id="ドキュメンテーション" tabindex="-1">ドキュメンテーション <a class="header-anchor" href="#ドキュメンテーション" aria-label="Permalink to &quot;ドキュメンテーション&quot;">​</a></h1><ul><li><a href="https://ibireme.github.io/yyjson/doc/doxygen/html/" target="_blank" rel="noreferrer">ホームページ</a><ul><li><a href="https://ibireme.github.io/yyjson/doc/doxygen/html/md_doc__build_and_test.html" target="_blank" rel="noreferrer">ビルドとテスト</a></li><li><a href="https://ibireme.github.io/yyjson/doc/doxygen/html/md_doc__a_p_i.html" target="_blank" rel="noreferrer">APIとサンプルコード</a></li><li><a href="https://ibireme.github.io/yyjson/doc/doxygen/html/md_doc__data_structure.html" target="_blank" rel="noreferrer">データ構造</a></li><li><a href="https://ibireme.github.io/yyjson/doc/doxygen/html/md__c_h_a_n_g_e_l_o_g.html" target="_blank" rel="noreferrer">チェンジログ</a></li></ul></li></ul><h1 id="todo" tabindex="-1">TODO <a class="header-anchor" href="#todo" aria-label="Permalink to &quot;TODO&quot;">​</a></h1><ul><li>[x] ドキュメントページを追加する。</li><li>[x] CIとcodecovのためのGitHubワークフローを追加。</li><li>[x] テストの追加：valgrind、sanitizer。</li><li>[x] ドキュメントから値を問い合わせるためのJSONポインタをサポートします。</li><li>[x] ファザーを追加する。</li><li>[x] JSON リーダとライタに <code>RAW</code> 型を追加した。</li><li>[ ] JSONリーダー、ライターのストリーミングAPIを追加。</li><li>[ ] パフォーマンスに関するドキュメントを追加する。</li><li>[ ] 32ビットプロセッサー用にパフォーマンスを最適化します。</li></ul><h1 id="ライセンス" tabindex="-1">ライセンス <a class="header-anchor" href="#ライセンス" aria-label="Permalink to &quot;ライセンス&quot;">​</a></h1><p>このプロジェクトはMITライセンスで公開されています。</p>`,32),t=[p];function e(r,c,y,D,F,i){return n(),a("div",null,t)}const d=s(l,[["render",e]]);export{C as __pageData,d as default};
