import{_ as s,c as l,o as a,a as n}from"./app.e18c80f2.js";const d=JSON.parse('{"title":"デバッグプリントを有効にする方法","description":"","frontmatter":{},"headers":[{"level":2,"title":"Duktape 1.x","slug":"duktape-1-x","link":"#duktape-1-x","children":[]},{"level":2,"title":"Duktape 2.x","slug":"duktape-2-x","link":"#duktape-2-x","children":[]}],"relativePath":"translation/duktape/wiki/how_to_enable_debug_prints.md","lastUpdated":1676126774000}'),e={name:"translation/duktape/wiki/how_to_enable_debug_prints.md"},o=n(`<h1 id="デバッグプリントを有効にする方法" tabindex="-1">デバッグプリントを有効にする方法 <a class="header-anchor" href="#デバッグプリントを有効にする方法" aria-hidden="true">#</a></h1><h2 id="duktape-1-x" tabindex="-1">Duktape 1.x <a class="header-anchor" href="#duktape-1-x" aria-hidden="true">#</a></h2><ul><li>DUK_OPT_DEBUGを有効にする / DUK_USE_DEBUG</li><li>DUK_OPT_DPRINTを有効にする / DUK_USE_DPRINT 最小限のログを取得する。</li><li>DUK_OPT_DDPRINTも有効にする / DUK_USE_DDPRINT 詳細なログを出力する場合</li><li>DUK_OPT_DDDPRINTも有効にする / DUK_USE_DDDPRINT 非常に冗長なログを出力します。</li></ul><p>ログは標準エラー出力に書き込まれます。</p><h2 id="duktape-2-x" tabindex="-1">Duktape 2.x <a class="header-anchor" href="#duktape-2-x" aria-hidden="true">#</a></h2><ul><li>Enable DUK_USE_DEBUG</li><li>DUK_USE_DEBUG_LEVEL=<code>&lt;n&gt;</code>を定義する。nは最小ログを0、冗長ログを1、超冗長ログを2にする。</li><li>DUK_USE_DEBUG_WRITE(level,file,line,func,msg) を定義して、ログエントリを書き出す; これにより、デバッグログがどこに行くかを完全に制御できる</li></ul><p>手動で編集した duk_config.h の DUK_USE_DEBUG_WRITE の例です。</p><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">#define</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">DUK_USE_DEBUG_WRITE</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">level</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;font-style:italic;">file</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;font-style:italic;">line</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;font-style:italic;">func</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;font-style:italic;">msg</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">do</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">\\</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#82AAFF;">fprintf</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">stderr</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">D%ld %s:%d (%s): %s</span><span style="color:#A6ACCD;">\\n</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">\\</span></span>
<span class="line"><span style="color:#F07178;">                </span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">long</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">level</span><span style="color:#89DDFF;">),</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">file</span><span style="color:#89DDFF;">),</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">long</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">line</span><span style="color:#89DDFF;">),</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">func</span><span style="color:#89DDFF;">),</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">msg</span><span style="color:#89DDFF;">));</span></span>
<span class="line"><span style="color:#A6ACCD;">    } </span><span style="color:#89DDFF;font-style:italic;">while</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span></code></pre></div><p>tools/configure.py の引数と同じ関数です。</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">&#39;-DDUK_USE_DEBUG_WRITE(level,file,line,func,msg)=do {fprintf(stderr, &quot;D%ld %s:%ld (%s): %s\\n&quot;, (long) (level), (file), (long) (line), (func), (msg));} while(0)&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div>`,10),p=[o];function t(c,r,D,i,F,y){return a(),l("div",null,p)}const u=s(e,[["render",t]]);export{d as __pageData,u as default};
