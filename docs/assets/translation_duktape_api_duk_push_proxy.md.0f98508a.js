import{_ as s,o as a,c as p,Q as n}from"./chunks/framework.43c433ff.js";const E=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"translation/duktape/api/duk_push_proxy.md","filePath":"translation/duktape/api/duk_push_proxy.md","lastUpdated":1676126774000}'),o={name:"translation/duktape/api/duk_push_proxy.md"},l=n(`<h2 id="duk-push-proxy" tabindex="-1">duk_push_proxy() <a class="header-anchor" href="#duk-push-proxy" aria-label="Permalink to &quot;duk_push_proxy()&quot;">​</a></h2><p>2.2.0 stack object</p><h3 id="プロトタイプ" tabindex="-1">プロトタイプ <a class="header-anchor" href="#プロトタイプ" aria-label="Permalink to &quot;プロトタイプ&quot;">​</a></h3><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#79B8FF;">duk_idx_t</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">duk_push_proxy</span><span style="color:#E1E4E8;">(duk_context </span><span style="color:#F97583;">*</span><span style="color:#FFAB70;">ctx</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">duk_uint_t</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">proxy_flags</span><span style="color:#E1E4E8;">);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#005CC5;">duk_idx_t</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">duk_push_proxy</span><span style="color:#24292E;">(duk_context </span><span style="color:#D73A49;">*</span><span style="color:#E36209;">ctx</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">duk_uint_t</span><span style="color:#24292E;"> </span><span style="color:#E36209;">proxy_flags</span><span style="color:#24292E;">);</span></span></code></pre></div><h3 id="スタック" tabindex="-1">スタック <a class="header-anchor" href="#スタック" aria-label="Permalink to &quot;スタック&quot;">​</a></h3><p>| ... | target | handler | -&gt; | ... | proxy |</p><h3 id="要約" tabindex="-1">要約 <a class="header-anchor" href="#要約" aria-label="Permalink to &quot;要約&quot;">​</a></h3><p>new Proxy(target, handler)に相当する、ターゲットとハンドラのテーブルに対する 新しいProxyオブジェクトをバリュースタックにプッシュします。proxy_flagsは現在(Duktape 2.5まで)未使用です。</p><h3 id="例" tabindex="-1">例 <a class="header-anchor" href="#例" aria-label="Permalink to &quot;例&quot;">​</a></h3><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#79B8FF;">duk_idx_t</span><span style="color:#E1E4E8;"> proxy_idx;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">duk_push_object</span><span style="color:#E1E4E8;">(ctx);</span><span style="color:#6A737D;">  /* target */</span></span>
<span class="line"><span style="color:#B392F0;">duk_push_object</span><span style="color:#E1E4E8;">(ctx);</span><span style="color:#6A737D;">  /* handler */</span></span>
<span class="line"><span style="color:#B392F0;">duk_push_c_function</span><span style="color:#E1E4E8;">(ctx, my_get, </span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">);</span><span style="color:#6A737D;">  /* &#39;get&#39; trap */</span></span>
<span class="line"><span style="color:#B392F0;">duk_put_prop_string</span><span style="color:#E1E4E8;">(ctx, </span><span style="color:#F97583;">-</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;get&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">proxy_idx </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">duk_push_proxy</span><span style="color:#E1E4E8;">(ctx, </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">);</span><span style="color:#6A737D;">  /* [ target handler ] -&gt; [ proxy ] */</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#005CC5;">duk_idx_t</span><span style="color:#24292E;"> proxy_idx;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">duk_push_object</span><span style="color:#24292E;">(ctx);</span><span style="color:#6A737D;">  /* target */</span></span>
<span class="line"><span style="color:#6F42C1;">duk_push_object</span><span style="color:#24292E;">(ctx);</span><span style="color:#6A737D;">  /* handler */</span></span>
<span class="line"><span style="color:#6F42C1;">duk_push_c_function</span><span style="color:#24292E;">(ctx, my_get, </span><span style="color:#005CC5;">3</span><span style="color:#24292E;">);</span><span style="color:#6A737D;">  /* &#39;get&#39; trap */</span></span>
<span class="line"><span style="color:#6F42C1;">duk_put_prop_string</span><span style="color:#24292E;">(ctx, </span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;get&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">proxy_idx </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">duk_push_proxy</span><span style="color:#24292E;">(ctx, </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">);</span><span style="color:#6A737D;">  /* [ target handler ] -&gt; [ proxy ] */</span></span></code></pre></div>`,10),t=[l];function e(r,c,y,d,i,_){return a(),p("div",null,t)}const h=s(o,[["render",e]]);export{E as __pageData,h as default};
